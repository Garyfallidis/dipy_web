{"body": "<div class=\"section\" id=\"the-b-matrix-and-siemens-dicom\">\n<h1>The B matrix and Siemens DICOM<a class=\"headerlink\" href=\"#the-b-matrix-and-siemens-dicom\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This is a short note to explain the nature of the <code class=\"docutils literal\"><span class=\"pre\">B_matrix</span></code> found in the\nSiemens private (CSA) fields of the DICOM headers of a diffusion weighted\nacquisition.  We trying to explain the relationship between the <code class=\"docutils literal\"><span class=\"pre\">B_matrix</span></code> and\nthe <em>b value</em> and the <em>gradient vector</em>.  The acquisition is made with a planned\n(requested) b value - say <img class=\"math\" src=\"../../_images/math/bbfcdf58b57a117124971e050f76b2d21adc4fe3.png\" alt=\"b_{req} = 1000\"/>, and with a requested gradient\ndirection <img class=\"math\" src=\"../../_images/math/d160557712681a358a646fe448ccc1f21ceeab7a.png\" alt=\"\\mathbf{g}_{req} = [g_x, g_y, g_z]\"/> (supposedly a unit vector).</p>\n<p>Note that here we&#8217;re using <img class=\"math\" src=\"../../_images/math/dd9f8e4fa6ad795780215243cbd5a5719b772ad3.png\" alt=\"\\mathbf{q}\"/> in the sense of an approximation\nto a vector in <img class=\"math\" src=\"../../_images/math/23f1b45408e5b4130c0f940fcbfcec54492cbdcd.png\" alt=\"q\"/> space.  Other people use <img class=\"math\" src=\"../../_images/math/dd6a0c79ee7e76c8e6f1310a5d171d5b3848b685.png\" alt=\"\\mathbf{b}\"/> for the same\nconcept, but we&#8217;ve chosen <img class=\"math\" src=\"../../_images/math/dd9f8e4fa6ad795780215243cbd5a5719b772ad3.png\" alt=\"\\mathbf{q}\"/> to make the exposition clearer.</p>\n<p>For some purposes we want the q vector <img class=\"math\" src=\"../../_images/math/9204b766e87513e8b6c4ce8382b371313fd1d3bd.png\" alt=\"\\mathbf{q}_{actual}\"/> which is\nequal to <img class=\"math\" src=\"../../_images/math/54566a73adaa663d09c87ff6117cd4b857536651.png\" alt=\"b_{actual} . \\mathbf{g}_{actual}\"/>. We need to be aware that\n<img class=\"math\" src=\"../../_images/math/2fc19b6a7d99f2137d50a532fe9bc1a48f1364d1.png\" alt=\"b_{actual}\"/> and <img class=\"math\" src=\"../../_images/math/f403591003ae6162f7ffd9f44294517e9c0ce280.png\" alt=\"\\mathbf{g}_{actual}\"/> may be different from the\n<img class=\"math\" src=\"../../_images/math/161d023e8b95e9124545b1d893cbe0ad3e4f6558.png\" alt=\"b_{req}\"/> and <img class=\"math\" src=\"../../_images/math/ec17d611a088db700c8e1abe9ba8ef8f714143d3.png\" alt=\"\\mathbf{g}_{req}\"/>!  Though the Stejskal and Tanner\nformula is available for the classic PGSE sequence, a different sequence\nmay be used (e.g. TRSE on Siemens Trio), and anyway the ramps up and\ndown on the gradient field will not be rectangular. The Siemens scanner\nsoftware calculates the effective directional diffusion weighting of the\nacquisition on the basis of the temporal profile of the applied gradient\nvector field. These are in the form of the 6 <code class=\"docutils literal\"><span class=\"pre\">B_matrix</span></code> values\n<img class=\"math\" src=\"../../_images/math/c579c87770f42fc5f6912bf7c2dcc22622d0c0e5.png\" alt=\"[b_{xx}, b_{xy}, b_{xz}, b_{yy}, b_{yz}, b_{zz}]\"/>.</p>\n<p>In this form they are suitable for use in a least squares estimation of\nthe diffusion tensor via the equations across the set of acquisitions:</p>\n<div class=\"math\">\n<p><img src=\"../../_images/math/3b8fb3285982c12c8b8a840787e11e3099859ddd.png\" alt=\"\\log(A(\\mathbf{q})/A(0)) = -(b_{xx}D_{xx} + 2b_{xy}D_{xy} + 2b_{xz}D_{xz} + \\\n   b_{yy}D_{yy} + 2b_{yz}D_{yz} + b_{zz}D_{zz})\"/></p>\n</div><p>The gradient field typically stays in the one gradient direction, in\nthis case the relationship between <img class=\"math\" src=\"../../_images/math/dd9f8e4fa6ad795780215243cbd5a5719b772ad3.png\" alt=\"\\mathbf{q}\"/> and the <img class=\"math\" src=\"../../_images/math/c0ed827e5788f08b1d6eefce8acb2681c74c38ae.png\" alt=\"b_{ij}\"/> is as\nfollows. If we fill out the symmetric B-matrix as:</p>\n<div class=\"math\">\n<p><img src=\"../../_images/math/7aac101b25d1ee304994448cbc6977597d8c01a4.png\" alt=\"\\mathbf{B} = \\begin{pmatrix}\n              b_{xx} &amp; b_{yx} &amp; b_{yz}\\\\\n              b_{xy} &amp; b_{yy} &amp; b_{xz}\\\\\n              b_{xz} &amp; b_{yz} &amp; b_{zz}\n              \\end{pmatrix}\"/></p>\n</div><p>then <img class=\"math\" src=\"../../_images/math/fb542518f2c3338d27234e14932fd1ab5a311d8b.png\" alt=\"\\mathbf{B}\"/> is equal to the rank 1 tensor\n<img class=\"math\" src=\"../../_images/math/811fbdc103331219c4e58e4259c0dc1f284e18db.png\" alt=\"b\\mathbf{g}\\mathbf{g}^T\"/>. One of the ways to recover <img class=\"math\" src=\"../../_images/math/5e87bf41a96deddf6cb485ff530f153f2590e9cc.png\" alt=\"b\"/> and <img class=\"math\" src=\"../../_images/math/44cfef0a87943444f7d88fe77a9df36ba6986b11.png\" alt=\"\\mathbf{g}\"/>,\nand hence <img class=\"math\" src=\"../../_images/math/dd9f8e4fa6ad795780215243cbd5a5719b772ad3.png\" alt=\"\\mathbf{q}\"/>, from\n<img class=\"math\" src=\"../../_images/math/fb542518f2c3338d27234e14932fd1ab5a311d8b.png\" alt=\"\\mathbf{B}\"/> is to do a singular value decomposition of <img class=\"math\" src=\"../../_images/math/60e210aeda32f164be9f29953b77694aba604cbb.png\" alt=\"\\mathbf{B}:\n\\mathbf{B} = \\lambda_1\\mathbf{v}_1\\mathbf{v}_1^T +\n\\lambda_2\\mathbf{v}_2\\mathbf{v}_2^T +\n\\lambda_3\\mathbf{v}_3\\mathbf{v}_3^T\"/>, where only one of the <img class=\"math\" src=\"../../_images/math/3b765ea6939f1eba2541e91f870cb3c078aa29be.png\" alt=\"\\lambda_i\"/>,\nsay <img class=\"math\" src=\"../../_images/math/18cbd415b1a8e3f19977c5d04d046d41c585c7de.png\" alt=\"\\lambda_1\"/>, is effectively non-zero. Then <img class=\"math\" src=\"../../_images/math/0db17b75290206eff39357baa75eb28f8624b4f7.png\" alt=\"b = \\lambda_1\"/>, <img class=\"math\" src=\"../../_images/math/702e1bb574297c4b178e6d135d40deee9fc11e84.png\" alt=\"\\mathbf{g} =\n\\pm\\mathbf{v}_1,\"/> and <img class=\"math\" src=\"../../_images/math/ea51a04036cd5bc09ab114551d83e3b1e677ddf6.png\" alt=\"\\mathbf{q} =\n\\pm\\lambda_1\\mathbf{v}_1.\"/> The choice of sign is arbitrary\n(essentially we have a choice between two possible square roots of the\nrank 1 tensor <img class=\"math\" src=\"../../_images/math/fb542518f2c3338d27234e14932fd1ab5a311d8b.png\" alt=\"\\mathbf{B}\"/>). Once we have <img class=\"math\" src=\"../../_images/math/9204b766e87513e8b6c4ce8382b371313fd1d3bd.png\" alt=\"\\mathbf{q}_{actual}\"/> we can\ncalculate <img class=\"math\" src=\"../../_images/math/a1837c8f5553338135a84c8574e1bc71e24f1b4d.png\" alt=\"b_{actual} = |\\mathbf{q}_{actual}|\"/> and <img class=\"math\" src=\"../../_images/math/544189f4dbd441fa8129e86faeae9a6eeb9fb674.png\" alt=\"\\mathbf{g}_{actual}\n= \\mathbf{q}_{actual} / b_{actual}\"/>. Various sofware packages\n(e.g. FSL&#8217;s DFT-DTIFIT) expect to get 3 \u00d7 N and 1 \u00d7 N arrays of\n<img class=\"math\" src=\"../../_images/math/f403591003ae6162f7ffd9f44294517e9c0ce280.png\" alt=\"\\mathbf{g}_{actual}\"/> and <img class=\"math\" src=\"../../_images/math/2fc19b6a7d99f2137d50a532fe9bc1a48f1364d1.png\" alt=\"b_{actual}\"/> values as their inputs.</p>\n</div>\n", "alabaster_version": "0.7.7", "display_toc": false, "title": "The B matrix and Siemens DICOM", "sourcename": "theory/bmatrix.rst.txt", "customsidebar": null, "metatags": "", "current_page_name": "theory/bmatrix", "next": null, "rellinks": [["genindex", "General Index", "I", "index"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">The B matrix and Siemens DICOM</a></li>\n</ul>\n", "prev": null, "page_source_suffix": ".rst"}