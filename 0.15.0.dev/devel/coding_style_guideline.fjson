{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "DIPY development"}], "prev": {"link": "../commit_codes/", "title": "Commit message codes"}, "next": {"link": "../python3/", "title": "Keeping code compatible with Pythons 2 and 3"}, "title": "DIPY Coding Style Guideline", "meta": {}, "body": "<div class=\"section\" id=\"dipy-coding-style-guideline\">\n<span id=\"coding-style-guideline\"></span><h1>DIPY Coding Style Guideline<a class=\"headerlink\" href=\"#dipy-coding-style-guideline\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The main principles behind <a class=\"reference external\" href=\"http://dipy.org\">DIPY</a> development are:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><strong>Robustness</strong>: the results of a piece of code must be verified\nsystematically, and hence stability and robustness of the code must be\nensured, reducing code redundancies.</li>\n<li><strong>Readability</strong>: the code is written and read by humans, and it is read\nmuch more frequently than it is written.</li>\n<li><strong>Consistency</strong>: following these guidelines will ease reading the code,\nand will make it less error-prone.</li>\n<li><strong>Documentation</strong>: document the code. Documentation is essential as it is\none of the key points for the adoption of DIPY as the toolkit of choice in\ndiffusion by the scientific community. Documenting helps clarifying\ncertain choices, helps avoiding obscure places, and is a way to allow\nother members <em>decode</em> it with less effort.</li>\n<li><strong>Language</strong>: the code must be written in English. Norms and spelling\nshould be abided by.</li>\n</ul>\n</div></blockquote>\n<div class=\"section\" id=\"coding-style\">\n<h2>Coding style<a class=\"headerlink\" href=\"#coding-style\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>DIPY uses the standard Python <a class=\"reference external\" href=\"https://www.python.org/dev/peps/pep-0008/\">PEP8</a> style to ensure the\nreadability and consistency across the toolkit. Conformance to the PEP8 syntax\nis checked automatically when requesting to push to DIPY. There are\n<a class=\"reference external\" href=\"https://pypi.python.org/pypi/pep8\">software systems</a> that will check your\ncode for PEP8 compliance, and most text editors can be configured to check the\ncompliance of your code with PEP8. Beyond the aspects checked, as a\ncontributor to DIPY, you should try to ensure that your code, including\ncomments, conform to the above principles.</p>\n</div>\n<div class=\"section\" id=\"documentation\">\n<h2>Documentation<a class=\"headerlink\" href=\"#documentation\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>DIPY uses <a class=\"reference external\" href=\"http://www.sphinx-doc.org/en/stable/index.html\">Sphinx</a> to\ngenerate documentation. We welcome contributions of examples, and suggestions\nfor changes in the documentation, but please make sure that changes that are\nintroduced render properly into the HTML format that is used for the DIPY\nwebsite.</p>\n<p>DIPY follows the <a class=\"reference external\" href=\"https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\">numpy docstring standard</a>\nfor documenting modules, classes, functions, and examples.</p>\n<p>The documentation includes an extensive library of\n<a class=\"reference external\" href=\"http://dipy.org/examples_index.html\">examples</a>. These are Python files that\nare stored in the <code class=\"docutils literal notranslate\"><span class=\"pre\">doc/examples</span></code> folder and contain code to execute the\nexample, interleaved with multi-line comments that contain explanations of the\nblocks of code. Examples demonstrate how to perform processing (segmentation,\ntracking, etc.) on diffusion files using the DIPY classes. The code is\nintermixed with generous comments that describe the former, and the rationale\nand aim of it. If you are contributing a new feature to DIPY, please provide\nan extended example, with explanations of this feature, and references to the\nrelevant papers.</p>\n<p>If the feature that you are working on integrates well into one of the\nexisting examples, please edit the <code class=\"docutils literal notranslate\"><span class=\"pre\">.py</span></code> file of that example. Otherwise,\ncreate a new <code class=\"docutils literal notranslate\"><span class=\"pre\">.py</span></code> file in that directory. Please also add the name of this\nfile into the <code class=\"docutils literal notranslate\"><span class=\"pre\">doc/examples/valid_examples.txt</span></code> file (which controls the\nrendering of these examples into the documentation).</p>\n<p>Additionally, DIPY relies on a set of reStructuredText files (<code class=\"docutils literal notranslate\"><span class=\"pre\">.rst</span></code>)\nlocated in the <code class=\"docutils literal notranslate\"><span class=\"pre\">doc</span></code> folder. They contain information about theoretical\nbackgrounds of DIPY, installation instructions, description of the\ncontribution process, etc.</p>\n<p>Again, both sets of files use the <a class=\"reference external\" href=\"http://www.sphinx-doc.org/en/stable/rest.html\">reStructuredText markup language</a> for comments. Sphinx parses\nthe files to produce the contents that are later rendered in the <a class=\"reference external\" href=\"http://dipy.org\">DIPY</a>\nwebsite.</p>\n<p>The Python examples are compiled, output images produced, and corresponding\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.rst</span></code> files produced so that the comments can be appropriately displayed\nin a web page enriched with images.</p>\n<p>Particularly, in order to ease the contribution of examples and <code class=\"docutils literal notranslate\"><span class=\"pre\">.rst</span></code>\nfiles, and with the consistency criterion in mind, beyond the numpy\ndocstring standard aspects, contributors are encouraged to observe the\nfollowing guidelines:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>The acronym for the Diffusion Imaging in Python toolkit should be written\nas <strong>DIPY</strong>.</li>\n<li>The classes, objects, and any other construct referenced from the code\nshould be written with inverted commas, such as in <em>In DIPY, we use an\nobject called ``GradientTable`` which holds all the acquisition specific\nparameters, e.g. b-values, b-vectors, timings and others.</em></li>\n<li>Cite the relevant papers. Use the <em>[NameYear]</em> convention for\ncross-referencing them, such as in <a class=\"reference internal\" href=\"#garyfallidis2014\" id=\"id1\">[Garyfallidis2014]</a>, and put them\nunder the <a class=\"reference internal\" href=\"#references\"><span class=\"std std-ref\">References</span></a> section.</li>\n<li>Cross-reference related examples and files. Use the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">..</span> <span class=\"pre\">_specific_filename:</span></code> convention to label a file at the top of it.\nThus, other pages will be able to reference the file using the standard\nSphinx syntax <code class=\"docutils literal notranslate\"><span class=\"pre\">:ref:`specific_filename`</span></code>.</li>\n<li>Use an all-caps scheme for acronyms, and capitalize the first letters of\nthe long names, such as in <em>Constrained Spherical Deconvolution (CSD)</em>,\nexcept in those cases where the most common convention has been to use\nlowercase, such as in <em>superior longitudinal fasciculus (SLF)</em>.</li>\n<li>As customary in Python, use lowercase and separate words with underscores\nfor filenames, labels for references, etc.</li>\n<li>When including figures, use the regular font for captions (i.e. do not use\nbold faces), unless otherwise required for a specific text part (e.g. a\nDIPY object, etc.).</li>\n<li>When referring to relative paths, use the backquote inline markup\nconvention, such as in <code class=\"docutils literal notranslate\"><span class=\"pre\">doc/devel</span></code>. Do not add the\ngreater-than/less-than signs to enclose the path.</li>\n</ul>\n</div></blockquote>\n<div class=\"section\" id=\"references\">\n<span id=\"id2\"></span><h3>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<table class=\"docutils citation\" frame=\"void\" id=\"garyfallidis2014\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id1\">[Garyfallidis2014]</a></td><td>Garyfallidis E, Brett M, Amirbekian B, Rokem A, van der\nWalt S, Descoteaux M, Nimmo-Smith I and Dipy Contributors (2014). <a class=\"reference external\" href=\"http://journal.frontiersin.org/Journal/10.3389/fninf.2014.00008/abstract\">Dipy, a\nlibrary for the analysis of diffusion MRI data.</a>\nFrontiers in Neuroinformatics, vol.8, no.8.</td></tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["devel/python3", "Keeping code compatible with Pythons 2 and 3", "N", "next"], ["devel/commit_codes", "Commit message codes", "P", "previous"]], "sourcename": "devel/coding_style_guideline.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">DIPY Coding Style Guideline</a><ul>\n<li><a class=\"reference internal\" href=\"#coding-style\">Coding style</a></li>\n<li><a class=\"reference internal\" href=\"#documentation\">Documentation</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "devel/coding_style_guideline", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.11"}