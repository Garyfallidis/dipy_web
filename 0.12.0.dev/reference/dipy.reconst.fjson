{"parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "prev": null, "next": null, "title": "<code class=\"docutils literal\"><span class=\"pre\">reconst</span></code>", "meta": {}, "body": "<div class=\"section\" id=\"module-dipy.reconst\">\n<span id=\"reconst\"></span><h1><code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.bench\" title=\"dipy.reconst.bench\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bench</span></code></a></td>\n<td>Run benchmarks for module using nose.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.test\" title=\"dipy.reconst.test\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">test</span></code></a></td>\n<td>Run tests for module using nose.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"module-dipy.reconst.base\">\n<span id=\"module-reconst-base\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.base</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.base\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Base-classes for reconstruction models and reconstruction fits.</p>\n<p>All the models in the reconst module follow the same template: a Model object\nis used to represent the abstract properties of the model, that are independent\nof the specifics of the data . These properties are reused whenver fitting a\nparticular set of data (different voxels, for example).</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstFit</span></code></a>(model,&nbsp;data)</td>\n<td>Abstract class which holds the fit result of ReconstModel</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstModel</span></code></a>(gtab)</td>\n<td>Abstract class for signal reconstruction models</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.benchmarks\">\n<span id=\"module-reconst-benchmarks\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.benchmarks</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.benchmarks\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.benchmarks.bench_bounding_box\">\n<span id=\"module-reconst-benchmarks-bench-bounding-box\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.benchmarks.bench_bounding_box</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.benchmarks.bench_bounding_box\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_bounding_box.bench_bounding_box\" title=\"dipy.reconst.benchmarks.bench_bounding_box.bench_bounding_box\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bench_bounding_box</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_bounding_box.bounding_box\" title=\"dipy.reconst.benchmarks.bench_bounding_box.bounding_box\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bounding_box</span></code></a>(vol)</td>\n<td>Compute the bounding box of nonzero intensity voxels in the volume.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_bounding_box.measure\" title=\"dipy.reconst.benchmarks.bench_bounding_box.measure\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">measure</span></code></a>(code_str[,&nbsp;times,&nbsp;label])</td>\n<td>Return elapsed time for executing code in the namespace of the caller.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.benchmarks.bench_csd\">\n<span id=\"module-reconst-benchmarks-bench-csd\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.benchmarks.bench_csd</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.benchmarks.bench_csd\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel\" title=\"dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ConstrainedSphericalDeconvModel</span></code></a>(gtab,&nbsp;response)</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable\" title=\"dipy.reconst.benchmarks.bench_csd.GradientTable\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">GradientTable</span></code></a>(gradients[,&nbsp;big_delta,&nbsp;...])</td>\n<td>Diffusion gradient information</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.bench_csdeconv\" title=\"dipy.reconst.benchmarks.bench_csd.bench_csdeconv\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bench_csdeconv</span></code></a>([center,&nbsp;width])</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.num_grad\" title=\"dipy.reconst.benchmarks.bench_csd.num_grad\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">num_grad</span></code></a>(gtab)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.read_stanford_labels\" title=\"dipy.reconst.benchmarks.bench_csd.read_stanford_labels\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">read_stanford_labels</span></code></a>()</td>\n<td>Read stanford hardi data and label map</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.benchmarks.bench_peaks\">\n<span id=\"module-reconst-benchmarks-bench-peaks\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.benchmarks.bench_peaks</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.benchmarks.bench_peaks\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Benchmarks for peak finding</p>\n<p>Run all benchmarks with:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">dipy.reconst</span> <span class=\"k\">as</span> <span class=\"nn\">dire</span>\n<span class=\"n\">dire</span><span class=\"o\">.</span><span class=\"n\">bench</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>If you have doctests enabled by default in nose (with a noserc file or\nenvironment variable), and you have a numpy version &lt;= 1.6.1, this will also\nrun the doctests, let&#8217;s hope they pass.</p>\n<p>Run this benchmark with:</p>\n<blockquote>\n<div>nosetests -s &#8211;match &#8216;(?:^|[b_.//-])[Bb]ench&#8217; /path/to/bench_peaks.py</div></blockquote>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_peaks.bench_local_maxima\" title=\"dipy.reconst.benchmarks.bench_peaks.bench_local_maxima\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bench_local_maxima</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_peaks.get_sphere\" title=\"dipy.reconst.benchmarks.bench_peaks.get_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_sphere</span></code></a>([name])</td>\n<td>provide triangulated spheres</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_peaks.local_maxima\" title=\"dipy.reconst.benchmarks.bench_peaks.local_maxima\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">local_maxima</span></code></a></td>\n<td>Local maxima of a function evaluated on a discrete set of points.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_peaks.measure\" title=\"dipy.reconst.benchmarks.bench_peaks.measure\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">measure</span></code></a>(code_str[,&nbsp;times,&nbsp;label])</td>\n<td>Return elapsed time for executing code in the namespace of the caller.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_peaks.unique_edges\" title=\"dipy.reconst.benchmarks.bench_peaks.unique_edges\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">unique_edges</span></code></a>(faces[,&nbsp;return_mapping])</td>\n<td>Extract all unique edges from given triangular faces.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.benchmarks.bench_squash\">\n<span id=\"module-reconst-benchmarks-bench-squash\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.benchmarks.bench_squash</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.benchmarks.bench_squash\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Benchmarks for fast squashing</p>\n<p>Run all benchmarks with:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">dipy.reconst</span> <span class=\"k\">as</span> <span class=\"nn\">dire</span>\n<span class=\"n\">dire</span><span class=\"o\">.</span><span class=\"n\">bench</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>If you have doctests enabled by default in nose (with a noserc file or\nenvironment variable), and you have a numpy version &lt;= 1.6.1, this will also\nrun the doctests, let&#8217;s hope they pass.</p>\n<p>Run this benchmark with:</p>\n<blockquote>\n<div>nosetests -s &#8211;match &#8216;(?:^|[b_.//-])[Bb]ench&#8217; /path/to/bench_squash.py</div></blockquote>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_squash.bench_quick_squash\" title=\"dipy.reconst.benchmarks.bench_squash.bench_quick_squash\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bench_quick_squash</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_squash.measure\" title=\"dipy.reconst.benchmarks.bench_squash.measure\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">measure</span></code></a>(code_str[,&nbsp;times,&nbsp;label])</td>\n<td>Return elapsed time for executing code in the namespace of the caller.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_squash.ndindex\" title=\"dipy.reconst.benchmarks.bench_squash.ndindex\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ndindex</span></code></a>(shape)</td>\n<td>An N-dimensional iterator object to index arrays.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_squash.old_squash\" title=\"dipy.reconst.benchmarks.bench_squash.old_squash\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">old_squash</span></code></a>(arr[,&nbsp;mask,&nbsp;fill])</td>\n<td>Try and make a standard array from an object array</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_squash.quick_squash\" title=\"dipy.reconst.benchmarks.bench_squash.quick_squash\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quick_squash</span></code></a></td>\n<td>Try and make a standard array from an object array</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_squash.reduce\" title=\"dipy.reconst.benchmarks.bench_squash.reduce\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">reduce</span></code></a>((function,&nbsp;sequence[,&nbsp;initial])&nbsp;-&gt;&nbsp;value)</td>\n<td>Apply a function of two arguments cumulatively to the items of a sequence, from left to right, so as to reduce the sequence to a single value.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.benchmarks.bench_vec_val_sum\">\n<span id=\"module-reconst-benchmarks-bench-vec-val-sum\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.benchmarks.bench_vec_val_sum</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.benchmarks.bench_vec_val_sum\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Benchmarks for vec / val summation routine</p>\n<p>Run benchmarks with:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">dipy.reconst</span> <span class=\"k\">as</span> <span class=\"nn\">dire</span>\n<span class=\"n\">dire</span><span class=\"o\">.</span><span class=\"n\">bench</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>If you have doctests enabled by default in nose (with a noserc file or\nenvironment variable), and you have a numpy version &lt;= 1.6.1, this will also\nrun the doctests, let&#8217;s hope they pass.</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_vec_val_sum.bench_vec_val_vect\" title=\"dipy.reconst.benchmarks.bench_vec_val_sum.bench_vec_val_vect\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bench_vec_val_vect</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_vec_val_sum.measure\" title=\"dipy.reconst.benchmarks.bench_vec_val_sum.measure\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">measure</span></code></a>(code_str[,&nbsp;times,&nbsp;label])</td>\n<td>Return elapsed time for executing code in the namespace of the caller.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_vec_val_sum.randn\" title=\"dipy.reconst.benchmarks.bench_vec_val_sum.randn\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">randn</span></code></a>(d0,&nbsp;d1,&nbsp;...,&nbsp;dn)</td>\n<td>Return a sample (or samples) from the &#8220;standard normal&#8221; distribution.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_vec_val_sum.vec_val_vect\" title=\"dipy.reconst.benchmarks.bench_vec_val_sum.vec_val_vect\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vec_val_vect</span></code></a></td>\n<td>Vectorize <cite>vecs</cite>.diag(<cite>vals</cite>).`vecs`.T for last 2 dimensions of <cite>vecs</cite></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_vec_val_sum.with_einsum\" title=\"dipy.reconst.benchmarks.bench_vec_val_sum.with_einsum\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">with_einsum</span></code></a>(f)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.cache\">\n<span id=\"module-reconst-cache\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.cache</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.cache\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache\" title=\"dipy.reconst.cache.Cache\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Cache</span></code></a></td>\n<td>Cache values based on a key object (such as a sphere or gradient table).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.cache.auto_attr\" title=\"dipy.reconst.cache.auto_attr\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">auto_attr</span></code></a>(func)</td>\n<td>Decorator to create OneTimeProperty attributes.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.cross_validation\">\n<span id=\"module-reconst-cross-validation\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.cross_validation</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.cross_validation\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Cross-validation analysis of diffusion models</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.cross_validation.range\" title=\"dipy.reconst.cross_validation.range\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">range</span></code></a>((stop)&nbsp;-&gt;&nbsp;range&nbsp;object)</td>\n<td>range(start, stop[, step]) -&gt; range object</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.cross_validation.coeff_of_determination\" title=\"dipy.reconst.cross_validation.coeff_of_determination\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">coeff_of_determination</span></code></a>(data,&nbsp;model[,&nbsp;axis])</td>\n<td>Calculate the coefficient of determination for a model prediction, relative     to data.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.cross_validation.kfold_xval\" title=\"dipy.reconst.cross_validation.kfold_xval\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">kfold_xval</span></code></a>(model,&nbsp;data,&nbsp;folds,&nbsp;*model_args,&nbsp;...)</td>\n<td>Perform k-fold cross-validation to generate out-of-sample predictions for each measurement.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.csdeconv\">\n<span id=\"module-reconst-csdeconv\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.csdeconv</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.csdeconv\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.AxSymShResponse\" title=\"dipy.reconst.csdeconv.AxSymShResponse\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">AxSymShResponse</span></code></a>(S0,&nbsp;dwi_response[,&nbsp;bvalue])</td>\n<td>A simple wrapper for response functions represented using only axially symmetric, even spherical harmonic functions (ie, m == 0 and n even).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.ConstrainedSDTModel\" title=\"dipy.reconst.csdeconv.ConstrainedSDTModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ConstrainedSDTModel</span></code></a>(gtab,&nbsp;ratio[,&nbsp;...])</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel\" title=\"dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ConstrainedSphericalDeconvModel</span></code></a>(gtab,&nbsp;response)</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.SphHarmFit\" title=\"dipy.reconst.csdeconv.SphHarmFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">SphHarmFit</span></code></a>(model,&nbsp;shm_coef,&nbsp;mask)</td>\n<td>Diffusion data fit to a spherical harmonic model</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.SphHarmModel\" title=\"dipy.reconst.csdeconv.SphHarmModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">SphHarmModel</span></code></a>(gtab)</td>\n<td>To be subclassed by all models that return a SphHarmFit when fit.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.TensorModel\" title=\"dipy.reconst.csdeconv.TensorModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">TensorModel</span></code></a>(gtab[,&nbsp;fit_method,&nbsp;return_S0_hat])</td>\n<td>Diffusion Tensor</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.range\" title=\"dipy.reconst.csdeconv.range\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">range</span></code></a>((stop)&nbsp;-&gt;&nbsp;range&nbsp;object)</td>\n<td>range(start, stop[, step]) -&gt; range object</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.auto_response\" title=\"dipy.reconst.csdeconv.auto_response\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">auto_response</span></code></a>(gtab,&nbsp;data[,&nbsp;roi_center,&nbsp;...])</td>\n<td>Automatic estimation of response function using FA.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.cart2sphere\" title=\"dipy.reconst.csdeconv.cart2sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cart2sphere</span></code></a>(x,&nbsp;y,&nbsp;z)</td>\n<td>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.csdeconv\" title=\"dipy.reconst.csdeconv.csdeconv\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">csdeconv</span></code></a>(dwsignal,&nbsp;X,&nbsp;B_reg[,&nbsp;tau,&nbsp;...])</td>\n<td>Constrained-regularized spherical deconvolution (CSD) [R60]</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.estimate_response\" title=\"dipy.reconst.csdeconv.estimate_response\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">estimate_response</span></code></a>(gtab,&nbsp;evals,&nbsp;S0)</td>\n<td>Estimate single fiber response function</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.fa_trace_to_lambdas\" title=\"dipy.reconst.csdeconv.fa_trace_to_lambdas\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fa_trace_to_lambdas</span></code></a>([fa,&nbsp;trace])</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.forward_sdeconv_mat\" title=\"dipy.reconst.csdeconv.forward_sdeconv_mat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">forward_sdeconv_mat</span></code></a>(r_rh,&nbsp;n)</td>\n<td>Build forward spherical deconvolution matrix</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.forward_sdt_deconv_mat\" title=\"dipy.reconst.csdeconv.forward_sdt_deconv_mat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">forward_sdt_deconv_mat</span></code></a>(ratio,&nbsp;n[,&nbsp;r2_term])</td>\n<td>Build forward sharpening deconvolution transform (SDT) matrix</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.fractional_anisotropy\" title=\"dipy.reconst.csdeconv.fractional_anisotropy\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fractional_anisotropy</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Fractional anisotropy (FA) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.get_sphere\" title=\"dipy.reconst.csdeconv.get_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_sphere</span></code></a>([name])</td>\n<td>provide triangulated spheres</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.lazy_index\" title=\"dipy.reconst.csdeconv.lazy_index\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lazy_index</span></code></a>(index)</td>\n<td>Produces a lazy index</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.lpn\" title=\"dipy.reconst.csdeconv.lpn\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lpn</span></code></a>(n,&nbsp;z)</td>\n<td>Legendre function of the first kind.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.multi_voxel_fit\" title=\"dipy.reconst.csdeconv.multi_voxel_fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">multi_voxel_fit</span></code></a>(single_voxel_fit)</td>\n<td>Method decorator to turn a single voxel model fit</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.ndindex\" title=\"dipy.reconst.csdeconv.ndindex\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ndindex</span></code></a>(shape)</td>\n<td>An N-dimensional iterator object to index arrays.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.odf_deconv\" title=\"dipy.reconst.csdeconv.odf_deconv\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf_deconv</span></code></a>(odf_sh,&nbsp;R,&nbsp;B_reg[,&nbsp;lambda_,&nbsp;tau,&nbsp;...])</td>\n<td>ODF constrained-regularized spherical deconvolution using the Sharpening Deconvolution Transform (SDT) [R63], [R64].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.odf_sh_to_sharp\" title=\"dipy.reconst.csdeconv.odf_sh_to_sharp\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf_sh_to_sharp</span></code></a>(odfs_sh,&nbsp;sphere[,&nbsp;basis,&nbsp;...])</td>\n<td>Sharpen odfs using the sharpening deconvolution transform [R67]</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.peaks_from_model\" title=\"dipy.reconst.csdeconv.peaks_from_model\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">peaks_from_model</span></code></a>(model,&nbsp;data,&nbsp;sphere,&nbsp;...[,&nbsp;...])</td>\n<td>Fits the model to data and computes peaks and metrics</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.quad\" title=\"dipy.reconst.csdeconv.quad\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quad</span></code></a>(func,&nbsp;a,&nbsp;b[,&nbsp;args,&nbsp;full_output,&nbsp;...])</td>\n<td>Compute a definite integral.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.real_sph_harm\" title=\"dipy.reconst.csdeconv.real_sph_harm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real_sph_harm</span></code></a>(m,&nbsp;n,&nbsp;theta,&nbsp;phi)</td>\n<td>Compute real spherical harmonics.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.real_sym_sh_basis\" title=\"dipy.reconst.csdeconv.real_sym_sh_basis\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real_sym_sh_basis</span></code></a>(sh_order,&nbsp;theta,&nbsp;phi)</td>\n<td>Samples a real symmetric spherical harmonic basis at point on the sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.recursive_response\" title=\"dipy.reconst.csdeconv.recursive_response\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">recursive_response</span></code></a>(gtab,&nbsp;data[,&nbsp;mask,&nbsp;...])</td>\n<td>Recursive calibration of response function using peak threshold</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.response_from_mask\" title=\"dipy.reconst.csdeconv.response_from_mask\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">response_from_mask</span></code></a>(gtab,&nbsp;data,&nbsp;mask)</td>\n<td>Estimate the response function from a given mask.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.sh_to_rh\" title=\"dipy.reconst.csdeconv.sh_to_rh\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sh_to_rh</span></code></a>(r_sh,&nbsp;m,&nbsp;n)</td>\n<td>Spherical harmonics (SH) to rotational harmonics (RH)</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.single_tensor\" title=\"dipy.reconst.csdeconv.single_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">single_tensor</span></code></a>(gtab[,&nbsp;S0,&nbsp;evals,&nbsp;evecs,&nbsp;snr])</td>\n<td>Simulated Q-space signal with a single tensor.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.sph_harm_ind_list\" title=\"dipy.reconst.csdeconv.sph_harm_ind_list\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sph_harm_ind_list</span></code></a>(sh_order)</td>\n<td>Returns the degree (n) and order (m) of all the symmetric spherical harmonics of degree less then or equal to <cite>sh_order</cite>.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.vec2vec_rotmat\" title=\"dipy.reconst.csdeconv.vec2vec_rotmat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vec2vec_rotmat</span></code></a>(u,&nbsp;v)</td>\n<td>rotation matrix from 2 unit vectors</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.dki\">\n<span id=\"module-reconst-dki\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.dki</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.dki\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Classes and functions for fitting the diffusion kurtosis model</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit\" title=\"dipy.reconst.dki.DiffusionKurtosisFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">DiffusionKurtosisFit</span></code></a>(model,&nbsp;model_params)</td>\n<td>Class for fitting the Diffusion Kurtosis Model</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisModel\" title=\"dipy.reconst.dki.DiffusionKurtosisModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">DiffusionKurtosisModel</span></code></a>(gtab[,&nbsp;fit_method])</td>\n<td>Class for the Diffusion Kurtosis Model</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.ReconstModel\" title=\"dipy.reconst.dki.ReconstModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstModel</span></code></a>(gtab)</td>\n<td>Abstract class for signal reconstruction models</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit\" title=\"dipy.reconst.dki.TensorFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">TensorFit</span></code></a>(model,&nbsp;model_params[,&nbsp;model_S0])</td>\n<td><p class=\"rubric\">Attributes</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.range\" title=\"dipy.reconst.dki.range\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">range</span></code></a>((stop)&nbsp;-&gt;&nbsp;range&nbsp;object)</td>\n<td>range(start, stop[, step]) -&gt; range object</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.Wcons\" title=\"dipy.reconst.dki.Wcons\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Wcons</span></code></a>(k_elements)</td>\n<td>Construct the full 4D kurtosis tensors from its 15 independent</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.Wrotate\" title=\"dipy.reconst.dki.Wrotate\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Wrotate</span></code></a>(kt,&nbsp;Basis)</td>\n<td>Rotate a kurtosis tensor from the standard Cartesian coordinate system</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.Wrotate_element\" title=\"dipy.reconst.dki.Wrotate_element\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Wrotate_element</span></code></a>(kt,&nbsp;indi,&nbsp;indj,&nbsp;indk,&nbsp;indl,&nbsp;B)</td>\n<td>Computes the the specified index element of a kurtosis tensor rotated to the coordinate system basis B.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.apparent_kurtosis_coef\" title=\"dipy.reconst.dki.apparent_kurtosis_coef\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">apparent_kurtosis_coef</span></code></a>(dki_params,&nbsp;sphere[,&nbsp;...])</td>\n<td>Calculates the apparent kurtosis coefficient (AKC) in each direction of a sphere [R75].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.axial_kurtosis\" title=\"dipy.reconst.dki.axial_kurtosis\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">axial_kurtosis</span></code></a>(dki_params[,&nbsp;min_kurtosis,&nbsp;...])</td>\n<td>Computes axial Kurtosis (AK) from the kurtosis tensor.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.carlson_rd\" title=\"dipy.reconst.dki.carlson_rd\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">carlson_rd</span></code></a>(x,&nbsp;y,&nbsp;z[,&nbsp;errtol])</td>\n<td>Computes the Carlson&#8217;s incomplete elliptic integral of the second kind</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.carlson_rf\" title=\"dipy.reconst.dki.carlson_rf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">carlson_rf</span></code></a>(x,&nbsp;y,&nbsp;z[,&nbsp;errtol])</td>\n<td>Computes the Carlson&#8217;s incomplete elliptic integral of the first kind</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.cart2sphere\" title=\"dipy.reconst.dki.cart2sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cart2sphere</span></code></a>(x,&nbsp;y,&nbsp;z)</td>\n<td>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.check_multi_b\" title=\"dipy.reconst.dki.check_multi_b\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">check_multi_b</span></code></a>(gtab,&nbsp;n_bvals[,&nbsp;non_zero,&nbsp;bmag])</td>\n<td>Check if you have enough different b-values in your gradient table</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.decompose_tensor\" title=\"dipy.reconst.dki.decompose_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">decompose_tensor</span></code></a>(tensor[,&nbsp;min_diffusivity])</td>\n<td>Returns eigenvalues and eigenvectors given a diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.design_matrix\" title=\"dipy.reconst.dki.design_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">design_matrix</span></code></a>(gtab)</td>\n<td>Constructs B design matrix for DKI</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.directional_diffusion\" title=\"dipy.reconst.dki.directional_diffusion\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directional_diffusion</span></code></a>(dt,&nbsp;V[,&nbsp;min_diffusivity])</td>\n<td>Calculates the apparent diffusion coefficient (adc) in each direction of a sphere for a single voxel [R79].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.directional_diffusion_variance\" title=\"dipy.reconst.dki.directional_diffusion_variance\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directional_diffusion_variance</span></code></a>(kt,&nbsp;V[,&nbsp;...])</td>\n<td>Calculates the apparent diffusion variance (adv) in each direction of a sphere for a single voxel [R80].</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.directional_kurtosis\" title=\"dipy.reconst.dki.directional_kurtosis\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directional_kurtosis</span></code></a>(dt,&nbsp;md,&nbsp;kt,&nbsp;V[,&nbsp;...])</td>\n<td>Calculates the apparent kurtosis coefficient (akc) in each direction of a sphere for a single voxel [R81].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.dki_prediction\" title=\"dipy.reconst.dki.dki_prediction\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dki_prediction</span></code></a>(dki_params,&nbsp;gtab[,&nbsp;S0])</td>\n<td>Predict a signal given diffusion kurtosis imaging parameters.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.from_lower_triangular\" title=\"dipy.reconst.dki.from_lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">from_lower_triangular</span></code></a>(D)</td>\n<td>Returns a tensor given the six unique tensor elements</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.get_sphere\" title=\"dipy.reconst.dki.get_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_sphere</span></code></a>([name])</td>\n<td>provide triangulated spheres</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.kurtosis_maximum\" title=\"dipy.reconst.dki.kurtosis_maximum\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">kurtosis_maximum</span></code></a>(dki_params[,&nbsp;sphere,&nbsp;gtol,&nbsp;...])</td>\n<td>Computes kurtosis maximum value</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.local_maxima\" title=\"dipy.reconst.dki.local_maxima\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">local_maxima</span></code></a></td>\n<td>Local maxima of a function evaluated on a discrete set of points.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.lower_triangular\" title=\"dipy.reconst.dki.lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code></a>(tensor[,&nbsp;b0])</td>\n<td>Returns the six lower triangular values of the tensor and a dummy variable</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.mean_diffusivity\" title=\"dipy.reconst.dki.mean_diffusivity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mean_diffusivity</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Mean Diffusivity (MD) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.mean_kurtosis\" title=\"dipy.reconst.dki.mean_kurtosis\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mean_kurtosis</span></code></a>(dki_params[,&nbsp;min_kurtosis,&nbsp;...])</td>\n<td>Computes mean Kurtosis (MK) from the kurtosis tensor [R83].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.ndindex\" title=\"dipy.reconst.dki.ndindex\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ndindex</span></code></a>(shape)</td>\n<td>An N-dimensional iterator object to index arrays.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.ols_fit_dki\" title=\"dipy.reconst.dki.ols_fit_dki\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ols_fit_dki</span></code></a>(design_matrix,&nbsp;data)</td>\n<td>Computes ordinary least squares (OLS) fit to calculate the diffusion tensor and kurtosis tensor using a linear regression diffusion kurtosis model <a class=\"footnote-reference\" href=\"#id337\" id=\"id10\">[1]</a>.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.radial_kurtosis\" title=\"dipy.reconst.dki.radial_kurtosis\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">radial_kurtosis</span></code></a>(dki_params[,&nbsp;min_kurtosis,&nbsp;...])</td>\n<td>Radial Kurtosis (RK) of a diffusion kurtosis tensor [R85].</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.sphere2cart\" title=\"dipy.reconst.dki.sphere2cart\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphere2cart</span></code></a>(r,&nbsp;theta,&nbsp;phi)</td>\n<td>Spherical to Cartesian coordinates</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.split_dki_param\" title=\"dipy.reconst.dki.split_dki_param\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">split_dki_param</span></code></a>(dki_params)</td>\n<td>Extract the diffusion tensor eigenvalues, the diffusion tensor</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.vec_val_vect\" title=\"dipy.reconst.dki.vec_val_vect\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vec_val_vect</span></code></a></td>\n<td>Vectorize <cite>vecs</cite>.diag(<cite>vals</cite>).`vecs`.T for last 2 dimensions of <cite>vecs</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.wls_fit_dki\" title=\"dipy.reconst.dki.wls_fit_dki\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">wls_fit_dki</span></code></a>(design_matrix,&nbsp;data)</td>\n<td>Computes weighted linear least squares (WLS) fit to calculate the diffusion tensor and kurtosis tensor using a weighted linear regression diffusion kurtosis model <a class=\"footnote-reference\" href=\"#id337\" id=\"id12\">[1]</a>.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.dki_micro\">\n<span id=\"module-reconst-dki-micro\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.dki_micro</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.dki_micro\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Classes and functions for fitting the DKI-based microstructural model</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">DiffusionKurtosisFit</span></code></a>(model,&nbsp;model_params)</td>\n<td>Class for fitting the Diffusion Kurtosis Model</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisModel\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">DiffusionKurtosisModel</span></code></a>(gtab[,&nbsp;fit_method])</td>\n<td>Class for the Diffusion Kurtosis Model</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">KurtosisMicrostructuralFit</span></code></a>(model,&nbsp;model_params)</td>\n<td>Class for fitting the Diffusion Kurtosis Microstructural Model</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructureModel\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructureModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">KurtosisMicrostructureModel</span></code></a>(gtab[,&nbsp;fit_method])</td>\n<td>Class for the Diffusion Kurtosis Microstructural Model</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.axial_diffusivity\" title=\"dipy.reconst.dki_micro.axial_diffusivity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">axial_diffusivity</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Axial Diffusivity (AD) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.axonal_water_fraction\" title=\"dipy.reconst.dki_micro.axonal_water_fraction\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">axonal_water_fraction</span></code></a>(dki_params[,&nbsp;sphere,&nbsp;...])</td>\n<td>Computes the axonal water fraction from DKI [R87].</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.decompose_tensor\" title=\"dipy.reconst.dki_micro.decompose_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">decompose_tensor</span></code></a>(tensor[,&nbsp;min_diffusivity])</td>\n<td>Returns eigenvalues and eigenvectors given a diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.diffusion_components\" title=\"dipy.reconst.dki_micro.diffusion_components\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">diffusion_components</span></code></a>(dki_params[,&nbsp;sphere,&nbsp;...])</td>\n<td>Extracts the restricted and hindered diffusion tensors of well aligned fibers from diffusion kurtosis imaging parameters [R88].</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.directional_diffusion\" title=\"dipy.reconst.dki_micro.directional_diffusion\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directional_diffusion</span></code></a>(dt,&nbsp;V[,&nbsp;min_diffusivity])</td>\n<td>Calculates the apparent diffusion coefficient (adc) in each direction of a sphere for a single voxel [R89].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.directional_kurtosis\" title=\"dipy.reconst.dki_micro.directional_kurtosis\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directional_kurtosis</span></code></a>(dt,&nbsp;md,&nbsp;kt,&nbsp;V[,&nbsp;...])</td>\n<td>Calculates the apparent kurtosis coefficient (akc) in each direction of a sphere for a single voxel [R90].</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.dkimicro_prediction\" title=\"dipy.reconst.dki_micro.dkimicro_prediction\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dkimicro_prediction</span></code></a>(params,&nbsp;gtab[,&nbsp;S0])</td>\n<td>Signal prediction given the DKI microstructure model parameters.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.dti_design_matrix\" title=\"dipy.reconst.dki_micro.dti_design_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dti_design_matrix</span></code></a>(gtab[,&nbsp;dtype])</td>\n<td>Constructs design matrix for DTI weighted least squares or least squares fitting.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.from_lower_triangular\" title=\"dipy.reconst.dki_micro.from_lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">from_lower_triangular</span></code></a>(D)</td>\n<td>Returns a tensor given the six unique tensor elements</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.get_sphere\" title=\"dipy.reconst.dki_micro.get_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_sphere</span></code></a>([name])</td>\n<td>provide triangulated spheres</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.kurtosis_maximum\" title=\"dipy.reconst.dki_micro.kurtosis_maximum\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">kurtosis_maximum</span></code></a>(dki_params[,&nbsp;sphere,&nbsp;gtol,&nbsp;...])</td>\n<td>Computes kurtosis maximum value</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.lower_triangular\" title=\"dipy.reconst.dki_micro.lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code></a>(tensor[,&nbsp;b0])</td>\n<td>Returns the six lower triangular values of the tensor and a dummy variable</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.mean_diffusivity\" title=\"dipy.reconst.dki_micro.mean_diffusivity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mean_diffusivity</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Mean Diffusivity (MD) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.ndindex\" title=\"dipy.reconst.dki_micro.ndindex\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ndindex</span></code></a>(shape)</td>\n<td>An N-dimensional iterator object to index arrays.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.radial_diffusivity\" title=\"dipy.reconst.dki_micro.radial_diffusivity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">radial_diffusivity</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Radial Diffusivity (RD) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.split_dki_param\" title=\"dipy.reconst.dki_micro.split_dki_param\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">split_dki_param</span></code></a>(dki_params)</td>\n<td>Extract the diffusion tensor eigenvalues, the diffusion tensor</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.tortuosity\" title=\"dipy.reconst.dki_micro.tortuosity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">tortuosity</span></code></a>(hindered_ad,&nbsp;hindered_rd)</td>\n<td>Computes the tortuosity of the hindered diffusion compartment given</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.trace\" title=\"dipy.reconst.dki_micro.trace\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Trace of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.vec_val_vect\" title=\"dipy.reconst.dki_micro.vec_val_vect\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vec_val_vect</span></code></a></td>\n<td>Vectorize <cite>vecs</cite>.diag(<cite>vals</cite>).`vecs`.T for last 2 dimensions of <cite>vecs</cite></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.dsi\">\n<span id=\"module-reconst-dsi\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.dsi</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.dsi\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.Cache\" title=\"dipy.reconst.dsi.Cache\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Cache</span></code></a></td>\n<td>Cache values based on a key object (such as a sphere or gradient table).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvFit\" title=\"dipy.reconst.dsi.DiffusionSpectrumDeconvFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">DiffusionSpectrumDeconvFit</span></code></a>(model,&nbsp;data)</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvModel\" title=\"dipy.reconst.dsi.DiffusionSpectrumDeconvModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">DiffusionSpectrumDeconvModel</span></code></a>(gtab[,&nbsp;...])</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit\" title=\"dipy.reconst.dsi.DiffusionSpectrumFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">DiffusionSpectrumFit</span></code></a>(model,&nbsp;data)</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumModel\" title=\"dipy.reconst.dsi.DiffusionSpectrumModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">DiffusionSpectrumModel</span></code></a>(gtab[,&nbsp;qgrid_size,&nbsp;...])</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.OdfFit\" title=\"dipy.reconst.dsi.OdfFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OdfFit</span></code></a>(model,&nbsp;data)</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.OdfModel\" title=\"dipy.reconst.dsi.OdfModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OdfModel</span></code></a>(gtab)</td>\n<td>An abstract class to be sub-classed by specific odf models</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.LR_deconv\" title=\"dipy.reconst.dsi.LR_deconv\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">LR_deconv</span></code></a>(prop,&nbsp;psf[,&nbsp;numit,&nbsp;acc_factor])</td>\n<td>Perform Lucy-Richardson deconvolution algorithm on a 3D array.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.create_qspace\" title=\"dipy.reconst.dsi.create_qspace\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">create_qspace</span></code></a>(gtab,&nbsp;origin)</td>\n<td>create the 3D grid which holds the signal values (q-space)</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.create_qtable\" title=\"dipy.reconst.dsi.create_qtable\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">create_qtable</span></code></a>(gtab,&nbsp;origin)</td>\n<td>create a normalized version of gradients</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.fftn\" title=\"dipy.reconst.dsi.fftn\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fftn</span></code></a>(x[,&nbsp;shape,&nbsp;axes,&nbsp;overwrite_x])</td>\n<td>Return multidimensional discrete Fourier transform.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.fftshift\" title=\"dipy.reconst.dsi.fftshift\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fftshift</span></code></a>(x[,&nbsp;axes])</td>\n<td>Shift the zero-frequency component to the center of the spectrum.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.gen_PSF\" title=\"dipy.reconst.dsi.gen_PSF\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gen_PSF</span></code></a>(qgrid_sampling,&nbsp;siz_x,&nbsp;siz_y,&nbsp;siz_z)</td>\n<td>Generate a PSF for DSI Deconvolution by taking the ifft of the binary q-space sampling mask and truncating it to keep only the center.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.half_to_full_qspace\" title=\"dipy.reconst.dsi.half_to_full_qspace\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">half_to_full_qspace</span></code></a>(data,&nbsp;gtab)</td>\n<td>Half to full Cartesian grid mapping</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.hanning_filter\" title=\"dipy.reconst.dsi.hanning_filter\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">hanning_filter</span></code></a>(gtab,&nbsp;filter_width,&nbsp;origin)</td>\n<td>create a hanning window</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.ifftshift\" title=\"dipy.reconst.dsi.ifftshift\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ifftshift</span></code></a>(x[,&nbsp;axes])</td>\n<td>The inverse of <cite>fftshift</cite>.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.map_coordinates\" title=\"dipy.reconst.dsi.map_coordinates\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">map_coordinates</span></code></a>(input,&nbsp;coordinates[,&nbsp;...])</td>\n<td>Map the input array to new coordinates by interpolation.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.multi_voxel_fit\" title=\"dipy.reconst.dsi.multi_voxel_fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">multi_voxel_fit</span></code></a>(single_voxel_fit)</td>\n<td>Method decorator to turn a single voxel model fit</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.pdf_interp_coords\" title=\"dipy.reconst.dsi.pdf_interp_coords\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pdf_interp_coords</span></code></a>(sphere,&nbsp;rradius,&nbsp;origin)</td>\n<td>Precompute coordinates for ODF calculation from the PDF</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.pdf_odf\" title=\"dipy.reconst.dsi.pdf_odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pdf_odf</span></code></a>(Pr,&nbsp;rradius,&nbsp;interp_coords)</td>\n<td>Calculates the real ODF from the diffusion propagator(PDF) Pr</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.project_hemisph_bvecs\" title=\"dipy.reconst.dsi.project_hemisph_bvecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">project_hemisph_bvecs</span></code></a>(gtab)</td>\n<td>Project any near identical bvecs to the other hemisphere</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.threshold_propagator\" title=\"dipy.reconst.dsi.threshold_propagator\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">threshold_propagator</span></code></a>(P[,&nbsp;estimated_snr])</td>\n<td>Applies hard threshold on the propagator to remove background noise for the deconvolution.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.dti\">\n<span id=\"module-reconst-dti\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.dti</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.dti\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Classes and functions for fitting tensors</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.ReconstModel\" title=\"dipy.reconst.dti.ReconstModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstModel</span></code></a>(gtab)</td>\n<td>Abstract class for signal reconstruction models</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit\" title=\"dipy.reconst.dti.TensorFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">TensorFit</span></code></a>(model,&nbsp;model_params[,&nbsp;model_S0])</td>\n<td><p class=\"rubric\">Attributes</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorModel\" title=\"dipy.reconst.dti.TensorModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">TensorModel</span></code></a>(gtab[,&nbsp;fit_method,&nbsp;return_S0_hat])</td>\n<td>Diffusion Tensor</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.range\" title=\"dipy.reconst.dti.range\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">range</span></code></a>((stop)&nbsp;-&gt;&nbsp;range&nbsp;object)</td>\n<td>range(start, stop[, step]) -&gt; range object</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.apparent_diffusion_coef\" title=\"dipy.reconst.dti.apparent_diffusion_coef\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">apparent_diffusion_coef</span></code></a>(q_form,&nbsp;sphere)</td>\n<td>Calculate the apparent diffusion coefficient (ADC) in each direction of a sphere.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.auto_attr\" title=\"dipy.reconst.dti.auto_attr\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">auto_attr</span></code></a>(func)</td>\n<td>Decorator to create OneTimeProperty attributes.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.axial_diffusivity\" title=\"dipy.reconst.dti.axial_diffusivity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">axial_diffusivity</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Axial Diffusivity (AD) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.color_fa\" title=\"dipy.reconst.dti.color_fa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">color_fa</span></code></a>(fa,&nbsp;evecs)</td>\n<td>Color fractional anisotropy of diffusion tensor</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.decompose_tensor\" title=\"dipy.reconst.dti.decompose_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">decompose_tensor</span></code></a>(tensor[,&nbsp;min_diffusivity])</td>\n<td>Returns eigenvalues and eigenvectors given a diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.design_matrix\" title=\"dipy.reconst.dti.design_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">design_matrix</span></code></a>(gtab[,&nbsp;dtype])</td>\n<td>Constructs design matrix for DTI weighted least squares or least squares fitting.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.determinant\" title=\"dipy.reconst.dti.determinant\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">determinant</span></code></a>(q_form)</td>\n<td>The determinant of a tensor, given in quadratic form</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.deviatoric\" title=\"dipy.reconst.dti.deviatoric\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">deviatoric</span></code></a>(q_form)</td>\n<td>Calculate the deviatoric (anisotropic) part of the tensor [R93].</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.eig_from_lo_tri\" title=\"dipy.reconst.dti.eig_from_lo_tri\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">eig_from_lo_tri</span></code></a>(data[,&nbsp;min_diffusivity])</td>\n<td>Calculates tensor eigenvalues/eigenvectors from an array containing the lower diagonal form of the six unique tensor elements.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.eigh\" title=\"dipy.reconst.dti.eigh\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">eigh</span></code></a>(a[,&nbsp;UPLO])</td>\n<td>Iterate over <cite>np.linalg.eigh</cite> if it doesn&#8217;t support vectorized operation</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.fractional_anisotropy\" title=\"dipy.reconst.dti.fractional_anisotropy\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fractional_anisotropy</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Fractional anisotropy (FA) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.from_lower_triangular\" title=\"dipy.reconst.dti.from_lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">from_lower_triangular</span></code></a>(D)</td>\n<td>Returns a tensor given the six unique tensor elements</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.geodesic_anisotropy\" title=\"dipy.reconst.dti.geodesic_anisotropy\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">geodesic_anisotropy</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Geodesic anisotropy (GA) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.get_sphere\" title=\"dipy.reconst.dti.get_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_sphere</span></code></a>([name])</td>\n<td>provide triangulated spheres</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.gradient_table\" title=\"dipy.reconst.dti.gradient_table\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gradient_table</span></code></a>(bvals[,&nbsp;bvecs,&nbsp;big_delta,&nbsp;...])</td>\n<td>A general function for creating diffusion MR gradients.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.isotropic\" title=\"dipy.reconst.dti.isotropic\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">isotropic</span></code></a>(q_form)</td>\n<td>Calculate the isotropic part of the tensor [R98].</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.iter_fit_tensor\" title=\"dipy.reconst.dti.iter_fit_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">iter_fit_tensor</span></code></a>([step])</td>\n<td>Wrap a fit_tensor func and iterate over chunks of data with given length</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.linearity\" title=\"dipy.reconst.dti.linearity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">linearity</span></code></a>(evals[,&nbsp;axis])</td>\n<td>The linearity of the tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id19\">[1]</a></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.lower_triangular\" title=\"dipy.reconst.dti.lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code></a>(tensor[,&nbsp;b0])</td>\n<td>Returns the six lower triangular values of the tensor and a dummy variable</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.mean_diffusivity\" title=\"dipy.reconst.dti.mean_diffusivity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mean_diffusivity</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Mean Diffusivity (MD) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.mode\" title=\"dipy.reconst.dti.mode\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mode</span></code></a>(q_form)</td>\n<td>Mode (MO) of a diffusion tensor [R99].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.nlls_fit_tensor\" title=\"dipy.reconst.dti.nlls_fit_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nlls_fit_tensor</span></code></a>(design_matrix,&nbsp;data[,&nbsp;...])</td>\n<td>Fit the tensor params using non-linear least-squares.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.norm\" title=\"dipy.reconst.dti.norm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">norm</span></code></a>(q_form)</td>\n<td>Calculate the Frobenius norm of a tensor quadratic form</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.ols_fit_tensor\" title=\"dipy.reconst.dti.ols_fit_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ols_fit_tensor</span></code></a>(design_matrix,&nbsp;data[,&nbsp;...])</td>\n<td>Computes ordinary least squares (OLS) fit to calculate self-diffusion tensor using a linear regression model <a class=\"footnote-reference\" href=\"#id337\" id=\"id21\">[1]</a>.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.pinv\" title=\"dipy.reconst.dti.pinv\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pinv</span></code></a>(a[,&nbsp;rcond])</td>\n<td>Vectorized version of <cite>numpy.linalg.pinv</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.planarity\" title=\"dipy.reconst.dti.planarity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">planarity</span></code></a>(evals[,&nbsp;axis])</td>\n<td>The planarity of the tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id22\">[1]</a></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.quantize_evecs\" title=\"dipy.reconst.dti.quantize_evecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quantize_evecs</span></code></a>(evecs[,&nbsp;odf_vertices])</td>\n<td>Find the closest orientation of an evenly distributed sphere</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.radial_diffusivity\" title=\"dipy.reconst.dti.radial_diffusivity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">radial_diffusivity</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Radial Diffusivity (RD) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.restore_fit_tensor\" title=\"dipy.reconst.dti.restore_fit_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">restore_fit_tensor</span></code></a>(design_matrix,&nbsp;data[,&nbsp;...])</td>\n<td>Use the RESTORE algorithm [Chang2005] to calculate a robust tensor fit</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.sphericity\" title=\"dipy.reconst.dti.sphericity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphericity</span></code></a>(evals[,&nbsp;axis])</td>\n<td>The sphericity of the tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id24\">[1]</a></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.tensor_prediction\" title=\"dipy.reconst.dti.tensor_prediction\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">tensor_prediction</span></code></a>(dti_params,&nbsp;gtab,&nbsp;S0)</td>\n<td>Predict a signal given tensor parameters.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.trace\" title=\"dipy.reconst.dti.trace\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Trace of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.vec_val_vect\" title=\"dipy.reconst.dti.vec_val_vect\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vec_val_vect</span></code></a></td>\n<td>Vectorize <cite>vecs</cite>.diag(<cite>vals</cite>).`vecs`.T for last 2 dimensions of <cite>vecs</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.vector_norm\" title=\"dipy.reconst.dti.vector_norm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vector_norm</span></code></a>(vec[,&nbsp;axis,&nbsp;keepdims])</td>\n<td>Return vector Euclidean (L2) norm</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.wls_fit_tensor\" title=\"dipy.reconst.dti.wls_fit_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">wls_fit_tensor</span></code></a>(design_matrix,&nbsp;data[,&nbsp;...])</td>\n<td>Computes weighted least squares (WLS) fit to calculate self-diffusion tensor using a linear regression model [R100].</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.fwdti\">\n<span id=\"module-reconst-fwdti\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.fwdti</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.fwdti\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Classes and functions for fitting tensors without free water\ncontamination</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.FreeWaterTensorFit\" title=\"dipy.reconst.fwdti.FreeWaterTensorFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">FreeWaterTensorFit</span></code></a>(model,&nbsp;model_params)</td>\n<td>Class for fitting the Free Water Tensor Model</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.FreeWaterTensorModel\" title=\"dipy.reconst.fwdti.FreeWaterTensorModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">FreeWaterTensorModel</span></code></a>(gtab[,&nbsp;fit_method])</td>\n<td>Class for the Free Water Elimination Diffusion Tensor Model</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.ReconstModel\" title=\"dipy.reconst.fwdti.ReconstModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstModel</span></code></a>(gtab)</td>\n<td>Abstract class for signal reconstruction models</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit\" title=\"dipy.reconst.fwdti.TensorFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">TensorFit</span></code></a>(model,&nbsp;model_params[,&nbsp;model_S0])</td>\n<td><p class=\"rubric\">Attributes</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.cholesky_to_lower_triangular\" title=\"dipy.reconst.fwdti.cholesky_to_lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cholesky_to_lower_triangular</span></code></a>(R)</td>\n<td>Convert Cholesky decompostion elements to the diffusion tensor elements</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.decompose_tensor\" title=\"dipy.reconst.fwdti.decompose_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">decompose_tensor</span></code></a>(tensor[,&nbsp;min_diffusivity])</td>\n<td>Returns eigenvalues and eigenvectors given a diffusion tensor</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.design_matrix\" title=\"dipy.reconst.fwdti.design_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">design_matrix</span></code></a>(gtab[,&nbsp;dtype])</td>\n<td>Constructs design matrix for DTI weighted least squares or least squares fitting.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.from_lower_triangular\" title=\"dipy.reconst.fwdti.from_lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">from_lower_triangular</span></code></a>(D)</td>\n<td>Returns a tensor given the six unique tensor elements</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.fwdti_prediction\" title=\"dipy.reconst.fwdti.fwdti_prediction\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fwdti_prediction</span></code></a>(params,&nbsp;gtab[,&nbsp;S0,&nbsp;Diso])</td>\n<td>Signal prediction given the free water DTI model parameters.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.lower_triangular\" title=\"dipy.reconst.fwdti.lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code></a>(tensor[,&nbsp;b0])</td>\n<td>Returns the six lower triangular values of the tensor and a dummy variable</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.lower_triangular_to_cholesky\" title=\"dipy.reconst.fwdti.lower_triangular_to_cholesky\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular_to_cholesky</span></code></a>(tensor_elements)</td>\n<td>Perfoms Cholesky decomposition of the diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.multi_voxel_fit\" title=\"dipy.reconst.fwdti.multi_voxel_fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">multi_voxel_fit</span></code></a>(single_voxel_fit)</td>\n<td>Method decorator to turn a single voxel model fit</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.ndindex\" title=\"dipy.reconst.fwdti.ndindex\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ndindex</span></code></a>(shape)</td>\n<td>An N-dimensional iterator object to index arrays.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.nls_fit_tensor\" title=\"dipy.reconst.fwdti.nls_fit_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nls_fit_tensor</span></code></a>(gtab,&nbsp;data[,&nbsp;mask,&nbsp;Diso,&nbsp;...])</td>\n<td>Fit the water elimination tensor model using the non-linear least-squares.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.nls_iter\" title=\"dipy.reconst.fwdti.nls_iter\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nls_iter</span></code></a>(design_matrix,&nbsp;sig,&nbsp;S0[,&nbsp;Diso,&nbsp;...])</td>\n<td>Applies non linear least squares fit of the water free elimination model to single voxel signals.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.vec_val_vect\" title=\"dipy.reconst.fwdti.vec_val_vect\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vec_val_vect</span></code></a></td>\n<td>Vectorize <cite>vecs</cite>.diag(<cite>vals</cite>).`vecs`.T for last 2 dimensions of <cite>vecs</cite></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.wls_fit_tensor\" title=\"dipy.reconst.fwdti.wls_fit_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">wls_fit_tensor</span></code></a>(gtab,&nbsp;data[,&nbsp;Diso,&nbsp;mask,&nbsp;...])</td>\n<td>Computes weighted least squares (WLS) fit to calculate self-diffusion tensor using a linear regression model [R104].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.wls_iter\" title=\"dipy.reconst.fwdti.wls_iter\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">wls_iter</span></code></a>(design_matrix,&nbsp;sig,&nbsp;S0[,&nbsp;Diso,&nbsp;...])</td>\n<td>Applies weighted linear least squares fit of the water free elimination model to single voxel signals.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.gqi\">\n<span id=\"module-reconst-gqi\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.gqi</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.gqi\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Classes and functions for generalized q-sampling</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.Cache\" title=\"dipy.reconst.gqi.Cache\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Cache</span></code></a></td>\n<td>Cache values based on a key object (such as a sphere or gradient table).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingFit\" title=\"dipy.reconst.gqi.GeneralizedQSamplingFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">GeneralizedQSamplingFit</span></code></a>(model,&nbsp;data)</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingModel\" title=\"dipy.reconst.gqi.GeneralizedQSamplingModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">GeneralizedQSamplingModel</span></code></a>(gtab[,&nbsp;method,&nbsp;...])</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.OdfFit\" title=\"dipy.reconst.gqi.OdfFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OdfFit</span></code></a>(model,&nbsp;data)</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.OdfModel\" title=\"dipy.reconst.gqi.OdfModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OdfModel</span></code></a>(gtab)</td>\n<td>An abstract class to be sub-classed by specific odf models</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.equatorial_maximum\" title=\"dipy.reconst.gqi.equatorial_maximum\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">equatorial_maximum</span></code></a>(vertices,&nbsp;odf,&nbsp;pole,&nbsp;width)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.equatorial_zone_vertices\" title=\"dipy.reconst.gqi.equatorial_zone_vertices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">equatorial_zone_vertices</span></code></a>(vertices,&nbsp;pole[,&nbsp;width])</td>\n<td>finds the &#8216;vertices&#8217; in the equatorial zone conjugate</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.gfa\" title=\"dipy.reconst.gqi.gfa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gfa</span></code></a>(samples)</td>\n<td>The general fractional anisotropy of a function evaluated</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.local_maxima\" title=\"dipy.reconst.gqi.local_maxima\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">local_maxima</span></code></a></td>\n<td>Local maxima of a function evaluated on a discrete set of points.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.multi_voxel_fit\" title=\"dipy.reconst.gqi.multi_voxel_fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">multi_voxel_fit</span></code></a>(single_voxel_fit)</td>\n<td>Method decorator to turn a single voxel model fit</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.normalize_qa\" title=\"dipy.reconst.gqi.normalize_qa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">normalize_qa</span></code></a>(qa[,&nbsp;max_qa])</td>\n<td>Normalize quantitative anisotropy.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.npa\" title=\"dipy.reconst.gqi.npa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">npa</span></code></a>(self,&nbsp;odf[,&nbsp;width])</td>\n<td>non-parametric anisotropy</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.odf_sum\" title=\"dipy.reconst.gqi.odf_sum\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf_sum</span></code></a>(odf)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.patch_maximum\" title=\"dipy.reconst.gqi.patch_maximum\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">patch_maximum</span></code></a>(vertices,&nbsp;odf,&nbsp;pole,&nbsp;width)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.patch_sum\" title=\"dipy.reconst.gqi.patch_sum\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">patch_sum</span></code></a>(vertices,&nbsp;odf,&nbsp;pole,&nbsp;width)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.patch_vertices\" title=\"dipy.reconst.gqi.patch_vertices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">patch_vertices</span></code></a>(vertices,&nbsp;pole,&nbsp;width)</td>\n<td>find &#8216;vertices&#8217; within the cone of &#8216;width&#8217; degrees around &#8216;pole&#8217;</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.polar_zone_vertices\" title=\"dipy.reconst.gqi.polar_zone_vertices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">polar_zone_vertices</span></code></a>(vertices,&nbsp;pole[,&nbsp;width])</td>\n<td>finds the &#8216;vertices&#8217; in the equatorial band around</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.remove_similar_vertices\" title=\"dipy.reconst.gqi.remove_similar_vertices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">remove_similar_vertices</span></code></a></td>\n<td>Remove vertices that are less than <cite>theta</cite> degrees from any other</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.squared_radial_component\" title=\"dipy.reconst.gqi.squared_radial_component\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">squared_radial_component</span></code></a>(x[,&nbsp;tol])</td>\n<td>Part of the GQI2 integral</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.triple_odf_maxima\" title=\"dipy.reconst.gqi.triple_odf_maxima\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">triple_odf_maxima</span></code></a>(vertices,&nbsp;odf,&nbsp;width)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.upper_hemi_map\" title=\"dipy.reconst.gqi.upper_hemi_map\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">upper_hemi_map</span></code></a>(v)</td>\n<td>maps a 3-vector into the z-upper hemisphere</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.interpolate\">\n<span id=\"module-reconst-interpolate\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.interpolate</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.interpolate\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Interpolators wrap arrays to allow the array to be indexed in\ncontinuous coordinates</p>\n<p>This module uses the trackvis coordinate system, for more information about\nthis coordinate system please see dipy.tracking.utils\nThe following modules also use this coordinate system:\ndipy.tracking.utils\ndipy.tracking.integration\ndipy.reconst.interpolate</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.interpolate.Interpolator\" title=\"dipy.reconst.interpolate.Interpolator\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Interpolator</span></code></a>(data,&nbsp;voxel_size)</td>\n<td>Class to be subclassed by different interpolator types</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.interpolate.NearestNeighborInterpolator\" title=\"dipy.reconst.interpolate.NearestNeighborInterpolator\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">NearestNeighborInterpolator</span></code></a>(data,&nbsp;voxel_size)</td>\n<td>Interpolates data using nearest neighbor interpolation</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.interpolate.OutsideImage\" title=\"dipy.reconst.interpolate.OutsideImage\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OutsideImage</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.interpolate.TriLinearInterpolator\" title=\"dipy.reconst.interpolate.TriLinearInterpolator\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">TriLinearInterpolator</span></code></a>(data,&nbsp;voxel_size)</td>\n<td>Interpolates data using trilinear interpolation</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.interpolate.array\" title=\"dipy.reconst.interpolate.array\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">array</span></code></a>(object[,&nbsp;dtype,&nbsp;copy,&nbsp;order,&nbsp;subok,&nbsp;ndmin])</td>\n<td>Create an array.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.interpolate.trilinear_interp\" title=\"dipy.reconst.interpolate.trilinear_interp\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trilinear_interp</span></code></a></td>\n<td>Interpolates vector from 4D <cite>data</cite> at 3D point given by <cite>index</cite></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.ivim\">\n<span id=\"module-reconst-ivim\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.ivim</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.ivim\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Classes and functions for fitting ivim model</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimFit\" title=\"dipy.reconst.ivim.IvimFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">IvimFit</span></code></a>(model,&nbsp;model_params)</td>\n<td><p class=\"rubric\">Attributes</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimModel\" title=\"dipy.reconst.ivim.IvimModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">IvimModel</span></code></a>(gtab[,&nbsp;split_b_D,&nbsp;split_b_S0,&nbsp;...])</td>\n<td>Ivim model</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.LooseVersion\" title=\"dipy.reconst.ivim.LooseVersion\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">LooseVersion</span></code></a>([vstring])</td>\n<td>Version numbering for anarchists and software realists.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.ReconstModel\" title=\"dipy.reconst.ivim.ReconstModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstModel</span></code></a>(gtab)</td>\n<td>Abstract class for signal reconstruction models</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.f_D_star_error\" title=\"dipy.reconst.ivim.f_D_star_error\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">f_D_star_error</span></code></a>(params,&nbsp;gtab,&nbsp;signal,&nbsp;S0,&nbsp;D)</td>\n<td>Error function used to fit f and D_star keeping S0 and D fixed</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.f_D_star_prediction\" title=\"dipy.reconst.ivim.f_D_star_prediction\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">f_D_star_prediction</span></code></a>(params,&nbsp;gtab,&nbsp;S0,&nbsp;D)</td>\n<td>Function used to predict IVIM signal when S0 and D are known by considering f and D_star as the unknown parameters.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.ivim_prediction\" title=\"dipy.reconst.ivim.ivim_prediction\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ivim_prediction</span></code></a>(params,&nbsp;gtab[,&nbsp;S0])</td>\n<td>The Intravoxel incoherent motion (IVIM) model function.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.least_squares\" title=\"dipy.reconst.ivim.least_squares\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">least_squares</span></code></a>(fun,&nbsp;x0[,&nbsp;jac,&nbsp;bounds,&nbsp;...])</td>\n<td>Solve a nonlinear least-squares problem with bounds on the variables.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.multi_voxel_fit\" title=\"dipy.reconst.ivim.multi_voxel_fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">multi_voxel_fit</span></code></a>(single_voxel_fit)</td>\n<td>Method decorator to turn a single voxel model fit</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.mapmri\">\n<span id=\"module-reconst-mapmri\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.mapmri</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.mapmri\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Cache\" title=\"dipy.reconst.mapmri.Cache\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Cache</span></code></a></td>\n<td>Cache values based on a key object (such as a sphere or gradient table).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit\" title=\"dipy.reconst.mapmri.MapmriFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">MapmriFit</span></code></a>(model,&nbsp;mapmri_coef,&nbsp;mu,&nbsp;R,&nbsp;lopt[,&nbsp;...])</td>\n<td><p class=\"rubric\">Attributes</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriModel\" title=\"dipy.reconst.mapmri.MapmriModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">MapmriModel</span></code></a>(gtab[,&nbsp;radial_order,&nbsp;...])</td>\n<td>Mean Apparent Propagator MRI (MAPMRI) [R105] of the diffusion signal.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Optimizer\" title=\"dipy.reconst.mapmri.Optimizer\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Optimizer</span></code></a>(fun,&nbsp;x0[,&nbsp;args,&nbsp;method,&nbsp;jac,&nbsp;...])</td>\n<td><p class=\"rubric\">Attributes</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.ReconstFit\" title=\"dipy.reconst.mapmri.ReconstFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstFit</span></code></a>(model,&nbsp;data)</td>\n<td>Abstract class which holds the fit result of ReconstModel</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.ReconstModel\" title=\"dipy.reconst.mapmri.ReconstModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstModel</span></code></a>(gtab)</td>\n<td>Abstract class for signal reconstruction models</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.b_mat\" title=\"dipy.reconst.mapmri.b_mat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">b_mat</span></code></a>(index_matrix)</td>\n<td>Calculates the B coefficients from [R113] Eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.b_mat_isotropic\" title=\"dipy.reconst.mapmri.b_mat_isotropic\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">b_mat_isotropic</span></code></a>(index_matrix)</td>\n<td>Calculates the isotropic B coefficients from [R114] Fig 8.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.binomialfloat\" title=\"dipy.reconst.mapmri.binomialfloat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">binomialfloat</span></code></a>(n,&nbsp;k)</td>\n<td>Custom Binomial function</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.cart2sphere\" title=\"dipy.reconst.mapmri.cart2sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cart2sphere</span></code></a>(x,&nbsp;y,&nbsp;z)</td>\n<td>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.create_rspace\" title=\"dipy.reconst.mapmri.create_rspace\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">create_rspace</span></code></a>(gridsize,&nbsp;radius_max)</td>\n<td>Create the real space table, that contains the points in which to compute the pdf.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.delta\" title=\"dipy.reconst.mapmri.delta\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">delta</span></code></a>(n,&nbsp;m)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.factorial\" title=\"dipy.reconst.mapmri.factorial\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">factorial</span></code></a>(n[,&nbsp;exact])</td>\n<td>The factorial of a number or array of numbers.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.factorial2\" title=\"dipy.reconst.mapmri.factorial2\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">factorial2</span></code></a>(n[,&nbsp;exact])</td>\n<td>Double factorial.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.gcv_cost_function\" title=\"dipy.reconst.mapmri.gcv_cost_function\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gcv_cost_function</span></code></a>(weight,&nbsp;args)</td>\n<td>The GCV cost function that is iterated [4]</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.generalized_crossvalidation\" title=\"dipy.reconst.mapmri.generalized_crossvalidation\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">generalized_crossvalidation</span></code></a>(data,&nbsp;M,&nbsp;LR[,&nbsp;...])</td>\n<td>Generalized Cross Validation Function [R115] eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.generalized_crossvalidation_array\" title=\"dipy.reconst.mapmri.generalized_crossvalidation_array\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">generalized_crossvalidation_array</span></code></a>(data,&nbsp;M,&nbsp;LR)</td>\n<td>Generalized Cross Validation Function <a class=\"footnote-reference\" href=\"#id337\" id=\"id31\">[1]</a> eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.genlaguerre\" title=\"dipy.reconst.mapmri.genlaguerre\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">genlaguerre</span></code></a>(n,&nbsp;alpha[,&nbsp;monic])</td>\n<td>Generalized (associated) Laguerre polynomial.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.gradient_table\" title=\"dipy.reconst.mapmri.gradient_table\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gradient_table</span></code></a>(bvals[,&nbsp;bvecs,&nbsp;big_delta,&nbsp;...])</td>\n<td>A general function for creating diffusion MR gradients.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.hermite\" title=\"dipy.reconst.mapmri.hermite\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">hermite</span></code></a>(n[,&nbsp;monic])</td>\n<td>Physicist&#8217;s Hermite polynomial.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.isotropic_scale_factor\" title=\"dipy.reconst.mapmri.isotropic_scale_factor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">isotropic_scale_factor</span></code></a>(mu_squared)</td>\n<td>Estimated isotropic scaling factor _[1] Eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.map_laplace_s\" title=\"dipy.reconst.mapmri.map_laplace_s\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">map_laplace_s</span></code></a>(n,&nbsp;m)</td>\n<td>R(m,n) static matrix for Laplacian regularization [R117] eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.map_laplace_t\" title=\"dipy.reconst.mapmri.map_laplace_t\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">map_laplace_t</span></code></a>(n,&nbsp;m)</td>\n<td>L(m, n) static matrix for Laplacian regularization [R118] eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.map_laplace_u\" title=\"dipy.reconst.mapmri.map_laplace_u\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">map_laplace_u</span></code></a>(n,&nbsp;m)</td>\n<td>S(n, m) static matrix for Laplacian regularization [R119] eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_STU_reg_matrices\" title=\"dipy.reconst.mapmri.mapmri_STU_reg_matrices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_STU_reg_matrices</span></code></a>(radial_order)</td>\n<td>Generates the static portions of the Laplacian regularization matrix according to [R120] eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_index_matrix\" title=\"dipy.reconst.mapmri.mapmri_index_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_index_matrix</span></code></a>(radial_order)</td>\n<td>Calculates the indices for the MAPMRI [R121] basis in x, y and z.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent\" title=\"dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_K_mu_dependent</span></code></a>(...)</td>\n<td>Computes mu dependent part of M.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent\" title=\"dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_K_mu_independent</span></code></a>(...)</td>\n<td>Computes mu independent part of K.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent\" title=\"dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_M_mu_dependent</span></code></a>(...)</td>\n<td>Computed the mu dependent part of the signal design matrix.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent\" title=\"dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_M_mu_independent</span></code></a>(...)</td>\n<td>Computed the mu independent part of the signal design matrix.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_index_matrix\" title=\"dipy.reconst.mapmri.mapmri_isotropic_index_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_index_matrix</span></code></a>(radial_order)</td>\n<td>Calculates the indices for the isotropic MAPMRI basis [R122] Fig 8.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix\" title=\"dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_laplacian_reg_matrix</span></code></a>(...)</td>\n<td>Computes the Laplacian regularization matrix for MAP-MRI&#8217;s isotropic implementation [R123] eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_odf_matrix\" title=\"dipy.reconst.mapmri.mapmri_isotropic_odf_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_odf_matrix</span></code></a>(radial_order,&nbsp;...)</td>\n<td>Compute the isotropic MAPMRI ODF matrix [R124] Eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix\" title=\"dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_odf_sh_matrix</span></code></a>(radial_order,&nbsp;...)</td>\n<td>Compute the isotropic MAPMRI ODF matrix [R126] Eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_phi_matrix\" title=\"dipy.reconst.mapmri.mapmri_isotropic_phi_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_phi_matrix</span></code></a>(radial_order,&nbsp;mu,&nbsp;q)</td>\n<td>Three dimensional isotropic MAPMRI signal basis function from [R128] Eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_psi_matrix\" title=\"dipy.reconst.mapmri.mapmri_isotropic_psi_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_psi_matrix</span></code></a>(radial_order,&nbsp;...)</td>\n<td>Three dimensional isotropic MAPMRI propagator basis function from [R129] Eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis\" title=\"dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_radial_pdf_basis</span></code></a>(j,&nbsp;l,&nbsp;mu,&nbsp;r)</td>\n<td>Radial part of the isotropic 1D-SHORE propagator basis [R130] eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis\" title=\"dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_isotropic_radial_signal_basis</span></code></a>(j,&nbsp;l,&nbsp;...)</td>\n<td>Radial part of the isotropic 1D-SHORE signal basis [R131] eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_laplacian_reg_matrix\" title=\"dipy.reconst.mapmri.mapmri_laplacian_reg_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_laplacian_reg_matrix</span></code></a>(ind_mat,&nbsp;mu,&nbsp;...)</td>\n<td>Puts the Laplacian regularization matrix together [R132] eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_odf_matrix\" title=\"dipy.reconst.mapmri.mapmri_odf_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_odf_matrix</span></code></a>(radial_order,&nbsp;mu,&nbsp;s,&nbsp;vertices)</td>\n<td>Compute the MAPMRI ODF matrix [R133]  Eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_phi_1d\" title=\"dipy.reconst.mapmri.mapmri_phi_1d\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_phi_1d</span></code></a>(n,&nbsp;q,&nbsp;mu)</td>\n<td>One dimensional MAPMRI basis function from [R134] Eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_phi_matrix\" title=\"dipy.reconst.mapmri.mapmri_phi_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_phi_matrix</span></code></a>(radial_order,&nbsp;mu,&nbsp;q_gradients)</td>\n<td>Compute the MAPMRI phi matrix for the signal [R135] eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_psi_1d\" title=\"dipy.reconst.mapmri.mapmri_psi_1d\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_psi_1d</span></code></a>(n,&nbsp;x,&nbsp;mu)</td>\n<td>One dimensional MAPMRI propagator basis function from [R136] Eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.mapmri_psi_matrix\" title=\"dipy.reconst.mapmri.mapmri_psi_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_psi_matrix</span></code></a>(radial_order,&nbsp;mu,&nbsp;rgrad)</td>\n<td>Compute the MAPMRI psi matrix for the propagator [R137] eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.multi_voxel_fit\" title=\"dipy.reconst.mapmri.multi_voxel_fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">multi_voxel_fit</span></code></a>(single_voxel_fit)</td>\n<td>Method decorator to turn a single voxel model fit</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.optional_package\" title=\"dipy.reconst.mapmri.optional_package\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">optional_package</span></code></a>(name[,&nbsp;trip_msg])</td>\n<td>Return package-like thing and module setup for package <cite>name</cite></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.real_sph_harm\" title=\"dipy.reconst.mapmri.real_sph_harm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real_sph_harm</span></code></a>(m,&nbsp;n,&nbsp;theta,&nbsp;phi)</td>\n<td>Compute real spherical harmonics.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.sph_harm_ind_list\" title=\"dipy.reconst.mapmri.sph_harm_ind_list\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sph_harm_ind_list</span></code></a>(sh_order)</td>\n<td>Returns the degree (n) and order (m) of all the symmetric spherical harmonics of degree less then or equal to <cite>sh_order</cite>.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.warn\" title=\"dipy.reconst.mapmri.warn\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">warn</span></code></a></td>\n<td>Issue a warning, or maybe ignore it or raise an exception.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.multi_voxel\">\n<span id=\"module-reconst-multi-voxel\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.multi_voxel</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.multi_voxel\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Tools to easily make multi voxel models</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.CallableArray\" title=\"dipy.reconst.multi_voxel.CallableArray\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">CallableArray</span></code></a></td>\n<td>An array which can be called like a function</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.MultiVoxelFit\" title=\"dipy.reconst.multi_voxel.MultiVoxelFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">MultiVoxelFit</span></code></a>(model,&nbsp;fit_array,&nbsp;mask)</td>\n<td>Holds an array of fits and allows access to their attributes and</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.ReconstFit\" title=\"dipy.reconst.multi_voxel.ReconstFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstFit</span></code></a>(model,&nbsp;data)</td>\n<td>Abstract class which holds the fit result of ReconstModel</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.as_strided\" title=\"dipy.reconst.multi_voxel.as_strided\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">as_strided</span></code></a>(x[,&nbsp;shape,&nbsp;strides,&nbsp;subok,&nbsp;writeable])</td>\n<td>Create a view into the array with the given shape and strides.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.multi_voxel_fit\" title=\"dipy.reconst.multi_voxel.multi_voxel_fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">multi_voxel_fit</span></code></a>(single_voxel_fit)</td>\n<td>Method decorator to turn a single voxel model fit</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.ndindex\" title=\"dipy.reconst.multi_voxel.ndindex\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ndindex</span></code></a>(shape)</td>\n<td>An N-dimensional iterator object to index arrays.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.odf\">\n<span id=\"module-reconst-odf\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.odf</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.odf\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfFit\" title=\"dipy.reconst.odf.OdfFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OdfFit</span></code></a>(model,&nbsp;data)</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfModel\" title=\"dipy.reconst.odf.OdfModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OdfModel</span></code></a>(gtab)</td>\n<td>An abstract class to be sub-classed by specific odf models</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.odf.ReconstFit\" title=\"dipy.reconst.odf.ReconstFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstFit</span></code></a>(model,&nbsp;data)</td>\n<td>Abstract class which holds the fit result of ReconstModel</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.odf.ReconstModel\" title=\"dipy.reconst.odf.ReconstModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstModel</span></code></a>(gtab)</td>\n<td>Abstract class for signal reconstruction models</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.odf.gfa\" title=\"dipy.reconst.odf.gfa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gfa</span></code></a>(samples)</td>\n<td>The general fractional anisotropy of a function evaluated</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.odf.minmax_normalize\" title=\"dipy.reconst.odf.minmax_normalize\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">minmax_normalize</span></code></a>(samples[,&nbsp;out])</td>\n<td>Min-max normalization of a function evaluated on the unit sphere</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.peaks\">\n<span id=\"module-reconst-peaks\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.peaks</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.peaks\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.HemiSphere\" title=\"dipy.reconst.peaks.HemiSphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">HemiSphere</span></code></a>([x,&nbsp;y,&nbsp;z,&nbsp;theta,&nbsp;phi,&nbsp;xyz,&nbsp;...])</td>\n<td>Points on the unit sphere.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.InTemporaryDirectory\" title=\"dipy.reconst.peaks.InTemporaryDirectory\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">InTemporaryDirectory</span></code></a>([suffix,&nbsp;prefix,&nbsp;dir])</td>\n<td>Create, return, and change directory to a temporary directory</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.PeaksAndMetrics\" title=\"dipy.reconst.peaks.PeaksAndMetrics\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">PeaksAndMetrics</span></code></a></td>\n<td><p class=\"rubric\">Attributes</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter\" title=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">PeaksAndMetricsDirectionGetter</span></code></a></td>\n<td>Deterministic Direction Getter based on peak directions.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere\" title=\"dipy.reconst.peaks.Sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Sphere</span></code></a>([x,&nbsp;y,&nbsp;z,&nbsp;theta,&nbsp;phi,&nbsp;xyz,&nbsp;faces,&nbsp;edges])</td>\n<td>Points on the unit sphere.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.repeat\" title=\"dipy.reconst.peaks.repeat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">repeat</span></code></a>(...)</td>\n<td>for the specified number of times.  If not specified, returns the object</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.xrange\" title=\"dipy.reconst.peaks.xrange\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">xrange</span></code></a></td>\n<td>alias of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></code></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Pool\" title=\"dipy.reconst.peaks.Pool\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Pool</span></code></a></td>\n<td>Returns a process pool object</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.cpu_count\" title=\"dipy.reconst.peaks.cpu_count\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cpu_count</span></code></a></td>\n<td>Returns the number of CPUs in the system</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.gfa\" title=\"dipy.reconst.peaks.gfa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gfa</span></code></a>(samples)</td>\n<td>The general fractional anisotropy of a function evaluated</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.local_maxima\" title=\"dipy.reconst.peaks.local_maxima\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">local_maxima</span></code></a></td>\n<td>Local maxima of a function evaluated on a discrete set of points.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.ndindex\" title=\"dipy.reconst.peaks.ndindex\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ndindex</span></code></a>(shape)</td>\n<td>An N-dimensional iterator object to index arrays.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.peak_directions\" title=\"dipy.reconst.peaks.peak_directions\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">peak_directions</span></code></a>(odf,&nbsp;sphere[,&nbsp;...])</td>\n<td>Get the directions of odf peaks</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.peak_directions_nl\" title=\"dipy.reconst.peaks.peak_directions_nl\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">peak_directions_nl</span></code></a>(sphere_eval[,&nbsp;...])</td>\n<td>Non Linear Direction Finder</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.peaks_from_model\" title=\"dipy.reconst.peaks.peaks_from_model\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">peaks_from_model</span></code></a>(model,&nbsp;data,&nbsp;sphere,&nbsp;...[,&nbsp;...])</td>\n<td>Fits the model to data and computes peaks and metrics</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.remove_similar_vertices\" title=\"dipy.reconst.peaks.remove_similar_vertices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">remove_similar_vertices</span></code></a></td>\n<td>Remove vertices that are less than <cite>theta</cite> degrees from any other</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.reshape_peaks_for_visualization\" title=\"dipy.reconst.peaks.reshape_peaks_for_visualization\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">reshape_peaks_for_visualization</span></code></a>(peaks)</td>\n<td>Reshape peaks for visualization.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.search_descending\" title=\"dipy.reconst.peaks.search_descending\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">search_descending</span></code></a></td>\n<td><cite>i</cite> in descending array <cite>a</cite> so <cite>a[i] &lt; a[0] * relative_threshold</cite></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.sh_to_sf_matrix\" title=\"dipy.reconst.peaks.sh_to_sf_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sh_to_sf_matrix</span></code></a>(sphere,&nbsp;sh_order[,&nbsp;...])</td>\n<td>Matrix that transforms Spherical harmonics (SH) to spherical function (SF).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.warn\" title=\"dipy.reconst.peaks.warn\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">warn</span></code></a></td>\n<td>Issue a warning, or maybe ignore it or raise an exception.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.sfm\">\n<span id=\"module-reconst-sfm\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.sfm</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.sfm\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The Sparse Fascicle Model.</p>\n<p>This is an implementation of the sparse fascicle model described in\n<a class=\"reference internal\" href=\"#id577\" id=\"id51\">[Rokem2015]</a>. The multi b-value version of this model is described in\n<a class=\"reference internal\" href=\"#id578\" id=\"id52\">[Rokem2014]</a>.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"rokem2015\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Rokem2015]</td><td>Ariel Rokem, Jason D. Yeatman, Franco Pestilli, Kendrick\nN. Kay, Aviv Mezer, Stefan van der Walt, Brian A. Wandell\n(2015). Evaluating the accuracy of diffusion MRI models in white\nmatter. PLoS ONE 10(4): e0123272. doi:10.1371/journal.pone.0123272</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"rokem2014\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Rokem2014]</td><td>Ariel Rokem, Kimberly L. Chan, Jason D. Yeatman, Franco\nPestilli,  Brian A. Wandell (2014). Evaluating the accuracy of diffusion\nmodels at multiple b-values with cross-validation. ISMRM 2014.</td></tr>\n</tbody>\n</table>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.Cache\" title=\"dipy.reconst.sfm.Cache\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Cache</span></code></a></td>\n<td>Cache values based on a key object (such as a sphere or gradient table).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ExponentialIsotropicFit\" title=\"dipy.reconst.sfm.ExponentialIsotropicFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ExponentialIsotropicFit</span></code></a>(model,&nbsp;params)</td>\n<td>A fit to the ExponentialIsotropicModel object, based on data.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ExponentialIsotropicModel\" title=\"dipy.reconst.sfm.ExponentialIsotropicModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ExponentialIsotropicModel</span></code></a>(gtab)</td>\n<td>Representing the isotropic signal as a fit to an exponential decay function</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.IsotropicFit\" title=\"dipy.reconst.sfm.IsotropicFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">IsotropicFit</span></code></a>(model,&nbsp;params)</td>\n<td>A fit object for representing the isotropic signal as the mean of the diffusion-weighted signal.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.IsotropicModel\" title=\"dipy.reconst.sfm.IsotropicModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">IsotropicModel</span></code></a>(gtab)</td>\n<td>A base-class for the representation of isotropic signals.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ReconstFit\" title=\"dipy.reconst.sfm.ReconstFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstFit</span></code></a>(model,&nbsp;data)</td>\n<td>Abstract class which holds the fit result of ReconstModel</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ReconstModel\" title=\"dipy.reconst.sfm.ReconstModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ReconstModel</span></code></a>(gtab)</td>\n<td>Abstract class for signal reconstruction models</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.SparseFascicleFit\" title=\"dipy.reconst.sfm.SparseFascicleFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">SparseFascicleFit</span></code></a>(model,&nbsp;beta,&nbsp;S0,&nbsp;iso)</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.SparseFascicleModel\" title=\"dipy.reconst.sfm.SparseFascicleModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">SparseFascicleModel</span></code></a>(gtab[,&nbsp;sphere,&nbsp;...])</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.auto_attr\" title=\"dipy.reconst.sfm.auto_attr\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">auto_attr</span></code></a>(func)</td>\n<td>Decorator to create OneTimeProperty attributes.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.nanmean\" title=\"dipy.reconst.sfm.nanmean\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nanmean</span></code></a>(a[,&nbsp;axis,&nbsp;dtype,&nbsp;out,&nbsp;keepdims])</td>\n<td>Compute the arithmetic mean along the specified axis, ignoring NaNs.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.optional_package\" title=\"dipy.reconst.sfm.optional_package\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">optional_package</span></code></a>(name[,&nbsp;trip_msg])</td>\n<td>Return package-like thing and module setup for package <cite>name</cite></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.sfm_design_matrix\" title=\"dipy.reconst.sfm.sfm_design_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sfm_design_matrix</span></code></a>(gtab,&nbsp;sphere,&nbsp;response[,&nbsp;mode])</td>\n<td>Construct the SFM design matrix</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.shm\">\n<span id=\"module-reconst-shm\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.shm</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.shm\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Tools for using spherical harmonic models to fit diffusion data</p>\n<div class=\"section\" id=\"references\">\n<h3>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"docutils\">\n<dt>Aganj, I., et. al. 2009. ODF Reconstruction in Q-Ball Imaging With Solid</dt>\n<dd>Angle Consideration.</dd>\n<dt>Descoteaux, M., et. al. 2007. Regularized, fast, and robust analytical</dt>\n<dd>Q-ball imaging.</dd>\n<dt>Tristan-Vega, A., et. al. 2010. A new methodology for estimation of fiber</dt>\n<dd>populations in white matter of the brain with Funk-Radon transform.</dd>\n<dt>Tristan-Vega, A., et. al. 2009. Estimation of fiber orientation probability</dt>\n<dd>density functions in high angular resolution diffusion imaging.</dd>\n</dl>\n<p>Note about the Transpose:\nIn the literature the matrix representation of these methods is often written\nas Y = Bx where B is some design matrix and Y and x are column vectors. In our\ncase the input data, a dwi stored as a nifti file for example, is stored as row\nvectors (ndarrays) of the form (x, y, z, n), where n is the number of diffusion\ndirections. We could transpose and reshape the data to be (n, x*y*z), so that\nwe could directly plug it into the above equation. However, I have chosen to\nkeep the data as is and implement the relevant equations rewritten in the\nfollowing form: Y.T = x.T B.T, or in python syntax data = np.dot(sh_coef, B.T)\nwhere data is Y.T and sh_coef is x.T.</p>\n</div>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.Cache\" title=\"dipy.reconst.shm.Cache\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Cache</span></code></a></td>\n<td>Cache values based on a key object (such as a sphere or gradient table).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.CsaOdfModel\" title=\"dipy.reconst.shm.CsaOdfModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">CsaOdfModel</span></code></a>(gtab,&nbsp;sh_order[,&nbsp;smooth,&nbsp;...])</td>\n<td>Implementation of Constant Solid Angle reconstruction method.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.LooseVersion\" title=\"dipy.reconst.shm.LooseVersion\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">LooseVersion</span></code></a>([vstring])</td>\n<td>Version numbering for anarchists and software realists.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.OdfFit\" title=\"dipy.reconst.shm.OdfFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OdfFit</span></code></a>(model,&nbsp;data)</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.OdfModel\" title=\"dipy.reconst.shm.OdfModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OdfModel</span></code></a>(gtab)</td>\n<td>An abstract class to be sub-classed by specific odf models</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.OpdtModel\" title=\"dipy.reconst.shm.OpdtModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OpdtModel</span></code></a>(gtab,&nbsp;sh_order[,&nbsp;smooth,&nbsp;...])</td>\n<td>Implementation of Orientation Probability Density Transform reconstruction method.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.QballBaseModel\" title=\"dipy.reconst.shm.QballBaseModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">QballBaseModel</span></code></a>(gtab,&nbsp;sh_order[,&nbsp;smooth,&nbsp;...])</td>\n<td>To be subclassed by Qball type models.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.QballModel\" title=\"dipy.reconst.shm.QballModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">QballModel</span></code></a>(gtab,&nbsp;sh_order[,&nbsp;smooth,&nbsp;...])</td>\n<td>Implementation of regularized Qball reconstruction method.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.ResidualBootstrapWrapper\" title=\"dipy.reconst.shm.ResidualBootstrapWrapper\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ResidualBootstrapWrapper</span></code></a>(signal_object,&nbsp;B,&nbsp;...)</td>\n<td>Returns a residual bootstrap sample of the signal_object when indexed</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmFit\" title=\"dipy.reconst.shm.SphHarmFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">SphHarmFit</span></code></a>(model,&nbsp;shm_coef,&nbsp;mask)</td>\n<td>Diffusion data fit to a spherical harmonic model</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmModel\" title=\"dipy.reconst.shm.SphHarmModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">SphHarmModel</span></code></a>(gtab)</td>\n<td>To be subclassed by all models that return a SphHarmFit when fit.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.anisotropic_power\" title=\"dipy.reconst.shm.anisotropic_power\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">anisotropic_power</span></code></a>(sh_coeffs[,&nbsp;norm_factor,&nbsp;...])</td>\n<td>Calculates anisotropic power map with a given SH coefficient matrix</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.auto_attr\" title=\"dipy.reconst.shm.auto_attr\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">auto_attr</span></code></a>(func)</td>\n<td>Decorator to create OneTimeProperty attributes.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.bootstrap_data_array\" title=\"dipy.reconst.shm.bootstrap_data_array\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bootstrap_data_array</span></code></a>(data,&nbsp;H,&nbsp;R[,&nbsp;permute])</td>\n<td>Applies the Residual Bootstraps to the data given H and R</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.bootstrap_data_voxel\" title=\"dipy.reconst.shm.bootstrap_data_voxel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bootstrap_data_voxel</span></code></a>(data,&nbsp;H,&nbsp;R[,&nbsp;permute])</td>\n<td>Like bootstrap_data_array but faster when for a single voxel</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.calculate_max_order\" title=\"dipy.reconst.shm.calculate_max_order\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">calculate_max_order</span></code></a>(n_coeffs)</td>\n<td>Calculate the maximal harmonic order, given that you know the         number of parameters that were estimated.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.cart2sphere\" title=\"dipy.reconst.shm.cart2sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cart2sphere</span></code></a>(x,&nbsp;y,&nbsp;z)</td>\n<td>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.concatenate\" title=\"dipy.reconst.shm.concatenate\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">concatenate</span></code></a>((a1,&nbsp;a2,&nbsp;...)[,&nbsp;axis])</td>\n<td>Join a sequence of arrays along an existing axis.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.diag\" title=\"dipy.reconst.shm.diag\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">diag</span></code></a>(v[,&nbsp;k])</td>\n<td>Extract a diagonal or construct a diagonal array.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.diff\" title=\"dipy.reconst.shm.diff\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">diff</span></code></a>(a[,&nbsp;n,&nbsp;axis])</td>\n<td>Calculate the n-th discrete difference along given axis.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.dot\" title=\"dipy.reconst.shm.dot\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dot</span></code></a>(a,&nbsp;b[,&nbsp;out])</td>\n<td>Dot product of two arrays.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.empty\" title=\"dipy.reconst.shm.empty\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">empty</span></code></a>(shape[,&nbsp;dtype,&nbsp;order])</td>\n<td>Return a new array of given shape and type, without initializing entries.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.eye\" title=\"dipy.reconst.shm.eye\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">eye</span></code></a>(N[,&nbsp;M,&nbsp;k,&nbsp;dtype])</td>\n<td>Return a 2-D array with ones on the diagonal and zeros elsewhere.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.forward_sdeconv_mat\" title=\"dipy.reconst.shm.forward_sdeconv_mat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">forward_sdeconv_mat</span></code></a>(r_rh,&nbsp;n)</td>\n<td>Build forward spherical deconvolution matrix</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.gammaln\" title=\"dipy.reconst.shm.gammaln\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gammaln</span></code></a>(x)</td>\n<td>Logarithm of the absolute value of the Gamma function for real inputs.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.gen_dirac\" title=\"dipy.reconst.shm.gen_dirac\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gen_dirac</span></code></a>(m,&nbsp;n,&nbsp;theta,&nbsp;phi)</td>\n<td>Generate Dirac delta function orientated in (theta, phi) on the sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.hat\" title=\"dipy.reconst.shm.hat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">hat</span></code></a>(B)</td>\n<td>Returns the hat matrix for the design matrix B</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.lazy_index\" title=\"dipy.reconst.shm.lazy_index\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lazy_index</span></code></a>(index)</td>\n<td>Produces a lazy index</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.lcr_matrix\" title=\"dipy.reconst.shm.lcr_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lcr_matrix</span></code></a>(H)</td>\n<td>Returns a matrix for computing leveraged, centered residuals from data</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.lpn\" title=\"dipy.reconst.shm.lpn\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lpn</span></code></a>(n,&nbsp;z)</td>\n<td>Legendre function of the first kind.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.normalize_data\" title=\"dipy.reconst.shm.normalize_data\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">normalize_data</span></code></a>(data,&nbsp;where_b0[,&nbsp;min_signal,&nbsp;out])</td>\n<td>Normalizes the data with respect to the mean b0</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.order_from_ncoef\" title=\"dipy.reconst.shm.order_from_ncoef\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">order_from_ncoef</span></code></a>(ncoef)</td>\n<td>Given a number n of coefficients, calculate back the sh_order</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.pinv\" title=\"dipy.reconst.shm.pinv\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pinv</span></code></a>(a[,&nbsp;rcond])</td>\n<td>Compute the (Moore-Penrose) pseudo-inverse of a matrix.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.randint\" title=\"dipy.reconst.shm.randint\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">randint</span></code></a>(low[,&nbsp;high,&nbsp;size,&nbsp;dtype])</td>\n<td>Return random integers from <cite>low</cite> (inclusive) to <cite>high</cite> (exclusive).</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.real_sph_harm\" title=\"dipy.reconst.shm.real_sph_harm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real_sph_harm</span></code></a>(m,&nbsp;n,&nbsp;theta,&nbsp;phi)</td>\n<td>Compute real spherical harmonics.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.real_sym_sh_basis\" title=\"dipy.reconst.shm.real_sym_sh_basis\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real_sym_sh_basis</span></code></a>(sh_order,&nbsp;theta,&nbsp;phi)</td>\n<td>Samples a real symmetric spherical harmonic basis at point on the sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.real_sym_sh_mrtrix\" title=\"dipy.reconst.shm.real_sym_sh_mrtrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real_sym_sh_mrtrix</span></code></a>(sh_order,&nbsp;theta,&nbsp;phi)</td>\n<td>Compute real spherical harmonics as in mrtrix, where the real harmonic</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.sf_to_sh\" title=\"dipy.reconst.shm.sf_to_sh\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sf_to_sh</span></code></a>(sf,&nbsp;sphere[,&nbsp;sh_order,&nbsp;basis_type,&nbsp;...])</td>\n<td>Spherical function to spherical harmonics (SH).</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.sh_to_rh\" title=\"dipy.reconst.shm.sh_to_rh\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sh_to_rh</span></code></a>(r_sh,&nbsp;m,&nbsp;n)</td>\n<td>Spherical harmonics (SH) to rotational harmonics (RH)</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.sh_to_sf\" title=\"dipy.reconst.shm.sh_to_sf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sh_to_sf</span></code></a>(sh,&nbsp;sphere,&nbsp;sh_order[,&nbsp;basis_type])</td>\n<td>Spherical harmonics (SH) to spherical function (SF).</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.sh_to_sf_matrix\" title=\"dipy.reconst.shm.sh_to_sf_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sh_to_sf_matrix</span></code></a>(sphere,&nbsp;sh_order[,&nbsp;...])</td>\n<td>Matrix that transforms Spherical harmonics (SH) to spherical function (SF).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.smooth_pinv\" title=\"dipy.reconst.shm.smooth_pinv\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">smooth_pinv</span></code></a>(B,&nbsp;L)</td>\n<td>Regularized pseudo-inverse</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.sph_harm_ind_list\" title=\"dipy.reconst.shm.sph_harm_ind_list\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sph_harm_ind_list</span></code></a>(sh_order)</td>\n<td>Returns the degree (n) and order (m) of all the symmetric spherical harmonics of degree less then or equal to <cite>sh_order</cite>.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.spherical_harmonics\" title=\"dipy.reconst.shm.spherical_harmonics\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">spherical_harmonics</span></code></a>(m,&nbsp;n,&nbsp;theta,&nbsp;phi)</td>\n<td>Compute spherical harmonics</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.svd\" title=\"dipy.reconst.shm.svd\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">svd</span></code></a>(a[,&nbsp;full_matrices,&nbsp;compute_uv])</td>\n<td>Singular Value Decomposition.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.unique\" title=\"dipy.reconst.shm.unique\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">unique</span></code></a>(ar[,&nbsp;return_index,&nbsp;return_inverse,&nbsp;...])</td>\n<td>Find the unique elements of an array.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.reconst.shore\">\n<span id=\"module-reconst-shore\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">reconst.shore</span></code><a class=\"headerlink\" href=\"#module-dipy.reconst.shore\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.Cache\" title=\"dipy.reconst.shore.Cache\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Cache</span></code></a></td>\n<td>Cache values based on a key object (such as a sphere or gradient table).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit\" title=\"dipy.reconst.shore.ShoreFit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ShoreFit</span></code></a>(model,&nbsp;shore_coef)</td>\n<td><p class=\"rubric\">Attributes</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreModel\" title=\"dipy.reconst.shore.ShoreModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ShoreModel</span></code></a>(gtab[,&nbsp;radial_order,&nbsp;zeta,&nbsp;...])</td>\n<td>Simple Harmonic Oscillator based Reconstruction and Estimation (SHORE) [R150] of the diffusion signal.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.cart2sphere\" title=\"dipy.reconst.shore.cart2sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cart2sphere</span></code></a>(x,&nbsp;y,&nbsp;z)</td>\n<td>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.create_rspace\" title=\"dipy.reconst.shore.create_rspace\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">create_rspace</span></code></a>(gridsize,&nbsp;radius_max)</td>\n<td>Create the real space table, that contains the points in which     to compute the pdf.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.factorial\" title=\"dipy.reconst.shore.factorial\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">factorial</span></code></a>((x)&nbsp;-&gt;&nbsp;Integral)</td>\n<td>Find x!.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.genlaguerre\" title=\"dipy.reconst.shore.genlaguerre\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">genlaguerre</span></code></a>(n,&nbsp;alpha[,&nbsp;monic])</td>\n<td>Generalized (associated) Laguerre polynomial.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.l_shore\" title=\"dipy.reconst.shore.l_shore\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">l_shore</span></code></a>(radial_order)</td>\n<td>Returns the angular regularisation matrix for SHORE basis</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.multi_voxel_fit\" title=\"dipy.reconst.shore.multi_voxel_fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">multi_voxel_fit</span></code></a>(single_voxel_fit)</td>\n<td>Method decorator to turn a single voxel model fit</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.n_shore\" title=\"dipy.reconst.shore.n_shore\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">n_shore</span></code></a>(radial_order)</td>\n<td>Returns the angular regularisation matrix for SHORE basis</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.optional_package\" title=\"dipy.reconst.shore.optional_package\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">optional_package</span></code></a>(name[,&nbsp;trip_msg])</td>\n<td>Return package-like thing and module setup for package <cite>name</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.real_sph_harm\" title=\"dipy.reconst.shore.real_sph_harm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real_sph_harm</span></code></a>(m,&nbsp;n,&nbsp;theta,&nbsp;phi)</td>\n<td>Compute real spherical harmonics.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.shore_indices\" title=\"dipy.reconst.shore.shore_indices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shore_indices</span></code></a>(radial_order,&nbsp;index)</td>\n<td>Given the basis order and the index, return the shore indices n, l, m</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.shore_matrix\" title=\"dipy.reconst.shore.shore_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shore_matrix</span></code></a>(radial_order,&nbsp;zeta,&nbsp;gtab[,&nbsp;tau])</td>\n<td>Compute the SHORE matrix for modified Merlet&#8217;s 3D-SHORE [R155]</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.shore_matrix_odf\" title=\"dipy.reconst.shore.shore_matrix_odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shore_matrix_odf</span></code></a>(radial_order,&nbsp;zeta,&nbsp;...)</td>\n<td>Compute the SHORE ODF matrix [R156]&#8220;</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.shore_matrix_pdf\" title=\"dipy.reconst.shore.shore_matrix_pdf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shore_matrix_pdf</span></code></a>(radial_order,&nbsp;zeta,&nbsp;rtab)</td>\n<td>Compute the SHORE propagator matrix [R157]&#8220;</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.shore_order\" title=\"dipy.reconst.shore.shore_order\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shore_order</span></code></a>(n,&nbsp;l,&nbsp;m)</td>\n<td>Given the indices (n,l,m) of the basis, return the minimum order for those indices and their index for modified Merlet&#8217;s 3D-SHORE.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.warn\" title=\"dipy.reconst.shore.warn\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">warn</span></code></a></td>\n<td>Issue a warning, or maybe ignore it or raise an exception.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"bench\">\n<h3>bench<a class=\"headerlink\" href=\"#bench\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.bench\">\n<code class=\"descclassname\">dipy.reconst.</code><code class=\"descname\">bench</code><span class=\"sig-paren\">(</span><em>self</em>, <em>label='fast'</em>, <em>verbose=1</em>, <em>extra_argv=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.bench\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run benchmarks for module using nose.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>label</strong> : {&#8216;fast&#8217;, &#8216;full&#8217;, &#8216;&#8217;, attribute identifier}, optional</p>\n<blockquote>\n<div><p>Identifies the benchmarks to run. This can be a string to pass to\nthe nosetests executable with the &#8216;-A&#8217; option, or one of several\nspecial values.  Special values are:\n* &#8216;fast&#8217; - the default - which corresponds to the <code class=\"docutils literal\"><span class=\"pre\">nosetests</span> <span class=\"pre\">-A</span></code></p>\n<blockquote>\n<div><p>option of &#8216;not slow&#8217;.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li>&#8216;full&#8217; - fast (as above) and slow benchmarks as in the\n&#8216;no -A&#8217; option to nosetests - this is the same as &#8216;&#8217;.</li>\n<li>None or &#8216;&#8217; - run all tests.</li>\n</ul>\n<p>attribute_identifier - string passed directly to nosetests as &#8216;-A&#8217;.</p>\n</div></blockquote>\n<p><strong>verbose</strong> : int, optional</p>\n<blockquote>\n<div><p>Verbosity value for benchmark outputs, in the range 1-10. Default is 1.</p>\n</div></blockquote>\n<p><strong>extra_argv</strong> : list, optional</p>\n<blockquote>\n<div><p>List with any extra arguments to pass to nosetests.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>success</strong> : bool</p>\n<blockquote class=\"last\">\n<div><p>Returns True if running the benchmarks works, False if an error\noccurred.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Benchmarks are like tests, but have names starting with &#8220;bench&#8221; instead\nof &#8220;test&#8221;, and can be found under the &#8220;benchmarks&#8221; sub-directory of the\nmodule.</p>\n<p>Each NumPy module exposes <cite>bench</cite> in its namespace to run all benchmarks\nfor it.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">bench</span><span class=\"p\">()</span> \n<span class=\"go\">Running benchmarks for numpy.lib</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">using 562341 items:</span>\n<span class=\"go\">unique:</span>\n<span class=\"go\">0.11</span>\n<span class=\"go\">unique1d:</span>\n<span class=\"go\">0.11</span>\n<span class=\"go\">ratio: 1.0</span>\n<span class=\"go\">nUnique: 56230 == 56230</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">OK</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">success</span> \n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"test\">\n<h3>test<a class=\"headerlink\" href=\"#test\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.test\">\n<code class=\"descclassname\">dipy.reconst.</code><code class=\"descname\">test</code><span class=\"sig-paren\">(</span><em>self</em>, <em>label='fast'</em>, <em>verbose=1</em>, <em>extra_argv=None</em>, <em>doctests=False</em>, <em>coverage=False</em>, <em>raise_warnings=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run tests for module using nose.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>label</strong> : {&#8216;fast&#8217;, &#8216;full&#8217;, &#8216;&#8217;, attribute identifier}, optional</p>\n<blockquote>\n<div><p>Identifies the tests to run. This can be a string to pass to\nthe nosetests executable with the &#8216;-A&#8217; option, or one of several\nspecial values.  Special values are:\n* &#8216;fast&#8217; - the default - which corresponds to the <code class=\"docutils literal\"><span class=\"pre\">nosetests</span> <span class=\"pre\">-A</span></code></p>\n<blockquote>\n<div><p>option of &#8216;not slow&#8217;.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li>&#8216;full&#8217; - fast (as above) and slow tests as in the\n&#8216;no -A&#8217; option to nosetests - this is the same as &#8216;&#8217;.</li>\n<li>None or &#8216;&#8217; - run all tests.</li>\n</ul>\n<p>attribute_identifier - string passed directly to nosetests as &#8216;-A&#8217;.</p>\n</div></blockquote>\n<p><strong>verbose</strong> : int, optional</p>\n<blockquote>\n<div><p>Verbosity value for test outputs, in the range 1-10. Default is 1.</p>\n</div></blockquote>\n<p><strong>extra_argv</strong> : list, optional</p>\n<blockquote>\n<div><p>List with any extra arguments to pass to nosetests.</p>\n</div></blockquote>\n<p><strong>doctests</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, run doctests in module. Default is False.</p>\n</div></blockquote>\n<p><strong>coverage</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, report coverage of NumPy code. Default is False.\n(This requires the <a href=\"#id57\"><span class=\"problematic\" id=\"id58\">`</span></a>coverage module:</p>\n<blockquote>\n<div><p>&lt;<a class=\"reference external\" href=\"http://nedbatchelder.com/code/modules/coverage.html\">http://nedbatchelder.com/code/modules/coverage.html</a>&gt;`_).</p>\n</div></blockquote>\n</div></blockquote>\n<p><strong>raise_warnings</strong> : None, str or sequence of warnings, optional</p>\n<blockquote>\n<div><p>This specifies which warnings to configure as &#8216;raise&#8217; instead\nof being shown once during the test execution.  Valid strings are:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>&#8220;develop&#8221; : equals <code class=\"docutils literal\"><span class=\"pre\">(Warning,)</span></code></li>\n<li>&#8220;release&#8221; : equals <code class=\"docutils literal\"><span class=\"pre\">()</span></code>, don&#8217;t raise on any warnings.</li>\n</ul>\n</div></blockquote>\n<p>The default is to use the class initialization value.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>result</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Returns the result of running the tests as a\n<code class=\"docutils literal\"><span class=\"pre\">nose.result.TextTestResult</span></code> object.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Each NumPy module exposes <cite>test</cite> in its namespace to run all tests for it.\nFor example, to run all tests for numpy.lib:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span> \n</pre></div>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span> \n<span class=\"go\">Running unit tests for numpy.lib</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Ran 976 tests in 3.933s</span>\n</pre></div>\n</div>\n<p>OK</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">errors</span> \n<span class=\"go\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">knownfail</span> \n<span class=\"go\">[]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"reconstfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstFit</span></code></a><a class=\"headerlink\" href=\"#reconstfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.base.ReconstFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.base.</code><code class=\"descname\">ReconstFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.base.ReconstFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class which holds the fit result of ReconstModel</p>\n<p>For example that could be holding FA or GFA etc.</p>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.base.ReconstFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.base.ReconstFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"reconstmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstModel</span></code></a><a class=\"headerlink\" href=\"#reconstmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.base.ReconstModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.base.</code><code class=\"descname\">ReconstModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.base.ReconstModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class for signal reconstruction models</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel.fit\" title=\"dipy.reconst.base.ReconstModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.base.ReconstModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.base.ReconstModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialization of the abstract class for signal reconstruction models</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gtab</strong> : GradientTable class instance</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.base.ReconstModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.base.ReconstModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bench-bounding-box\">\n<h3>bench_bounding_box<a class=\"headerlink\" href=\"#bench-bounding-box\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_bounding_box.bench_bounding_box\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_bounding_box.</code><code class=\"descname\">bench_bounding_box</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_bounding_box.bench_bounding_box\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"bounding-box\">\n<h3>bounding_box<a class=\"headerlink\" href=\"#bounding-box\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_bounding_box.bounding_box\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_bounding_box.</code><code class=\"descname\">bounding_box</code><span class=\"sig-paren\">(</span><em>vol</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_bounding_box.bounding_box\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the bounding box of nonzero intensity voxels in the volume.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vol</strong> : ndarray</p>\n<blockquote>\n<div><p>Volume to compute bounding box on.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>npmins</strong> : list</p>\n<blockquote>\n<div><p>Array containg minimum index of each dimension</p>\n</div></blockquote>\n<p><strong>npmaxs</strong> : list</p>\n<blockquote class=\"last\">\n<div><p>Array containg maximum index of each dimension</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"measure\">\n<h3>measure<a class=\"headerlink\" href=\"#measure\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_bounding_box.measure\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_bounding_box.</code><code class=\"descname\">measure</code><span class=\"sig-paren\">(</span><em>code_str</em>, <em>times=1</em>, <em>label=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_bounding_box.measure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return elapsed time for executing code in the namespace of the caller.</p>\n<p>The supplied code string is compiled with the Python builtin <code class=\"docutils literal\"><span class=\"pre\">compile</span></code>.\nThe precision of the timing is 10 milli-seconds. If the code will execute\nfast on this timescale, it can be executed many times to get reasonable\ntiming accuracy.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>code_str</strong> : str</p>\n<blockquote>\n<div><p>The code to be timed.</p>\n</div></blockquote>\n<p><strong>times</strong> : int, optional</p>\n<blockquote>\n<div><p>The number of times the code is executed. Default is 1. The code is\nonly compiled once.</p>\n</div></blockquote>\n<p><strong>label</strong> : str, optional</p>\n<blockquote>\n<div><p>A label to identify <cite>code_str</cite> with. This is passed into <code class=\"docutils literal\"><span class=\"pre\">compile</span></code>\nas the second argument (for run-time error messages).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>elapsed</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Total elapsed time in seconds for executing <cite>code_str</cite> <cite>times</cite> times.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">etime</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">measure</span><span class=\"p\">(</span><span class=\"s1\">&#39;for i in range(1000): np.sqrt(i**2)&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">times</span><span class=\"o\">=</span><span class=\"n\">times</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Time for a single execution : &quot;</span><span class=\"p\">,</span> <span class=\"n\">etime</span> <span class=\"o\">/</span> <span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"s2\">&quot;s&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">Time for a single execution :  0.005 s</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"constrainedsphericaldeconvmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel\" title=\"dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ConstrainedSphericalDeconvModel</span></code></a><a class=\"headerlink\" href=\"#constrainedsphericaldeconvmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.benchmarks.bench_csd.</code><code class=\"descname\">ConstrainedSphericalDeconvModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>response</em>, <em>reg_sphere=None</em>, <em>sh_order=8</em>, <em>lambda_=1</em>, <em>tau=0.1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmModel\" title=\"dipy.reconst.shm.SphHarmModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.shm.SphHarmModel</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.fit\" title=\"dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method for every voxel in data</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.predict\" title=\"dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(sh_coeff[,&nbsp;gtab,&nbsp;S0])</td>\n<td>Compute a signal prediction given spherical harmonic coefficients for the provided GradientTable class instance.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sampling_matrix</span></code>(sphere)</td>\n<td>The matrix needed to sample ODFs from coefficients of the model.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>response</em>, <em>reg_sphere=None</em>, <em>sh_order=8</em>, <em>lambda_=1</em>, <em>tau=0.1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constrained Spherical Deconvolution (CSD) <a class=\"reference internal\" href=\"#r158\" id=\"id59\">[R158]</a>.</p>\n<p>Spherical deconvolution computes a fiber orientation distribution\n(FOD), also called fiber ODF (fODF) <a class=\"reference internal\" href=\"#r159\" id=\"id60\">[R159]</a>, as opposed to a diffusion ODF\nas the QballModel or the CsaOdfModel. This results in a sharper angular\nprofile with better angular resolution that is the best object to be\nused for later deterministic and probabilistic tractography <a class=\"reference internal\" href=\"#r160\" id=\"id61\">[R160]</a>.</p>\n<p>A sharp fODF is obtained because a single fiber <em>response</em> function is\ninjected as <em>a priori</em> knowledge. The response function is often\ndata-driven and is thus provided as input to the\nConstrainedSphericalDeconvModel. It will be used as deconvolution\nkernel, as described in <a class=\"reference internal\" href=\"#r158\" id=\"id62\">[R158]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<p><strong>response</strong> : tuple or AxSymShResponse object</p>\n<blockquote>\n<div><p>A tuple with two elements. The first is the eigen-values as an (3,)\nndarray and the second is the signal value for the response\nfunction without diffusion weighting.  This is to be able to\ngenerate a single fiber synthetic signal. The response function\nwill be used as deconvolution kernel (<a class=\"reference internal\" href=\"#r158\" id=\"id63\">[R158]</a>)</p>\n</div></blockquote>\n<p><strong>reg_sphere</strong> : Sphere (optional)</p>\n<blockquote>\n<div><p>sphere used to build the regularization B matrix.\nDefault: &#8216;symmetric362&#8217;.</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int (optional)</p>\n<blockquote>\n<div><p>maximal spherical harmonics order. Default: 8</p>\n</div></blockquote>\n<p><strong>lambda_</strong> : float (optional)</p>\n<blockquote>\n<div><p>weight given to the constrained-positivity regularization part of\nthe deconvolution equation (see <a class=\"reference internal\" href=\"#r158\" id=\"id64\">[R158]</a>). Default: 1</p>\n</div></blockquote>\n<p><strong>tau</strong> : float (optional)</p>\n<blockquote class=\"last\">\n<div><p>threshold controlling the amplitude below which the corresponding\nfODF is assumed to be zero.  Ideally, tau should be set to\nzero. However, to improve the stability of the algorithm, tau is\nset to tau*100 % of the mean fODF amplitude (here, 10% by default)\n(see <a class=\"reference internal\" href=\"#r158\" id=\"id65\">[R158]</a>). Default: 0.1</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r158\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R158]</td><td><em>(<a class=\"fn-backref\" href=\"#id59\">1</a>, <a class=\"fn-backref\" href=\"#id62\">2</a>, <a class=\"fn-backref\" href=\"#id63\">3</a>, <a class=\"fn-backref\" href=\"#id64\">4</a>, <a class=\"fn-backref\" href=\"#id65\">5</a>, <a class=\"fn-backref\" href=\"#id66\">6</a>)</em> Tournier, J.D., et al. NeuroImage 2007. Robust determination of\nthe fibre orientation distribution in diffusion MRI:\nNon-negativity constrained super-resolved spherical\ndeconvolution</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r159\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R159]</td><td><em>(<a class=\"fn-backref\" href=\"#id60\">1</a>, <a class=\"fn-backref\" href=\"#id67\">2</a>)</em> Descoteaux, M., et al. IEEE TMI 2009. Deterministic and\nProbabilistic Tractography Based on Complex Fibre Orientation\nDistributions</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r160\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R160]</td><td><em>(<a class=\"fn-backref\" href=\"#id61\">1</a>, <a class=\"fn-backref\" href=\"#id68\">2</a>)</em> C^ot&#8217;e, M-A., et al. Medical Image Analysis 2013. Tractometer:\nTowards validation of tractography pipelines</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r161\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id69\">[R161]</a></td><td>Tournier, J.D, et al. Imaging Systems and Technology\n2012. MRtrix: Diffusion Tractography in Crossing Fiber Regions</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method for every voxel in data</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>sh_coeff</em>, <em>gtab=None</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.ConstrainedSphericalDeconvModel.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute a signal prediction given spherical harmonic coefficients\nfor the provided GradientTable class instance.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sh_coeff</strong> : ndarray</p>\n<blockquote>\n<div><p>The spherical harmonic representation of the FOD from which to make\nthe signal prediction.</p>\n</div></blockquote>\n<p><strong>gtab</strong> : GradientTable</p>\n<blockquote>\n<div><p>The gradients for which the signal will be predicted. Use the\nmodel&#8217;s gradient table by default.</p>\n</div></blockquote>\n<p><strong>S0</strong> : ndarray or float</p>\n<blockquote>\n<div><p>The non diffusion-weighted signal value.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>pred_sig</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The predicted signal.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gradienttable\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable\" title=\"dipy.reconst.benchmarks.bench_csd.GradientTable\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">GradientTable</span></code></a><a class=\"headerlink\" href=\"#gradienttable\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.GradientTable\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.benchmarks.bench_csd.</code><code class=\"descname\">GradientTable</code><span class=\"sig-paren\">(</span><em>gradients</em>, <em>big_delta=None</em>, <em>small_delta=None</em>, <em>b0_threshold=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Diffusion gradient information</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gradients</strong> : array_like (N, 3)</p>\n<blockquote>\n<div><p>Diffusion gradients. The direction of each of these vectors corresponds\nto the b-vector, and the length corresponds to the b-value.</p>\n</div></blockquote>\n<p><strong>b0_threshold</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Gradients with b-value less than or equal to <cite>b0_threshold</cite> are\nconsidered as b0s i.e. without diffusion weighting.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gradient_table</span></code></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>The GradientTable object is immutable. Do NOT assign attributes.\nIf you have your gradient table in a bval &amp; bvec format, we recommend\nusing the factory function gradient_table</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.bvals\" title=\"dipy.reconst.benchmarks.bench_csd.GradientTable.bvals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bvals</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.bvecs\" title=\"dipy.reconst.benchmarks.bench_csd.GradientTable.bvecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bvecs</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.b0s_mask\" title=\"dipy.reconst.benchmarks.bench_csd.GradientTable.b0s_mask\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">b0s_mask</span></code></a>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"20%\" />\n<col width=\"14%\" />\n<col width=\"66%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td>gradients</td>\n<td>(N,3) ndarray</td>\n<td>diffusion gradients</td>\n</tr>\n<tr class=\"row-even\"><td>qvals: (N,) ndarray</td>\n<td>&#160;</td>\n<td>The q-value for each gradient direction. Needs big and small\ndelta.</td>\n</tr>\n<tr class=\"row-odd\"><td>b0_threshold</td>\n<td>float</td>\n<td>Gradients with b-value less than or equal to <cite>b0_threshold</cite> are\nconsidered to not have diffusion weighting.</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.b0s_mask\" title=\"dipy.reconst.benchmarks.bench_csd.GradientTable.b0s_mask\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">b0s_mask</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.bvals\" title=\"dipy.reconst.benchmarks.bench_csd.GradientTable.bvals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bvals</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.bvecs\" title=\"dipy.reconst.benchmarks.bench_csd.GradientTable.bvecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bvecs</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.qvals\" title=\"dipy.reconst.benchmarks.bench_csd.GradientTable.qvals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">qvals</span></code></a>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.GradientTable.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gradients</em>, <em>big_delta=None</em>, <em>small_delta=None</em>, <em>b0_threshold=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructor for GradientTable class</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.GradientTable.b0s_mask\">\n<code class=\"descname\">b0s_mask</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.b0s_mask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.GradientTable.bvals\">\n<code class=\"descname\">bvals</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.bvals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.GradientTable.bvecs\">\n<code class=\"descname\">bvecs</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.GradientTable.info\">\n<code class=\"descname\">info</code><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.GradientTable.qvals\">\n<code class=\"descname\">qvals</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.GradientTable.qvals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bench-csdeconv\">\n<h3>bench_csdeconv<a class=\"headerlink\" href=\"#bench-csdeconv\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.bench_csdeconv\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_csd.</code><code class=\"descname\">bench_csdeconv</code><span class=\"sig-paren\">(</span><em>center=(50</em>, <em>40</em>, <em>40)</em>, <em>width=12</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.bench_csdeconv\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"num-grad\">\n<h3>num_grad<a class=\"headerlink\" href=\"#num-grad\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.num_grad\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_csd.</code><code class=\"descname\">num_grad</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.num_grad\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"read-stanford-labels\">\n<h3>read_stanford_labels<a class=\"headerlink\" href=\"#read-stanford-labels\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_csd.read_stanford_labels\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_csd.</code><code class=\"descname\">read_stanford_labels</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_csd.read_stanford_labels\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Read stanford hardi data and label map</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bench-local-maxima\">\n<h3>bench_local_maxima<a class=\"headerlink\" href=\"#bench-local-maxima\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_peaks.bench_local_maxima\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_peaks.</code><code class=\"descname\">bench_local_maxima</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_peaks.bench_local_maxima\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"get-sphere\">\n<h3>get_sphere<a class=\"headerlink\" href=\"#get-sphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_peaks.get_sphere\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_peaks.</code><code class=\"descname\">get_sphere</code><span class=\"sig-paren\">(</span><em>name='symmetric362'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_peaks.get_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>provide triangulated spheres</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>name</strong> : str</p>\n<blockquote>\n<div><p>which sphere - one of:\n* &#8216;symmetric362&#8217;\n* &#8216;symmetric642&#8217;\n* &#8216;symmetric724&#8217;\n* &#8216;repulsion724&#8217;\n* &#8216;repulsion100&#8217;\n* &#8216;repulsion200&#8217;</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>sphere</strong> : a dipy.core.sphere.Sphere class instance</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric362&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">faces</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">362</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">720</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;not a sphere name&#39;</span><span class=\"p\">)</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n    <span class=\"o\">...</span>\n<span class=\"gr\">DataError</span>: <span class=\"n\">No sphere called &quot;not a sphere name&quot;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"local-maxima\">\n<h3>local_maxima<a class=\"headerlink\" href=\"#local-maxima\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_peaks.local_maxima\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_peaks.</code><code class=\"descname\">local_maxima</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_peaks.local_maxima\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Local maxima of a function evaluated on a discrete set of points.</p>\n<p>If a function is evaluated on some set of points where each pair of\nneighboring points is an edge in edges, find the local maxima.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>odf</strong> : array, 1d, dtype=double</p>\n<blockquote>\n<div><p>The function evaluated on a set of discrete points.</p>\n</div></blockquote>\n<p><strong>edges</strong> : array (N, 2)</p>\n<blockquote>\n<div><p>The set of neighbor relations between the points. Every edge, ie\n<cite>edges[i, :]</cite>, is a pair of neighboring points.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>peak_values</strong> : ndarray</p>\n<blockquote>\n<div><p>Value of odf at a maximum point. Peak values is sorted in descending\norder.</p>\n</div></blockquote>\n<p><strong>peak_indices</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Indices of maximum points. Sorted in the same order as <cite>peak_values</cite> so\n<cite>odf[peak_indices[i]] == peak_values[i]</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"../dipy.core/#module-dipy.core.sphere\" title=\"dipy.core.sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dipy.core.sphere</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id70\">\n<h3>measure<a class=\"headerlink\" href=\"#id70\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_peaks.measure\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_peaks.</code><code class=\"descname\">measure</code><span class=\"sig-paren\">(</span><em>code_str</em>, <em>times=1</em>, <em>label=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_peaks.measure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return elapsed time for executing code in the namespace of the caller.</p>\n<p>The supplied code string is compiled with the Python builtin <code class=\"docutils literal\"><span class=\"pre\">compile</span></code>.\nThe precision of the timing is 10 milli-seconds. If the code will execute\nfast on this timescale, it can be executed many times to get reasonable\ntiming accuracy.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>code_str</strong> : str</p>\n<blockquote>\n<div><p>The code to be timed.</p>\n</div></blockquote>\n<p><strong>times</strong> : int, optional</p>\n<blockquote>\n<div><p>The number of times the code is executed. Default is 1. The code is\nonly compiled once.</p>\n</div></blockquote>\n<p><strong>label</strong> : str, optional</p>\n<blockquote>\n<div><p>A label to identify <cite>code_str</cite> with. This is passed into <code class=\"docutils literal\"><span class=\"pre\">compile</span></code>\nas the second argument (for run-time error messages).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>elapsed</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Total elapsed time in seconds for executing <cite>code_str</cite> <cite>times</cite> times.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">etime</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">measure</span><span class=\"p\">(</span><span class=\"s1\">&#39;for i in range(1000): np.sqrt(i**2)&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">times</span><span class=\"o\">=</span><span class=\"n\">times</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Time for a single execution : &quot;</span><span class=\"p\">,</span> <span class=\"n\">etime</span> <span class=\"o\">/</span> <span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"s2\">&quot;s&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">Time for a single execution :  0.005 s</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"unique-edges\">\n<h3>unique_edges<a class=\"headerlink\" href=\"#unique-edges\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_peaks.unique_edges\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_peaks.</code><code class=\"descname\">unique_edges</code><span class=\"sig-paren\">(</span><em>faces</em>, <em>return_mapping=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_peaks.unique_edges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extract all unique edges from given triangular faces.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>faces</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Vertex indices forming triangular faces.</p>\n</div></blockquote>\n<p><strong>return_mapping</strong> : bool</p>\n<blockquote>\n<div><p>If true, a mapping to the edges of each face is returned.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>edges</strong> : (N, 2) ndarray</p>\n<blockquote>\n<div><p>Unique edges.</p>\n</div></blockquote>\n<p><strong>mapping</strong> : (N, 3)</p>\n<blockquote class=\"last\">\n<div><p>For each face, [x, y, z], a mapping to it&#8217;s edges [a, b, c].</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span>   y\n   /               /               a/    \b\n/                  /                   /__________          x      c     z\n</pre></div>\n</div>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bench-quick-squash\">\n<h3>bench_quick_squash<a class=\"headerlink\" href=\"#bench-quick-squash\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_squash.bench_quick_squash\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_squash.</code><code class=\"descname\">bench_quick_squash</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_squash.bench_quick_squash\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"id71\">\n<h3>measure<a class=\"headerlink\" href=\"#id71\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_squash.measure\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_squash.</code><code class=\"descname\">measure</code><span class=\"sig-paren\">(</span><em>code_str</em>, <em>times=1</em>, <em>label=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_squash.measure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return elapsed time for executing code in the namespace of the caller.</p>\n<p>The supplied code string is compiled with the Python builtin <code class=\"docutils literal\"><span class=\"pre\">compile</span></code>.\nThe precision of the timing is 10 milli-seconds. If the code will execute\nfast on this timescale, it can be executed many times to get reasonable\ntiming accuracy.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>code_str</strong> : str</p>\n<blockquote>\n<div><p>The code to be timed.</p>\n</div></blockquote>\n<p><strong>times</strong> : int, optional</p>\n<blockquote>\n<div><p>The number of times the code is executed. Default is 1. The code is\nonly compiled once.</p>\n</div></blockquote>\n<p><strong>label</strong> : str, optional</p>\n<blockquote>\n<div><p>A label to identify <cite>code_str</cite> with. This is passed into <code class=\"docutils literal\"><span class=\"pre\">compile</span></code>\nas the second argument (for run-time error messages).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>elapsed</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Total elapsed time in seconds for executing <cite>code_str</cite> <cite>times</cite> times.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">etime</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">measure</span><span class=\"p\">(</span><span class=\"s1\">&#39;for i in range(1000): np.sqrt(i**2)&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">times</span><span class=\"o\">=</span><span class=\"n\">times</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Time for a single execution : &quot;</span><span class=\"p\">,</span> <span class=\"n\">etime</span> <span class=\"o\">/</span> <span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"s2\">&quot;s&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">Time for a single execution :  0.005 s</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"ndindex\">\n<h3>ndindex<a class=\"headerlink\" href=\"#ndindex\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_squash.ndindex\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_squash.</code><code class=\"descname\">ndindex</code><span class=\"sig-paren\">(</span><em>shape</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_squash.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape</strong> : tuple of ints</p>\n<blockquote class=\"last\">\n<div><p>The dimensions of the array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"k\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"old-squash\">\n<h3>old_squash<a class=\"headerlink\" href=\"#old-squash\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_squash.old_squash\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_squash.</code><code class=\"descname\">old_squash</code><span class=\"sig-paren\">(</span><em>arr</em>, <em>mask=None</em>, <em>fill=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_squash.old_squash\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Try and make a standard array from an object array</p>\n<p>This function takes an object array and attempts to convert it to a more\nuseful dtype. If array can be converted to a better dtype, Nones are\nreplaced by <cite>fill</cite>. To make the behaviour of this function more clear, here\nare the most common cases:</p>\n<ol class=\"arabic simple\">\n<li><cite>arr</cite> is an array of scalars of type <cite>T</cite>. Returns an array like\n<cite>arr.astype(T)</cite></li>\n<li><cite>arr</cite> is an array of arrays. All items in <cite>arr</cite> have the same shape\n<cite>S</cite>. Returns an array with shape <cite>arr.shape + S</cite>.</li>\n<li><cite>arr</cite> is an array of arrays of different shapes. Returns <cite>arr</cite>.</li>\n<li>Items in <cite>arr</cite> are not ndarrys or scalars. Returns <cite>arr</cite>.</li>\n</ol>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>arr</strong> : array, dtype=object</p>\n<blockquote>\n<div><p>The array to be converted.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array, dtype=bool, optional</p>\n<blockquote>\n<div><p>Where arr has Nones.</p>\n</div></blockquote>\n<p><strong>fill</strong> : number, optional</p>\n<blockquote>\n<div><p>Nones are replaced by fill.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>result</strong> : array</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">object</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">old_squash</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span>\n<span class=\"go\">array([2, 2, 2])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">old_squash</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span>\n<span class=\"go\">array([0, 2, 2])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">old_squash</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">dtype</span>\n<span class=\"go\">dtype(&#39;float64&#39;)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"quick-squash\">\n<h3>quick_squash<a class=\"headerlink\" href=\"#quick-squash\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_squash.quick_squash\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_squash.</code><code class=\"descname\">quick_squash</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_squash.quick_squash\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Try and make a standard array from an object array</p>\n<p>This function takes an object array and attempts to convert it to a more\nuseful dtype. If array can be converted to a better dtype, Nones are\nreplaced by <cite>fill</cite>. To make the behaviour of this function more clear, here\nare the most common cases:</p>\n<ol class=\"arabic simple\">\n<li><cite>obj_arr</cite> is an array of scalars of type <cite>T</cite>. Returns an array like\n<cite>obj_arr.astype(T)</cite></li>\n<li><cite>obj_arr</cite> is an array of arrays. All items in <cite>obj_arr</cite> have the same\nshape <code class=\"docutils literal\"><span class=\"pre\">S</span></code>. Returns an array with shape <code class=\"docutils literal\"><span class=\"pre\">obj_arr.shape</span> <span class=\"pre\">+</span> <span class=\"pre\">S</span></code></li>\n<li><cite>obj_arr</cite> is an array of arrays of different shapes. Returns <cite>obj_arr</cite>.</li>\n<li>Items in <cite>obj_arr</cite> are not ndarrays or scalars. Returns <cite>obj_arr</cite>.</li>\n</ol>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>obj_arr</strong> : array, dtype=object</p>\n<blockquote>\n<div><p>The array to be converted.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array, dtype=bool, optional</p>\n<blockquote>\n<div><p>mask is nonzero where <cite>obj_arr</cite> has Nones.</p>\n</div></blockquote>\n<p><strong>fill</strong> : number, optional</p>\n<blockquote>\n<div><p>Nones are replaced by <cite>fill</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>result</strong> : array</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">object</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">quick_squash</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span>\n<span class=\"go\">array([2, 2, 2])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">quick_squash</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span>\n<span class=\"go\">array([0, 2, 2])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">quick_squash</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 2)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">dtype</span>\n<span class=\"go\">dtype(&#39;float64&#39;)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"reduce\">\n<h3>reduce<a class=\"headerlink\" href=\"#reduce\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_squash.reduce\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_squash.</code><code class=\"descname\">reduce</code><span class=\"sig-paren\">(</span><em>function</em>, <em>sequence</em><span class=\"optional\">[</span>, <em>initial</em><span class=\"optional\">]</span><span class=\"sig-paren\">)</span> &#x2192; value<a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_squash.reduce\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Apply a function of two arguments cumulatively to the items of a sequence,\nfrom left to right, so as to reduce the sequence to a single value.\nFor example, reduce(lambda x, y: x+y, [1, 2, 3, 4, 5]) calculates\n((((1+2)+3)+4)+5).  If initial is present, it is placed before the items\nof the sequence in the calculation, and serves as a default when the\nsequence is empty.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bench-vec-val-vect\">\n<h3>bench_vec_val_vect<a class=\"headerlink\" href=\"#bench-vec-val-vect\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_vec_val_sum.bench_vec_val_vect\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_vec_val_sum.</code><code class=\"descname\">bench_vec_val_vect</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_vec_val_sum.bench_vec_val_vect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"id72\">\n<h3>measure<a class=\"headerlink\" href=\"#id72\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_vec_val_sum.measure\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_vec_val_sum.</code><code class=\"descname\">measure</code><span class=\"sig-paren\">(</span><em>code_str</em>, <em>times=1</em>, <em>label=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_vec_val_sum.measure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return elapsed time for executing code in the namespace of the caller.</p>\n<p>The supplied code string is compiled with the Python builtin <code class=\"docutils literal\"><span class=\"pre\">compile</span></code>.\nThe precision of the timing is 10 milli-seconds. If the code will execute\nfast on this timescale, it can be executed many times to get reasonable\ntiming accuracy.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>code_str</strong> : str</p>\n<blockquote>\n<div><p>The code to be timed.</p>\n</div></blockquote>\n<p><strong>times</strong> : int, optional</p>\n<blockquote>\n<div><p>The number of times the code is executed. Default is 1. The code is\nonly compiled once.</p>\n</div></blockquote>\n<p><strong>label</strong> : str, optional</p>\n<blockquote>\n<div><p>A label to identify <cite>code_str</cite> with. This is passed into <code class=\"docutils literal\"><span class=\"pre\">compile</span></code>\nas the second argument (for run-time error messages).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>elapsed</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Total elapsed time in seconds for executing <cite>code_str</cite> <cite>times</cite> times.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">etime</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">measure</span><span class=\"p\">(</span><span class=\"s1\">&#39;for i in range(1000): np.sqrt(i**2)&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">times</span><span class=\"o\">=</span><span class=\"n\">times</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Time for a single execution : &quot;</span><span class=\"p\">,</span> <span class=\"n\">etime</span> <span class=\"o\">/</span> <span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"s2\">&quot;s&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">Time for a single execution :  0.005 s</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"randn\">\n<h3>randn<a class=\"headerlink\" href=\"#randn\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_vec_val_sum.randn\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_vec_val_sum.</code><code class=\"descname\">randn</code><span class=\"sig-paren\">(</span><em>d0</em>, <em>d1</em>, <em>...</em>, <em>dn</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_vec_val_sum.randn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a sample (or samples) from the &#8220;standard normal&#8221; distribution.</p>\n<p>If positive, int_like or int-convertible arguments are provided,\n<cite>randn</cite> generates an array of shape <code class=\"docutils literal\"><span class=\"pre\">(d0,</span> <span class=\"pre\">d1,</span> <span class=\"pre\">...,</span> <span class=\"pre\">dn)</span></code>, filled\nwith random floats sampled from a univariate &#8220;normal&#8221; (Gaussian)\ndistribution of mean 0 and variance 1 (if any of the <span class=\"math\">\\(d_i\\)</span> are\nfloats, they are first converted to integers by truncation). A single\nfloat randomly sampled from the distribution is returned if no\nargument is provided.</p>\n<p>This is a convenience function.  If you want an interface that takes a\ntuple as the first argument, use <cite>numpy.random.standard_normal</cite> instead.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>d0, d1, ..., dn</strong> : int, optional</p>\n<blockquote>\n<div><p>The dimensions of the returned array, should be all positive.\nIf no argument is given a single Python float is returned.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>Z</strong> : ndarray or float</p>\n<blockquote class=\"last\">\n<div><p>A <code class=\"docutils literal\"><span class=\"pre\">(d0,</span> <span class=\"pre\">d1,</span> <span class=\"pre\">...,</span> <span class=\"pre\">dn)</span></code>-shaped array of floating-point samples from\nthe standard normal distribution, or a single such float if\nno parameters were supplied.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">random.standard_normal</span></code></dt>\n<dd>Similar, but takes a tuple as its argument.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>For random samples from <span class=\"math\">\\(N(\\mu, \\sigma^2)\\)</span>, use:</p>\n<p><code class=\"docutils literal\"><span class=\"pre\">sigma</span> <span class=\"pre\">*</span> <span class=\"pre\">np.random.randn(...)</span> <span class=\"pre\">+</span> <span class=\"pre\">mu</span></code></p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">()</span>\n<span class=\"go\">2.1923875335537315 #random</span>\n</pre></div>\n</div>\n<p>Two-by-four array of samples from N(3, 6.25):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"mf\">2.5</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">3</span>\n<span class=\"go\">array([[-4.49401501,  4.00950034, -1.81814867,  7.29718677],  #random</span>\n<span class=\"go\">       [ 0.39924804,  4.68456316,  4.99394529,  4.84057254]]) #random</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"vec-val-vect\">\n<h3>vec_val_vect<a class=\"headerlink\" href=\"#vec-val-vect\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_vec_val_sum.vec_val_vect\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_vec_val_sum.</code><code class=\"descname\">vec_val_vect</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_vec_val_sum.vec_val_vect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Vectorize <cite>vecs</cite>.diag(<cite>vals</cite>).`vecs`.T for last 2 dimensions of <cite>vecs</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vecs</strong> : shape (..., M, N) array</p>\n<blockquote>\n<div><p>containing tensor in last two dimensions; M, N usually equal to (3, 3)</p>\n</div></blockquote>\n<p><strong>vals</strong> : shape (..., N) array</p>\n<blockquote>\n<div><p>diagonal values carried in last dimension, <code class=\"docutils literal\"><span class=\"pre\">...</span></code> shape above must\nmatch that for <cite>vecs</cite></p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>res</strong> : shape (..., M, M) array</p>\n<blockquote>\n<div><p>For all the dimensions ellided by <code class=\"docutils literal\"><span class=\"pre\">...</span></code>, loops to get (M, N) <code class=\"docutils literal\"><span class=\"pre\">vec</span></code>\nmatrix, and (N,) <code class=\"docutils literal\"><span class=\"pre\">vals</span></code> vector, and calculates\n<code class=\"docutils literal\"><span class=\"pre\">vec.dot(np.diag(val).dot(vec.T)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>ValueError</strong> : non-matching <code class=\"docutils literal\"><span class=\"pre\">...</span></code> dimensions of <cite>vecs</cite>, <cite>vals</cite></p>\n<p class=\"last\"><strong>ValueError</strong> : non-matching <code class=\"docutils literal\"><span class=\"pre\">N</span></code> dimensions of <cite>vecs</cite>, <cite>vals</cite></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<p>Make a 3D array where the first dimension is only 1</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec_val_vect</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">vals</span><span class=\"p\">)</span>\n<span class=\"go\">array([[[   9.,   24.,   39.],</span>\n<span class=\"go\">        [  24.,   66.,  108.],</span>\n<span class=\"go\">        [  39.,  108.,  177.]]])</span>\n</pre></div>\n</div>\n<p>That&#8217;s the same as the 2D case (apart from the float casting):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">vals</span><span class=\"p\">),</span> <span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">array([[  9,  24,  39],</span>\n<span class=\"go\">       [ 24,  66, 108],</span>\n<span class=\"go\">       [ 39, 108, 177]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"with-einsum\">\n<h3>with_einsum<a class=\"headerlink\" href=\"#with-einsum\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.benchmarks.bench_vec_val_sum.with_einsum\">\n<code class=\"descclassname\">dipy.reconst.benchmarks.bench_vec_val_sum.</code><code class=\"descname\">with_einsum</code><span class=\"sig-paren\">(</span><em>f</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.benchmarks.bench_vec_val_sum.with_einsum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"cache\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache\" title=\"dipy.reconst.cache.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Cache</span></code></a><a class=\"headerlink\" href=\"#cache\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.cache.Cache\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.cache.</code><code class=\"descname\">Cache</code><a class=\"headerlink\" href=\"#dipy.reconst.cache.Cache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Cache values based on a key object (such as a sphere or gradient table).</p>\n<p class=\"rubric\">Notes</p>\n<p>This class is meant to be used as a mix-in:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Cache</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelFit</span><span class=\"p\">(</span><span class=\"n\">Fit</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Inside a method on the fit, typical usage would be:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">):</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">M</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_basis_matrix</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">M</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache.cache_clear\" title=\"dipy.reconst.cache.Cache.cache_clear\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code></a>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache.cache_get\" title=\"dipy.reconst.cache.Cache.cache_get\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code></a>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache.cache_set\" title=\"dipy.reconst.cache.Cache.cache_set\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code></a>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.cache.Cache.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.cache.Cache.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.cache.Cache.cache_clear\">\n<code class=\"descname\">cache_clear</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.cache.Cache.cache_clear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clear the cache.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.cache.Cache.cache_get\">\n<code class=\"descname\">cache_get</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>default=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.cache.Cache.cache_get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieve a value from the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>default</strong> : object</p>\n<blockquote>\n<div><p>Value to be returned if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>v</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value from the cache associated with <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.  Returns\n<cite>default</cite> if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.cache.Cache.cache_set\">\n<code class=\"descname\">cache_set</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>value</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.cache.Cache.cache_set\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Store a value in the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>value</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value stored in the cache for each unique combination\nof <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># Imagine the following computation is very expensive</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"o\">=</span> <span class=\"n\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">X1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"ow\">is</span> <span class=\"n\">X2</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"auto-attr\">\n<h3>auto_attr<a class=\"headerlink\" href=\"#auto-attr\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.cache.auto_attr\">\n<code class=\"descclassname\">dipy.reconst.cache.</code><code class=\"descname\">auto_attr</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.cache.auto_attr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator to create OneTimeProperty attributes.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>func</strong> : method</p>\n<blockquote class=\"last\">\n<div><p>The method that will be called the first time to compute a value.\nAfterwards, the method&#8217;s name will be a standard attribute holding the\nvalue of this computation.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MagicProp</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"mi\">99</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">MagicProp</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span>\n<span class=\"go\">99</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"range\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.cross_validation.range\" title=\"dipy.reconst.cross_validation.range\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></code></a><a class=\"headerlink\" href=\"#range\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.cross_validation.range\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.cross_validation.</code><code class=\"descname\">range</code><span class=\"sig-paren\">(</span><em>stop</em><span class=\"sig-paren\">)</span> &#x2192; range object<a class=\"headerlink\" href=\"#dipy.reconst.cross_validation.range\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>range(start, stop[, step]) -&gt; range object</p>\n<p>Return an object that produces a sequence of integers from start (inclusive)\nto stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.\nstart defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.\nThese are exactly the valid indices for a list of 4 elements.\nWhen step is given, it specifies the increment (or decrement).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.cross_validation.range.count\" title=\"dipy.reconst.cross_validation.range.count\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">count</span></code></a>(...)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.cross_validation.range.index\" title=\"dipy.reconst.cross_validation.range.index\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">index</span></code></a>((value,&nbsp;[start,&nbsp;...)</td>\n<td>Raise ValueError if the value is not present.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.cross_validation.range.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.cross_validation.range.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.cross_validation.range.count\">\n<code class=\"descname\">count</code><span class=\"sig-paren\">(</span><em>value</em><span class=\"sig-paren\">)</span> &#x2192; integer -- return number of occurrences of value<a class=\"headerlink\" href=\"#dipy.reconst.cross_validation.range.count\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.cross_validation.range.index\">\n<code class=\"descname\">index</code><span class=\"sig-paren\">(</span><em>value</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>stop</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"sig-paren\">)</span> &#x2192; integer -- return index of value.<a class=\"headerlink\" href=\"#dipy.reconst.cross_validation.range.index\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raise ValueError if the value is not present.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.cross_validation.range.start\">\n<code class=\"descname\">start</code><a class=\"headerlink\" href=\"#dipy.reconst.cross_validation.range.start\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.cross_validation.range.step\">\n<code class=\"descname\">step</code><a class=\"headerlink\" href=\"#dipy.reconst.cross_validation.range.step\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.cross_validation.range.stop\">\n<code class=\"descname\">stop</code><a class=\"headerlink\" href=\"#dipy.reconst.cross_validation.range.stop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"coeff-of-determination\">\n<h3>coeff_of_determination<a class=\"headerlink\" href=\"#coeff-of-determination\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.cross_validation.coeff_of_determination\">\n<code class=\"descclassname\">dipy.reconst.cross_validation.</code><code class=\"descname\">coeff_of_determination</code><span class=\"sig-paren\">(</span><em>data</em>, <em>model</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.cross_validation.coeff_of_determination\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\n<div>Calculate the coefficient of determination for a model prediction, relative\nto data.</div></blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : ndarray</p>\n<blockquote>\n<div><blockquote>\n<div><p>The data</p>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>model <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">ndarray</span></dt>\n<dd><p class=\"first last\">The predictions of a model for this data. Same shape as the data.</p>\n</dd>\n<dt>axis: int, optional</dt>\n<dd><p class=\"first last\">The axis along which different samples are laid out (default: -1).</p>\n</dd>\n</dl>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>COD</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The coefficient of determination. This has shape <cite>data.shape[:-1]</cite></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p>rac{SSE}{SSD})</p>\n<blockquote>\n<div>where SSE is the sum of the squared error between the model and the data\n(sum of the squared residuals) and SSD is the sum of the squares of the\ndeviations of the data from the mean of the data (variance * N).</div></blockquote>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"kfold-xval\">\n<h3>kfold_xval<a class=\"headerlink\" href=\"#kfold-xval\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.cross_validation.kfold_xval\">\n<code class=\"descclassname\">dipy.reconst.cross_validation.</code><code class=\"descname\">kfold_xval</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em>, <em>folds</em>, <em>*model_args</em>, <em>**model_kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.cross_validation.kfold_xval\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Perform k-fold cross-validation to generate out-of-sample predictions for\neach measurement.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : Model class instance</p>\n<blockquote>\n<div><p>The type of the model to use for prediction. The corresponding Fit\nobject must have a <cite>predict</cite> function implementd One of the following:\n<cite>reconst.dti.TensorModel</cite> or\n<cite>reconst.csdeconv.ConstrainedSphericalDeconvModel</cite>.</p>\n</div></blockquote>\n<p><strong>data</strong> : ndarray</p>\n<blockquote>\n<div><p>Diffusion MRI data acquired with the GradientTable of the model. Shape\nwill typically be <cite>(x, y, z, b)</cite> where <cite>xyz</cite> are spatial dimensions and\nb is the number of bvals/bvecs in the GradientTable.</p>\n</div></blockquote>\n<p><strong>folds</strong> : int</p>\n<blockquote>\n<div><p>The number of divisions to apply to the data</p>\n</div></blockquote>\n<p><strong>model_args</strong> : list</p>\n<blockquote>\n<div><p>Additional arguments to the model initialization</p>\n</div></blockquote>\n<p><strong>model_kwargs</strong> : dict</p>\n<blockquote class=\"last\">\n<div><p>Additional key-word arguments to the model initialization. If contains\nthe kwarg <cite>mask</cite>, this will be used as a key-word argument to the <cite>fit</cite>\nmethod of the model object, rather than being used in the\ninitialization of the model object</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>This function assumes that a prediction API is implemented in the Model\nclass for which prediction is conducted. That is, the Fit object that gets\ngenerated upon fitting the model needs to have a <cite>predict</cite> method, which\nreceives a GradientTable class instance as input and produces a predicted\nsignal as output.</p>\n<p>It also assumes that the model object has <cite>bval</cite> and <cite>bvec</cite> attributes\nholding b-values and corresponding unit vectors.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r162\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id73\">[R162]</a></td><td>Rokem, A., Chan, K.L. Yeatman, J.D., Pestilli, F., Mezer, A.,\nWandell, B.A., 2014. Evaluating the accuracy of diffusion models at\nmultiple b-values with cross-validation. ISMRM 2014.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"axsymshresponse\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.AxSymShResponse\" title=\"dipy.reconst.csdeconv.AxSymShResponse\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">AxSymShResponse</span></code></a><a class=\"headerlink\" href=\"#axsymshresponse\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.csdeconv.AxSymShResponse\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">AxSymShResponse</code><span class=\"sig-paren\">(</span><em>S0</em>, <em>dwi_response</em>, <em>bvalue=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.AxSymShResponse\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>A simple wrapper for response functions represented using only axially\nsymmetric, even spherical harmonic functions (ie, m == 0 and n even).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.AxSymShResponse.basis\" title=\"dipy.reconst.csdeconv.AxSymShResponse.basis\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">basis</span></code></a>(sphere)</td>\n<td>A basis that maps the response coefficients onto a sphere.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.AxSymShResponse.on_sphere\" title=\"dipy.reconst.csdeconv.AxSymShResponse.on_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">on_sphere</span></code></a>(sphere)</td>\n<td>Evaluates the response function on sphere.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.AxSymShResponse.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>S0</em>, <em>dwi_response</em>, <em>bvalue=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.AxSymShResponse.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.AxSymShResponse.basis\">\n<code class=\"descname\">basis</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.AxSymShResponse.basis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A basis that maps the response coefficients onto a sphere.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.AxSymShResponse.on_sphere\">\n<code class=\"descname\">on_sphere</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.AxSymShResponse.on_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Evaluates the response function on sphere.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"constrainedsdtmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.ConstrainedSDTModel\" title=\"dipy.reconst.csdeconv.ConstrainedSDTModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ConstrainedSDTModel</span></code></a><a class=\"headerlink\" href=\"#constrainedsdtmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.csdeconv.ConstrainedSDTModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">ConstrainedSDTModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>ratio</em>, <em>reg_sphere=None</em>, <em>sh_order=8</em>, <em>lambda_=1.0</em>, <em>tau=0.1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.ConstrainedSDTModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmModel\" title=\"dipy.reconst.shm.SphHarmModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.shm.SphHarmModel</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.ConstrainedSDTModel.fit\" title=\"dipy.reconst.csdeconv.ConstrainedSDTModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method for every voxel in data</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sampling_matrix</span></code>(sphere)</td>\n<td>The matrix needed to sample ODFs from coefficients of the model.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.ConstrainedSDTModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>ratio</em>, <em>reg_sphere=None</em>, <em>sh_order=8</em>, <em>lambda_=1.0</em>, <em>tau=0.1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.ConstrainedSDTModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical Deconvolution Transform (SDT) <a class=\"reference internal\" href=\"#r163\" id=\"id74\">[R163]</a>.</p>\n<p>The SDT computes a fiber orientation distribution (FOD) as opposed to a\ndiffusion ODF as the QballModel or the CsaOdfModel. This results in a\nsharper angular profile with better angular resolution. The Constrained\nSDTModel is similar to the Constrained CSDModel but mathematically it\ndeconvolves the q-ball ODF as oppposed to the HARDI signal (see <a class=\"reference internal\" href=\"#r163\" id=\"id75\">[R163]</a>\nfor a comparison and a through discussion).</p>\n<p>A sharp fODF is obtained because a single fiber <em>response</em> function is\ninjected as <em>a priori</em> knowledge. In the SDTModel, this response is a\nsingle fiber q-ball ODF as opposed to a single fiber signal function\nfor the CSDModel. The response function will be used as deconvolution\nkernel.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<p><strong>ratio</strong> : float</p>\n<blockquote>\n<div><p>ratio of the smallest vs the largest eigenvalue of the single\nprolate tensor response function</p>\n</div></blockquote>\n<p><strong>reg_sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>sphere used to build the regularization B matrix</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int</p>\n<blockquote>\n<div><p>maximal spherical harmonics order</p>\n</div></blockquote>\n<p><strong>lambda_</strong> : float</p>\n<blockquote>\n<div><p>weight given to the constrained-positivity regularization part of\nthe deconvolution equation</p>\n</div></blockquote>\n<p><strong>tau</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>threshold (tau <a href=\"#id76\"><span class=\"problematic\" id=\"id77\">*</span></a>mean(fODF)) controlling the amplitude below\nwhich the corresponding fODF is assumed to be zero.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r163\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R163]</td><td><em>(<a class=\"fn-backref\" href=\"#id74\">1</a>, <a class=\"fn-backref\" href=\"#id75\">2</a>, <a class=\"fn-backref\" href=\"#id78\">3</a>)</em> Descoteaux, M., et al. IEEE TMI 2009. Deterministic and\nProbabilistic Tractography Based on Complex Fibre Orientation\nDistributions.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.ConstrainedSDTModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.ConstrainedSDTModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method for every voxel in data</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id79\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel\" title=\"dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ConstrainedSphericalDeconvModel</span></code></a><a class=\"headerlink\" href=\"#id79\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">ConstrainedSphericalDeconvModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>response</em>, <em>reg_sphere=None</em>, <em>sh_order=8</em>, <em>lambda_=1</em>, <em>tau=0.1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmModel\" title=\"dipy.reconst.shm.SphHarmModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.shm.SphHarmModel</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit\" title=\"dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method for every voxel in data</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict\" title=\"dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(sh_coeff[,&nbsp;gtab,&nbsp;S0])</td>\n<td>Compute a signal prediction given spherical harmonic coefficients for the provided GradientTable class instance.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sampling_matrix</span></code>(sphere)</td>\n<td>The matrix needed to sample ODFs from coefficients of the model.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>response</em>, <em>reg_sphere=None</em>, <em>sh_order=8</em>, <em>lambda_=1</em>, <em>tau=0.1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constrained Spherical Deconvolution (CSD) <a class=\"reference internal\" href=\"#r164\" id=\"id80\">[R164]</a>.</p>\n<p>Spherical deconvolution computes a fiber orientation distribution\n(FOD), also called fiber ODF (fODF) <a class=\"reference internal\" href=\"#r165\" id=\"id81\">[R165]</a>, as opposed to a diffusion ODF\nas the QballModel or the CsaOdfModel. This results in a sharper angular\nprofile with better angular resolution that is the best object to be\nused for later deterministic and probabilistic tractography <a class=\"reference internal\" href=\"#r166\" id=\"id82\">[R166]</a>.</p>\n<p>A sharp fODF is obtained because a single fiber <em>response</em> function is\ninjected as <em>a priori</em> knowledge. The response function is often\ndata-driven and is thus provided as input to the\nConstrainedSphericalDeconvModel. It will be used as deconvolution\nkernel, as described in <a class=\"reference internal\" href=\"#r164\" id=\"id83\">[R164]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<p><strong>response</strong> : tuple or AxSymShResponse object</p>\n<blockquote>\n<div><p>A tuple with two elements. The first is the eigen-values as an (3,)\nndarray and the second is the signal value for the response\nfunction without diffusion weighting.  This is to be able to\ngenerate a single fiber synthetic signal. The response function\nwill be used as deconvolution kernel (<a class=\"reference internal\" href=\"#r164\" id=\"id84\">[R164]</a>)</p>\n</div></blockquote>\n<p><strong>reg_sphere</strong> : Sphere (optional)</p>\n<blockquote>\n<div><p>sphere used to build the regularization B matrix.\nDefault: &#8216;symmetric362&#8217;.</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int (optional)</p>\n<blockquote>\n<div><p>maximal spherical harmonics order. Default: 8</p>\n</div></blockquote>\n<p><strong>lambda_</strong> : float (optional)</p>\n<blockquote>\n<div><p>weight given to the constrained-positivity regularization part of\nthe deconvolution equation (see <a class=\"reference internal\" href=\"#r164\" id=\"id85\">[R164]</a>). Default: 1</p>\n</div></blockquote>\n<p><strong>tau</strong> : float (optional)</p>\n<blockquote class=\"last\">\n<div><p>threshold controlling the amplitude below which the corresponding\nfODF is assumed to be zero.  Ideally, tau should be set to\nzero. However, to improve the stability of the algorithm, tau is\nset to tau*100 % of the mean fODF amplitude (here, 10% by default)\n(see <a class=\"reference internal\" href=\"#r164\" id=\"id86\">[R164]</a>). Default: 0.1</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r164\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R164]</td><td><em>(<a class=\"fn-backref\" href=\"#id80\">1</a>, <a class=\"fn-backref\" href=\"#id83\">2</a>, <a class=\"fn-backref\" href=\"#id84\">3</a>, <a class=\"fn-backref\" href=\"#id85\">4</a>, <a class=\"fn-backref\" href=\"#id86\">5</a>, <a class=\"fn-backref\" href=\"#id87\">6</a>)</em> Tournier, J.D., et al. NeuroImage 2007. Robust determination of\nthe fibre orientation distribution in diffusion MRI:\nNon-negativity constrained super-resolved spherical\ndeconvolution</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r165\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R165]</td><td><em>(<a class=\"fn-backref\" href=\"#id81\">1</a>, <a class=\"fn-backref\" href=\"#id88\">2</a>)</em> Descoteaux, M., et al. IEEE TMI 2009. Deterministic and\nProbabilistic Tractography Based on Complex Fibre Orientation\nDistributions</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r166\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R166]</td><td><em>(<a class=\"fn-backref\" href=\"#id82\">1</a>, <a class=\"fn-backref\" href=\"#id89\">2</a>)</em> C^ot&#8217;e, M-A., et al. Medical Image Analysis 2013. Tractometer:\nTowards validation of tractography pipelines</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r167\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id90\">[R167]</a></td><td>Tournier, J.D, et al. Imaging Systems and Technology\n2012. MRtrix: Diffusion Tractography in Crossing Fiber Regions</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method for every voxel in data</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>sh_coeff</em>, <em>gtab=None</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute a signal prediction given spherical harmonic coefficients\nfor the provided GradientTable class instance.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sh_coeff</strong> : ndarray</p>\n<blockquote>\n<div><p>The spherical harmonic representation of the FOD from which to make\nthe signal prediction.</p>\n</div></blockquote>\n<p><strong>gtab</strong> : GradientTable</p>\n<blockquote>\n<div><p>The gradients for which the signal will be predicted. Use the\nmodel&#8217;s gradient table by default.</p>\n</div></blockquote>\n<p><strong>S0</strong> : ndarray or float</p>\n<blockquote>\n<div><p>The non diffusion-weighted signal value.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>pred_sig</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The predicted signal.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sphharmfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.SphHarmFit\" title=\"dipy.reconst.csdeconv.SphHarmFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">SphHarmFit</span></code></a><a class=\"headerlink\" href=\"#sphharmfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.csdeconv.SphHarmFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">SphHarmFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>shm_coef</em>, <em>mask</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.SphHarmFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfFit\" title=\"dipy.reconst.odf.OdfFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.odf.OdfFit</span></code></a></p>\n<p>Diffusion data fit to a spherical harmonic model</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.SphHarmFit.shape\" title=\"dipy.reconst.csdeconv.SphHarmFit.shape\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.SphHarmFit.shm_coeff\" title=\"dipy.reconst.csdeconv.SphHarmFit.shm_coeff\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shm_coeff</span></code></a></td>\n<td>The spherical harmonic coefficients of the odf</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.SphHarmFit.gfa\" title=\"dipy.reconst.csdeconv.SphHarmFit.gfa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gfa</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.SphHarmFit.odf\" title=\"dipy.reconst.csdeconv.SphHarmFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>Samples the odf function on the points of a sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.SphHarmFit.predict\" title=\"dipy.reconst.csdeconv.SphHarmFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>([gtab,&nbsp;S0])</td>\n<td>Predict the diffusion signal from the model coefficients.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.SphHarmFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>shm_coef</em>, <em>mask</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.SphHarmFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.SphHarmFit.gfa\">\n<code class=\"descname\">gfa</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.SphHarmFit.gfa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.SphHarmFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.SphHarmFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Samples the odf function on the points of a sphere</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>The points on which to sample the odf.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>values</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The value of the odf on each point of <cite>sphere</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.SphHarmFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab=None</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.SphHarmFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict the diffusion signal from the model coefficients.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>The directions and bvalues on which prediction is desired</p>\n</div></blockquote>\n<p><strong>S0</strong> : float array</p>\n<blockquote class=\"last\">\n<div><p>The mean non-diffusion-weighted signal in each voxel.\nDefault: 1.0 in all voxels</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.csdeconv.SphHarmFit.shape\">\n<code class=\"descname\">shape</code><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.SphHarmFit.shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.csdeconv.SphHarmFit.shm_coeff\">\n<code class=\"descname\">shm_coeff</code><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.SphHarmFit.shm_coeff\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The spherical harmonic coefficients of the odf</p>\n<p>Make this a property for now, if there is a usecase for modifying\nthe coefficients we can add a setter or expose the coefficients more\ndirectly</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sphharmmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.SphHarmModel\" title=\"dipy.reconst.csdeconv.SphHarmModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">SphHarmModel</span></code></a><a class=\"headerlink\" href=\"#sphharmmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.csdeconv.SphHarmModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">SphHarmModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.SphHarmModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfModel\" title=\"dipy.reconst.odf.OdfModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.odf.OdfModel</span></code></a>, <a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache\" title=\"dipy.reconst.cache.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.cache.Cache</span></code></a></p>\n<p>To be subclassed by all models that return a SphHarmFit when fit.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code>(data)</td>\n<td>To be implemented by specific odf models</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.SphHarmModel.sampling_matrix\" title=\"dipy.reconst.csdeconv.SphHarmModel.sampling_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sampling_matrix</span></code></a>(sphere)</td>\n<td>The matrix needed to sample ODFs from coefficients of the model.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.SphHarmModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.SphHarmModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.SphHarmModel.sampling_matrix\">\n<code class=\"descname\">sampling_matrix</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.SphHarmModel.sampling_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The matrix needed to sample ODFs from coefficients of the model.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>Points used to sample ODF.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sampling_matrix</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>The size of the matrix will be (N, M) where N is the number of\nvertices on sphere and M is the number of coefficients needed by\nthe model.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"tensormodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.TensorModel\" title=\"dipy.reconst.csdeconv.TensorModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">TensorModel</span></code></a><a class=\"headerlink\" href=\"#tensormodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.csdeconv.TensorModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">TensorModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='WLS'</em>, <em>return_S0_hat=False</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.TensorModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>Diffusion Tensor</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.TensorModel.fit\" title=\"dipy.reconst.csdeconv.TensorModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method of the DTI model class</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.TensorModel.predict\" title=\"dipy.reconst.csdeconv.TensorModel.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(dti_params[,&nbsp;S0])</td>\n<td>Predict a signal for this TensorModel class instance given parameters.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.TensorModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='WLS'</em>, <em>return_S0_hat=False</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.TensorModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A Diffusion Tensor Model <a class=\"reference internal\" href=\"#r168\" id=\"id91\">[R168]</a>, <a class=\"reference internal\" href=\"#r169\" id=\"id92\">[R169]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable class instance</p>\n<p><strong>fit_method</strong> : str or callable</p>\n<blockquote>\n<div><p>str can be one of the following:</p>\n<dl class=\"docutils\">\n<dt>&#8216;WLS&#8217; for weighted least squares</dt>\n<dd><p class=\"first last\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">dti.wls_fit_tensor()</span></code></p>\n</dd>\n<dt>&#8216;LS&#8217; or &#8216;OLS&#8217; for ordinary least squares</dt>\n<dd><p class=\"first last\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">dti.ols_fit_tensor()</span></code></p>\n</dd>\n<dt>&#8216;NLLS&#8217; for non-linear least-squares</dt>\n<dd><p class=\"first last\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">dti.nlls_fit_tensor()</span></code></p>\n</dd>\n<dt>&#8216;RT&#8217; or &#8216;restore&#8217; or &#8216;RESTORE&#8217; for RESTORE robust tensor</dt>\n<dd><p class=\"first last\">fitting <a class=\"reference internal\" href=\"#r170\" id=\"id93\">[R170]</a>\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">dti.restore_fit_tensor()</span></code></p>\n</dd>\n<dt>callable has to have the signature:</dt>\n<dd><p class=\"first last\">fit_method(design_matrix, data, <a href=\"#id94\"><span class=\"problematic\" id=\"id95\">*</span></a>args, <a href=\"#id96\"><span class=\"problematic\" id=\"id97\">**</span></a>kwargs)</p>\n</dd>\n</dl>\n</div></blockquote>\n<p><strong>return_S0_hat</strong> : bool</p>\n<blockquote>\n<div><p>Boolean to return (True) or not (False) the S0 values for the fit.</p>\n</div></blockquote>\n<p><strong>args, kwargs</strong> : arguments and key-word arguments passed to the</p>\n<blockquote>\n<div><p>fit_method. See dti.wls_fit_tensor, dti.ols_fit_tensor for details</p>\n</div></blockquote>\n<p><strong>min_signal</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>The minimum signal value. Needs to be a strictly positive\nnumber. Default: minimal signal in the data provided to <cite>fit</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r168\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R168]</td><td><em>(<a class=\"fn-backref\" href=\"#id91\">1</a>, <a class=\"fn-backref\" href=\"#id98\">2</a>)</em> Basser, P.J., Mattiello, J., LeBihan, D., 1994. Estimation of\nthe effective self-diffusion tensor from the NMR spin echo. J Magn\nReson B 103, 247-254.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r169\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R169]</td><td><em>(<a class=\"fn-backref\" href=\"#id92\">1</a>, <a class=\"fn-backref\" href=\"#id99\">2</a>)</em> Basser, P., Pierpaoli, C., 1996. Microstructural and\nphysiological features of tissues elucidated by quantitative\ndiffusion-tensor MRI.  Journal of Magnetic Resonance 111, 209-219.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r170\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R170]</td><td><em>(<a class=\"fn-backref\" href=\"#id93\">1</a>, <a class=\"fn-backref\" href=\"#id100\">2</a>)</em> Lin-Ching C., Jones D.K., Pierpaoli, C. 2005. RESTORE: Robust\nestimation of tensors by outlier rejection. MRM 53: 1088-1095</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.TensorModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.TensorModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method of the DTI model class</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array</p>\n<blockquote>\n<div><p>The measured signal from one voxel.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>A boolean array used to mark the coordinates in the data that\nshould be analyzed that has the shape data.shape[:-1]</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.TensorModel.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>dti_params</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.TensorModel.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict a signal for this TensorModel class instance given parameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dti_params</strong> : ndarray</p>\n<blockquote>\n<div><p>The last dimension should have 12 tensor parameters: 3\neigenvalues, followed by the 3 eigenvectors</p>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray</p>\n<blockquote class=\"last\">\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id101\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.range\" title=\"dipy.reconst.csdeconv.range\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></code></a><a class=\"headerlink\" href=\"#id101\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.csdeconv.range\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">range</code><span class=\"sig-paren\">(</span><em>stop</em><span class=\"sig-paren\">)</span> &#x2192; range object<a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.range\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>range(start, stop[, step]) -&gt; range object</p>\n<p>Return an object that produces a sequence of integers from start (inclusive)\nto stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.\nstart defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.\nThese are exactly the valid indices for a list of 4 elements.\nWhen step is given, it specifies the increment (or decrement).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.range.count\" title=\"dipy.reconst.csdeconv.range.count\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">count</span></code></a>(...)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.range.index\" title=\"dipy.reconst.csdeconv.range.index\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">index</span></code></a>((value,&nbsp;[start,&nbsp;...)</td>\n<td>Raise ValueError if the value is not present.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.range.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.range.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.range.count\">\n<code class=\"descname\">count</code><span class=\"sig-paren\">(</span><em>value</em><span class=\"sig-paren\">)</span> &#x2192; integer -- return number of occurrences of value<a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.range.count\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.csdeconv.range.index\">\n<code class=\"descname\">index</code><span class=\"sig-paren\">(</span><em>value</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>stop</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"sig-paren\">)</span> &#x2192; integer -- return index of value.<a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.range.index\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raise ValueError if the value is not present.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.csdeconv.range.start\">\n<code class=\"descname\">start</code><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.range.start\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.csdeconv.range.step\">\n<code class=\"descname\">step</code><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.range.step\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.csdeconv.range.stop\">\n<code class=\"descname\">stop</code><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.range.stop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"auto-response\">\n<h3>auto_response<a class=\"headerlink\" href=\"#auto-response\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.auto_response\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">auto_response</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>data</em>, <em>roi_center=None</em>, <em>roi_radius=10</em>, <em>fa_thr=0.7</em>, <em>return_number_of_voxels=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.auto_response\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Automatic estimation of response function using FA.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<p><strong>data</strong> : ndarray</p>\n<blockquote>\n<div><p>diffusion data</p>\n</div></blockquote>\n<p><strong>roi_center</strong> : tuple, (3,)</p>\n<blockquote>\n<div><p>Center of ROI in data. If center is None, it is assumed that it is\nthe center of the volume with shape <cite>data.shape[:3]</cite>.</p>\n</div></blockquote>\n<p><strong>roi_radius</strong> : int</p>\n<blockquote>\n<div><p>radius of cubic ROI</p>\n</div></blockquote>\n<p><strong>fa_thr</strong> : float</p>\n<blockquote>\n<div><p>FA threshold</p>\n</div></blockquote>\n<p><strong>return_number_of_voxels</strong> : bool</p>\n<blockquote>\n<div><p>If True, returns the number of voxels used for estimating the response\nfunction.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>response</strong> : tuple, (2,)</p>\n<blockquote>\n<div><p>(<cite>evals</cite>, <cite>S0</cite>)</p>\n</div></blockquote>\n<p><strong>ratio</strong> : float</p>\n<blockquote>\n<div><p>The ratio between smallest versus largest eigenvalue of the response.</p>\n</div></blockquote>\n<p><strong>number of voxels</strong> : int (optional)</p>\n<blockquote class=\"last\">\n<div><p>The number of voxels used for estimating the response function.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>In CSD there is an important pre-processing step: the estimation of the\nfiber response function. In order to do this we look for voxels with very\nanisotropic configurations. For example we can use an ROI (20x20x20) at\nthe center of the volume and store the signal values for the voxels with\nFA values higher than 0.7. Of course, if we haven&#8217;t precalculated FA we\nneed to fit a Tensor model to the datasets. Which is what we do in this\nfunction.</p>\n<p>For the response we also need to find the average S0 in the ROI. This is\npossible using <cite>gtab.b0s_mask()</cite> we can find all the S0 volumes (which\ncorrespond to b-values equal 0) in the dataset.</p>\n<p>The <cite>response</cite> consists always of a prolate tensor created by averaging\nthe highest and second highest eigenvalues in the ROI with FA higher than\nthreshold. We also include the average S0s.</p>\n<p>We also return the <cite>ratio</cite> which is used for the SDT models. If requested,\nthe number of voxels used for estimating the response function is also\nreturned, which can be used to judge the fidelity of the response function.\nAs a rule of thumb, at least 300 voxels should be used to estimate a good\nresponse function (see <a class=\"reference internal\" href=\"#r171\" id=\"id102\">[R171]</a>).</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r171\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R171]</td><td><em>(<a class=\"fn-backref\" href=\"#id102\">1</a>, <a class=\"fn-backref\" href=\"#id103\">2</a>)</em> Tournier, J.D., et al. NeuroImage 2004. Direct estimation of the</td></tr>\n</tbody>\n</table>\n<p>fiber orientation density function from diffusion-weighted MRI\ndata using spherical deconvolution</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cart2sphere\">\n<h3>cart2sphere<a class=\"headerlink\" href=\"#cart2sphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.cart2sphere\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">cart2sphere</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.cart2sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></p>\n<p>See doc for <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> for angle conventions and derivation\nof the formulae.</p>\n<p><span class=\"math\">\\(0\\le\\theta\\mathrm{(theta)}\\le\\pi\\)</span> and <span class=\"math\">\\(-\\pi\\le\\phi\\mathrm{(phi)}\\le\\pi\\)</span></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>x coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>y</strong> : array_like</p>\n<blockquote>\n<div><p>y coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array_like</p>\n<blockquote>\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> : array</p>\n<blockquote>\n<div><p>radius</p>\n</div></blockquote>\n<p><strong>theta</strong> : array</p>\n<blockquote>\n<div><p>inclination (polar) angle</p>\n</div></blockquote>\n<p><strong>phi</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>azimuth angle</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"csdeconv\">\n<h3>csdeconv<a class=\"headerlink\" href=\"#csdeconv\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.csdeconv\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">csdeconv</code><span class=\"sig-paren\">(</span><em>dwsignal</em>, <em>X</em>, <em>B_reg</em>, <em>tau=0.1</em>, <em>convergence=50</em>, <em>P=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.csdeconv\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constrained-regularized spherical deconvolution (CSD) <a class=\"reference internal\" href=\"#r172\" id=\"id104\">[R172]</a></p>\n<p>Deconvolves the axially symmetric single fiber response function <cite>r_rh</cite> in\nrotational harmonics coefficients from the diffusion weighted signal in\n<cite>dwsignal</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dwsignal</strong> : array</p>\n<blockquote>\n<div><p>Diffusion weighted signals to be deconvolved.</p>\n</div></blockquote>\n<p><strong>X</strong> : array</p>\n<blockquote>\n<div><p>Prediction matrix which estimates diffusion weighted signals from FOD\ncoefficients.</p>\n</div></blockquote>\n<p><strong>B_reg</strong> : array (N, B)</p>\n<blockquote>\n<div><p>SH basis matrix which maps FOD coefficients to FOD values on the\nsurface of the sphere. B_reg should be scaled to account for lambda.</p>\n</div></blockquote>\n<p><strong>tau</strong> : float</p>\n<blockquote>\n<div><p>Threshold controlling the amplitude below which the corresponding fODF\nis assumed to be zero.  Ideally, tau should be set to zero. However, to\nimprove the stability of the algorithm, tau is set to tau*100 % of the\nmax fODF amplitude (here, 10% by default). This is similar to peak\ndetection where peaks below 0.1 amplitude are usually considered noise\npeaks. Because SDT is based on a q-ball ODF deconvolution, and not\nsignal deconvolution, using the max instead of mean (as in CSD), is\nmore stable.</p>\n</div></blockquote>\n<p><strong>convergence</strong> : int</p>\n<blockquote>\n<div><p>Maximum number of iterations to allow the deconvolution to converge.</p>\n</div></blockquote>\n<p><strong>P</strong> : ndarray</p>\n<blockquote>\n<div><p>This is an optimization to avoid computing <code class=\"docutils literal\"><span class=\"pre\">dot(X.T,</span> <span class=\"pre\">X)</span></code> many times.\nIf the same <code class=\"docutils literal\"><span class=\"pre\">X</span></code> is used many times, <code class=\"docutils literal\"><span class=\"pre\">P</span></code> can be precomputed and\npassed to this function.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>fodf_sh</strong> : ndarray (<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)*(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)/2</span></code>,)</p>\n<blockquote>\n<div><p>Spherical harmonics coefficients of the constrained-regularized fiber\nODF.</p>\n</div></blockquote>\n<p><strong>num_it</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>Number of iterations in the constrained-regularization used for\nconvergence.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>This section describes how the fitting of the SH coefficients is done.\nProblem is to minimise per iteration:</p>\n<p><span class=\"math\">\\(F(f_n) = ||Xf_n - S||^2 + \\lambda^2 ||H_{n-1} f_n||^2\\)</span></p>\n<p>Where <span class=\"math\">\\(X\\)</span> maps current FOD SH coefficients <span class=\"math\">\\(f_n\\)</span> to DW signals <span class=\"math\">\\(s\\)</span> and\n<span class=\"math\">\\(H_{n-1}\\)</span> maps FOD SH coefficients <span class=\"math\">\\(f_n\\)</span> to amplitudes along set of\nnegative directions identified in previous iteration, i.e. the matrix\nformed by the rows of <span class=\"math\">\\(B_{reg}\\)</span> for which <span class=\"math\">\\(Hf_{n-1}&lt;0\\)</span> where <span class=\"math\">\\(B_{reg}\\)</span>\nmaps <span class=\"math\">\\(f_n\\)</span> to FOD amplitude on a sphere.</p>\n<p>Solve by differentiating and setting to zero:</p>\n<p><span class=\"math\">\\(\\Rightarrow \\frac{\\delta F}{\\delta f_n} = 2X^T(Xf_n - S) + 2 \\lambda^2\nH_{n-1}^TH_{n-1}f_n=0\\)</span></p>\n<p>Or:</p>\n<p><span class=\"math\">\\((X^TX + \\lambda^2 H_{n-1}^TH_{n-1})f_n = X^Ts\\)</span></p>\n<p>Define <span class=\"math\">\\(Q = X^TX + \\lambda^2 H_{n-1}^TH_{n-1}\\)</span> , which by construction is a\nsquare positive definite symmetric matrix of size <span class=\"math\">\\(n_{SH} by n_{SH}\\)</span>. If\nneeded, positive definiteness can be enforced with a small minimum norm\nregulariser (helps a lot with poorly conditioned direction sets and/or\nsuperresolution):</p>\n<p><span class=\"math\">\\(Q = X^TX + (\\lambda H_{n-1}^T) (\\lambda H_{n-1}) + \\mu I\\)</span></p>\n<p>Solve <span class=\"math\">\\(Qf_n = X^Ts\\)</span> using Cholesky decomposition:</p>\n<p><span class=\"math\">\\(Q = LL^T\\)</span></p>\n<p>where <span class=\"math\">\\(L\\)</span> is lower triangular. Then problem can be solved by\nback-substitution:</p>\n<p><span class=\"math\">\\(L_y = X^Ts\\)</span></p>\n<p><span class=\"math\">\\(L^Tf_n = y\\)</span></p>\n<p>To speeds things up further, form <span class=\"math\">\\(P = X^TX + \\mu I\\)</span>, and update to form\n<span class=\"math\">\\(Q\\)</span> by rankn update with <span class=\"math\">\\(H_{n-1}\\)</span>. The dipy implementation looks like:</p>\n<blockquote>\n<div><p>form initially <span class=\"math\">\\(P = X^T X + \\mu I\\)</span> and <span class=\"math\">\\(\\lambda B_{reg}\\)</span></p>\n<p>for each voxel: form <span class=\"math\">\\(z = X^Ts\\)</span></p>\n<blockquote>\n<div><p>estimate <span class=\"math\">\\(f_0\\)</span> by solving <span class=\"math\">\\(Pf_0=z\\)</span>. We use a simplified <span class=\"math\">\\(l_{max}=4\\)</span>\nsolution here, but it might not make a big difference.</p>\n<p>Then iterate until no change in rows of <span class=\"math\">\\(H\\)</span> used in <span class=\"math\">\\(H_n\\)</span></p>\n<blockquote>\n<div><p>form <span class=\"math\">\\(H_{n}\\)</span> given <span class=\"math\">\\(f_{n-1}\\)</span></p>\n<p>form <span class=\"math\">\\(Q = P + (\\lambda H_{n-1}^T) (\\lambda H_{n-1}\\)</span>) (this can\nbe done by rankn update, but we currently do not use rankn\nupdate).</p>\n<p>solve <span class=\"math\">\\(Qf_n = z\\)</span> using Cholesky decomposition</p>\n</div></blockquote>\n</div></blockquote>\n</div></blockquote>\n<p>We&#8217;d like to thanks Donald Tournier for his help with describing and\nimplementing this algorithm.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r172\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R172]</td><td><em>(<a class=\"fn-backref\" href=\"#id104\">1</a>, <a class=\"fn-backref\" href=\"#id105\">2</a>)</em> Tournier, J.D., et al. NeuroImage 2007. Robust determination of the\nfibre orientation distribution in diffusion MRI: Non-negativity\nconstrained super-resolved spherical deconvolution.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"estimate-response\">\n<h3>estimate_response<a class=\"headerlink\" href=\"#estimate-response\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.estimate_response\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">estimate_response</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>evals</em>, <em>S0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.estimate_response\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Estimate single fiber response function</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<p><strong>evals</strong> : ndarray</p>\n<p><strong>S0</strong> : float</p>\n<blockquote>\n<div><p>non diffusion weighted</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>S</strong> : estimated signal</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"fa-trace-to-lambdas\">\n<h3>fa_trace_to_lambdas<a class=\"headerlink\" href=\"#fa-trace-to-lambdas\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.fa_trace_to_lambdas\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">fa_trace_to_lambdas</code><span class=\"sig-paren\">(</span><em>fa=0.08</em>, <em>trace=0.0021</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.fa_trace_to_lambdas\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"forward-sdeconv-mat\">\n<h3>forward_sdeconv_mat<a class=\"headerlink\" href=\"#forward-sdeconv-mat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.forward_sdeconv_mat\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">forward_sdeconv_mat</code><span class=\"sig-paren\">(</span><em>r_rh</em>, <em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.forward_sdeconv_mat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Build forward spherical deconvolution matrix</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>r_rh</strong> : ndarray</p>\n<blockquote>\n<div><p>Rotational harmonics coefficients for the single fiber response\nfunction. Each element <cite>rh[i]</cite> is associated with spherical harmonics\nof degree <cite>2*i</cite>.</p>\n</div></blockquote>\n<p><strong>n</strong> : ndarray</p>\n<blockquote>\n<div><p>The degree of spherical harmonic function associated with each row of\nthe deconvolution matrix. Only even degrees are allowed</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>R</strong> : ndarray (N, N)</p>\n<blockquote class=\"last\">\n<div><p>Deconvolution matrix with shape (N, N)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"forward-sdt-deconv-mat\">\n<h3>forward_sdt_deconv_mat<a class=\"headerlink\" href=\"#forward-sdt-deconv-mat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.forward_sdt_deconv_mat\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">forward_sdt_deconv_mat</code><span class=\"sig-paren\">(</span><em>ratio</em>, <em>n</em>, <em>r2_term=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.forward_sdt_deconv_mat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Build forward sharpening deconvolution transform (SDT) matrix</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>ratio</strong> : float</p>\n<blockquote>\n<div><p>ratio = :math:<a href=\"#id106\"><span class=\"problematic\" id=\"id107\">`</span></a></p>\n</div></blockquote>\n<p><strong>rac{lambda_2}{lambda_1}` of the single fiber response</strong> :</p>\n<blockquote>\n<div><blockquote>\n<div><p>function</p>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">ndarray (N,)</span></dt>\n<dd><p class=\"first last\">The degree of spherical harmonic function associated with each row of\nthe deconvolution matrix. Only even degrees are allowed.</p>\n</dd>\n<dt>r2_term <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">bool</span></dt>\n<dd><p class=\"first last\">True if ODF comes from an ODF computed from a model using the <span class=\"math\">\\(r^2\\)</span>\nterm in the integral. For example, DSI, GQI, SHORE, CSA, Tensor,\nMulti-tensor ODFs. This results in using the proper analytical response\nfunction solution solving from the single-fiber ODF with the r^2 term.\nThis derivation is not published anywhere but is very similar to [R173].</p>\n</dd>\n</dl>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>R</strong> : ndarray (N, N)</p>\n<blockquote class=\"last\">\n<div><blockquote>\n<div><p>SDT deconvolution matrix</p>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>P <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">ndarray (N, N)</span></dt>\n<dd><p class=\"first last\">Funk-Radon Transform (FRT) matrix</p>\n</dd>\n</dl>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"fractional-anisotropy\">\n<h3>fractional_anisotropy<a class=\"headerlink\" href=\"#fractional-anisotropy\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.fractional_anisotropy\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">fractional_anisotropy</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.fractional_anisotropy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fractional anisotropy (FA) of a diffusion tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>fa</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated FA. Range is 0 &lt;= FA &lt;= 1.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>FA is calculated using the following equation:</p>\n<div class=\"math\">\n\\[FA = \\sqrt{\\frac{1}{2}\\frac{(\\lambda_1-\\lambda_2)^2+(\\lambda_1-\n            \\lambda_3)^2+(\\lambda_2-\\lambda_3)^2}{\\lambda_1^2+\n            \\lambda_2^2+\\lambda_3^2}}\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id109\">\n<h3>get_sphere<a class=\"headerlink\" href=\"#id109\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.get_sphere\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">get_sphere</code><span class=\"sig-paren\">(</span><em>name='symmetric362'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.get_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>provide triangulated spheres</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>name</strong> : str</p>\n<blockquote>\n<div><p>which sphere - one of:\n* &#8216;symmetric362&#8217;\n* &#8216;symmetric642&#8217;\n* &#8216;symmetric724&#8217;\n* &#8216;repulsion724&#8217;\n* &#8216;repulsion100&#8217;\n* &#8216;repulsion200&#8217;</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>sphere</strong> : a dipy.core.sphere.Sphere class instance</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric362&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">faces</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">362</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">720</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;not a sphere name&#39;</span><span class=\"p\">)</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n    <span class=\"o\">...</span>\n<span class=\"gr\">DataError</span>: <span class=\"n\">No sphere called &quot;not a sphere name&quot;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"lazy-index\">\n<h3>lazy_index<a class=\"headerlink\" href=\"#lazy-index\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.lazy_index\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">lazy_index</code><span class=\"sig-paren\">(</span><em>index</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.lazy_index\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Produces a lazy index</p>\n<p>Returns a slice that can be used for indexing an array, if no slice can be\nmade index is returned as is.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"lpn\">\n<h3>lpn<a class=\"headerlink\" href=\"#lpn\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.lpn\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">lpn</code><span class=\"sig-paren\">(</span><em>n</em>, <em>z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.lpn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Legendre function of the first kind.</p>\n<p>Compute sequence of Legendre functions of the first kind (polynomials),\nPn(z) and derivatives for all degrees from 0 to n (inclusive).</p>\n<p>See also special.legendre for polynomial class.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r174\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id110\">[R174]</a></td><td>Zhang, Shanjie and Jin, Jianming. &#8220;Computation of Special\nFunctions&#8221;, John Wiley and Sons, 1996.\n<a class=\"reference external\" href=\"http://jin.ece.illinois.edu/specfunc.html\">http://jin.ece.illinois.edu/specfunc.html</a></td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"multi-voxel-fit\">\n<h3>multi_voxel_fit<a class=\"headerlink\" href=\"#multi-voxel-fit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.multi_voxel_fit\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">multi_voxel_fit</code><span class=\"sig-paren\">(</span><em>single_voxel_fit</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.multi_voxel_fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Method decorator to turn a single voxel model fit\ndefinition into a multi voxel model fit definition</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id111\">\n<h3>ndindex<a class=\"headerlink\" href=\"#id111\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.ndindex\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">ndindex</code><span class=\"sig-paren\">(</span><em>shape</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape</strong> : tuple of ints</p>\n<blockquote class=\"last\">\n<div><p>The dimensions of the array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"k\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"odf-deconv\">\n<h3>odf_deconv<a class=\"headerlink\" href=\"#odf-deconv\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.odf_deconv\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">odf_deconv</code><span class=\"sig-paren\">(</span><em>odf_sh</em>, <em>R</em>, <em>B_reg</em>, <em>lambda_=1.0</em>, <em>tau=0.1</em>, <em>r2_term=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.odf_deconv\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>ODF constrained-regularized spherical deconvolution using\nthe Sharpening Deconvolution Transform (SDT) <a class=\"reference internal\" href=\"#r175\" id=\"id112\">[R175]</a>, <a class=\"reference internal\" href=\"#r176\" id=\"id113\">[R176]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>odf_sh</strong> : ndarray (<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)*(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)/2</span></code>,)</p>\n<blockquote>\n<div><p>ndarray of SH coefficients for the ODF spherical function to be\ndeconvolved</p>\n</div></blockquote>\n<p><strong>R</strong> : ndarray (<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)/2</span></code>, <code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)/2</span></code>)</p>\n<blockquote>\n<div><p>SDT matrix in SH basis</p>\n</div></blockquote>\n<p><strong>B_reg</strong> : ndarray (<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)/2</span></code>, <code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)/2</span></code>)</p>\n<blockquote>\n<div><p>SH basis matrix used for deconvolution</p>\n</div></blockquote>\n<p><strong>lambda_</strong> : float</p>\n<blockquote>\n<div><p>lambda parameter in minimization equation (default 1.0)</p>\n</div></blockquote>\n<p><strong>tau</strong> : float</p>\n<blockquote>\n<div><p>threshold (tau <a href=\"#id114\"><span class=\"problematic\" id=\"id115\">*</span></a>max(fODF)) controlling the amplitude below\nwhich the corresponding fODF is assumed to be zero.</p>\n</div></blockquote>\n<p><strong>r2_term</strong> : bool</p>\n<blockquote>\n<div><p>True if ODF is computed from model that uses the <span class=\"math\">\\(r^2\\)</span> term in the\nintegral.  Recall that Tuch&#8217;s ODF (used in Q-ball Imaging <a class=\"reference internal\" href=\"#r175\" id=\"id116\">[R175]</a>) and\nthe true normalized ODF definition differ from a <span class=\"math\">\\(r^2\\)</span> term in the ODF\nintegral. The original Sharpening Deconvolution Transform (SDT)\ntechnique <a class=\"reference internal\" href=\"#r176\" id=\"id117\">[R176]</a> is expecting Tuch&#8217;s ODF without the <span class=\"math\">\\(r^2\\)</span> (see <a class=\"reference internal\" href=\"#r177\" id=\"id118\">[R177]</a> for\nthe mathematical details).  Now, this function supports ODF that have\nbeen computed using the <span class=\"math\">\\(r^2\\)</span> term because the proper analytical\nresponse function has be derived.  For example, models such as DSI,\nGQI, SHORE, CSA, Tensor, Multi-tensor ODFs, should now be deconvolved\nwith the r2_term=True.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>fodf_sh</strong> : ndarray (<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)/2</span></code>,)</p>\n<blockquote>\n<div><p>Spherical harmonics coefficients of the constrained-regularized fiber\nODF</p>\n</div></blockquote>\n<p><strong>num_it</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>Number of iterations in the constrained-regularization used for\nconvergence</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r175\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R175]</td><td><em>(<a class=\"fn-backref\" href=\"#id112\">1</a>, <a class=\"fn-backref\" href=\"#id116\">2</a>, <a class=\"fn-backref\" href=\"#id119\">3</a>)</em> Tuch, D. MRM 2004. Q-Ball Imaging.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r176\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R176]</td><td><em>(<a class=\"fn-backref\" href=\"#id113\">1</a>, <a class=\"fn-backref\" href=\"#id117\">2</a>, <a class=\"fn-backref\" href=\"#id120\">3</a>)</em> Descoteaux, M., et al. IEEE TMI 2009. Deterministic and\nProbabilistic Tractography Based on Complex Fibre Orientation\nDistributions</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r177\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R177]</td><td><em>(<a class=\"fn-backref\" href=\"#id118\">1</a>, <a class=\"fn-backref\" href=\"#id121\">2</a>)</em> Descoteaux, M, PhD thesis, INRIA Sophia-Antipolis, 2008.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"odf-sh-to-sharp\">\n<h3>odf_sh_to_sharp<a class=\"headerlink\" href=\"#odf-sh-to-sharp\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.odf_sh_to_sharp\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">odf_sh_to_sharp</code><span class=\"sig-paren\">(</span><em>odfs_sh</em>, <em>sphere</em>, <em>basis=None</em>, <em>ratio=0.2</em>, <em>sh_order=8</em>, <em>lambda_=1.0</em>, <em>tau=0.1</em>, <em>r2_term=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.odf_sh_to_sharp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sharpen odfs using the sharpening deconvolution transform <a class=\"reference internal\" href=\"#r179\" id=\"id122\">[R179]</a></p>\n<p>This function can be used to sharpen any smooth ODF spherical function. In\ntheory, this should only be used to sharpen QballModel ODFs, but in\npractice, one can play with the deconvolution ratio and sharpen almost any\nODF-like spherical function. The constrained-regularization is stable and\nwill not only sharpen the ODF peaks but also regularize the noisy peaks.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>odfs_sh</strong> : ndarray (<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)*(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)/2</span></code>, )</p>\n<blockquote>\n<div><p>array of odfs expressed as spherical harmonics coefficients</p>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>sphere used to build the regularization matrix</p>\n</div></blockquote>\n<p><strong>basis</strong> : {None, &#8216;mrtrix&#8217;, &#8216;fibernav&#8217;}</p>\n<blockquote>\n<div><p>different spherical harmonic basis. None is the fibernav basis as well.</p>\n</div></blockquote>\n<p><strong>ratio</strong> : float,</p>\n<blockquote>\n<div><p>ratio of the smallest vs the largest eigenvalue of the single prolate\ntensor response function (<span class=\"math\">\\(\\frac{\\lambda_2}{\\lambda_1}\\)</span>)</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int</p>\n<blockquote>\n<div><p>maximal SH order of the SH representation</p>\n</div></blockquote>\n<p><strong>lambda_</strong> : float</p>\n<blockquote>\n<div><p>lambda parameter (see odfdeconv) (default 1.0)</p>\n</div></blockquote>\n<p><strong>tau</strong> : float</p>\n<blockquote>\n<div><p>tau parameter in the L matrix construction (see odfdeconv)\n(default 0.1)</p>\n</div></blockquote>\n<p><strong>r2_term</strong> : bool</p>\n<blockquote>\n<div><p>True if ODF is computed from model that uses the <span class=\"math\">\\(r^2\\)</span> term in the\nintegral.  Recall that Tuch&#8217;s ODF (used in Q-ball Imaging <a class=\"reference internal\" href=\"#r178\" id=\"id123\">[R178]</a>) and\nthe true normalized ODF definition differ from a <span class=\"math\">\\(r^2\\)</span> term in the ODF\nintegral. The original Sharpening Deconvolution Transform (SDT)\ntechnique <a class=\"reference internal\" href=\"#r179\" id=\"id124\">[R179]</a> is expecting Tuch&#8217;s ODF without the <span class=\"math\">\\(r^2\\)</span> (see <a class=\"reference internal\" href=\"#r180\" id=\"id125\">[R180]</a> for\nthe mathematical details).  Now, this function supports ODF that have\nbeen computed using the <span class=\"math\">\\(r^2\\)</span> term because the proper analytical\nresponse function has be derived.  For example, models such as DSI,\nGQI, SHORE, CSA, Tensor, Multi-tensor ODFs, should now be deconvolved\nwith the r2_term=True.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>fodf_sh</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>sharpened odf expressed as spherical harmonics coefficients</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r178\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R178]</td><td><em>(<a class=\"fn-backref\" href=\"#id123\">1</a>, <a class=\"fn-backref\" href=\"#id126\">2</a>)</em> Tuch, D. MRM 2004. Q-Ball Imaging.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r179\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R179]</td><td><em>(<a class=\"fn-backref\" href=\"#id122\">1</a>, <a class=\"fn-backref\" href=\"#id124\">2</a>, <a class=\"fn-backref\" href=\"#id127\">3</a>)</em> Descoteaux, M., et al. IEEE TMI 2009. Deterministic and\nProbabilistic Tractography Based on Complex Fibre Orientation\nDistributions</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r180\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R180]</td><td><em>(<a class=\"fn-backref\" href=\"#id125\">1</a>, <a class=\"fn-backref\" href=\"#id128\">2</a>)</em> Descoteaux, M, et al. MRM 2007. Fast, Regularized and Analytical\nQ-Ball Imaging</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"peaks-from-model\">\n<h3>peaks_from_model<a class=\"headerlink\" href=\"#peaks-from-model\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.peaks_from_model\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">peaks_from_model</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em>, <em>sphere</em>, <em>relative_peak_threshold</em>, <em>min_separation_angle</em>, <em>mask=None</em>, <em>return_odf=False</em>, <em>return_sh=True</em>, <em>gfa_thr=0</em>, <em>normalize_peaks=False</em>, <em>sh_order=8</em>, <em>sh_basis_type=None</em>, <em>npeaks=5</em>, <em>B=None</em>, <em>invB=None</em>, <em>parallel=False</em>, <em>nbr_processes=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.peaks_from_model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fits the model to data and computes peaks and metrics</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : a model instance</p>\n<blockquote>\n<div><p><cite>model</cite> will be used to fit the data.</p>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>The Sphere providing discrete directions for evaluation.</p>\n</div></blockquote>\n<p><strong>relative_peak_threshold</strong> : float</p>\n<blockquote>\n<div><p>Only return peaks greater than <code class=\"docutils literal\"><span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">m</span></code> where m\nis the largest peak.</p>\n</div></blockquote>\n<p><strong>min_separation_angle</strong> : float in [0, 90] The minimum distance between</p>\n<blockquote>\n<div><p>directions. If two peaks are too close only the larger of the two is\nreturned.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array, optional</p>\n<blockquote>\n<div><p>If <cite>mask</cite> is provided, voxels that are False in <cite>mask</cite> are skipped and\nno peaks are returned.</p>\n</div></blockquote>\n<p><strong>return_odf</strong> : bool</p>\n<blockquote>\n<div><p>If True, the odfs are returned.</p>\n</div></blockquote>\n<p><strong>return_sh</strong> : bool</p>\n<blockquote>\n<div><p>If True, the odf as spherical harmonics coefficients is returned</p>\n</div></blockquote>\n<p><strong>gfa_thr</strong> : float</p>\n<blockquote>\n<div><p>Voxels with gfa less than <cite>gfa_thr</cite> are skipped, no peaks are returned.</p>\n</div></blockquote>\n<p><strong>normalize_peaks</strong> : bool</p>\n<blockquote>\n<div><p>If true, all peak values are calculated relative to <cite>max(odf)</cite>.</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int, optional</p>\n<blockquote>\n<div><p>Maximum SH order in the SH fit.  For <cite>sh_order</cite>, there will be\n<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients (default 8).</p>\n</div></blockquote>\n<p><strong>sh_basis_type</strong> : {None, &#8216;mrtrix&#8217;, &#8216;fibernav&#8217;}</p>\n<blockquote>\n<div><p><code class=\"docutils literal\"><span class=\"pre\">None</span></code> for the default dipy basis which is the fibernav basis,\n<code class=\"docutils literal\"><span class=\"pre\">mrtrix</span></code> for the MRtrix basis, and\n<code class=\"docutils literal\"><span class=\"pre\">fibernav</span></code> for the FiberNavigator basis</p>\n</div></blockquote>\n<p><strong>sh_smooth</strong> : float, optional</p>\n<blockquote>\n<div><p>Lambda-regularization in the SH fit (default 0.0).</p>\n</div></blockquote>\n<p><strong>npeaks</strong> : int</p>\n<blockquote>\n<div><p>Maximum number of peaks found (default 5 peaks).</p>\n</div></blockquote>\n<p><strong>B</strong> : ndarray, optional</p>\n<blockquote>\n<div><p>Matrix that transforms spherical harmonics to spherical function\n<code class=\"docutils literal\"><span class=\"pre\">sf</span> <span class=\"pre\">=</span> <span class=\"pre\">np.dot(sh,</span> <span class=\"pre\">B)</span></code>.</p>\n</div></blockquote>\n<p><strong>invB</strong> : ndarray, optional</p>\n<blockquote>\n<div><p>Inverse of B.</p>\n</div></blockquote>\n<p><strong>parallel: bool</strong> :</p>\n<blockquote>\n<div><p>If True, use multiprocessing to compute peaks and metric\n(default False). Temporary files are saved in the default temporary\ndirectory of the system. It can be changed using <code class=\"docutils literal\"><span class=\"pre\">import</span> <span class=\"pre\">tempfile</span></code>\nand <code class=\"docutils literal\"><span class=\"pre\">tempfile.tempdir</span> <span class=\"pre\">=</span> <span class=\"pre\">'/path/to/tempdir'</span></code>.</p>\n</div></blockquote>\n<p><strong>nbr_processes: int</strong> :</p>\n<blockquote>\n<div><p>If <cite>parallel</cite> is True, the number of subprocesses to use\n(default multiprocessing.cpu_count()).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>pam</strong> : PeaksAndMetrics</p>\n<blockquote class=\"last\">\n<div><p>An object with <code class=\"docutils literal\"><span class=\"pre\">gfa</span></code>, <code class=\"docutils literal\"><span class=\"pre\">peak_directions</span></code>, <code class=\"docutils literal\"><span class=\"pre\">peak_values</span></code>,\n<code class=\"docutils literal\"><span class=\"pre\">peak_indices</span></code>, <code class=\"docutils literal\"><span class=\"pre\">odf</span></code>, <code class=\"docutils literal\"><span class=\"pre\">shm_coeffs</span></code> as attributes</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"quad\">\n<h3>quad<a class=\"headerlink\" href=\"#quad\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.quad\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">quad</code><span class=\"sig-paren\">(</span><em>func</em>, <em>a</em>, <em>b</em>, <em>args=()</em>, <em>full_output=0</em>, <em>epsabs=1.49e-08</em>, <em>epsrel=1.49e-08</em>, <em>limit=50</em>, <em>points=None</em>, <em>weight=None</em>, <em>wvar=None</em>, <em>wopts=None</em>, <em>maxp1=50</em>, <em>limlst=50</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.quad\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute a definite integral.</p>\n<p>Integrate func from <cite>a</cite> to <cite>b</cite> (possibly infinite interval) using a\ntechnique from the Fortran library QUADPACK.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>func</strong> : {function, scipy.LowLevelCallable}</p>\n<blockquote>\n<div><p>A Python function or method to integrate.  If <cite>func</cite> takes many\narguments, it is integrated along the axis corresponding to the\nfirst argument.</p>\n<p>If the user desires improved integration performance, then <cite>f</cite> may\nbe a <cite>scipy.LowLevelCallable</cite> with one of the signatures:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">double</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">double</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"n\">double</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">double</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">void</span> <span class=\"o\">*</span><span class=\"n\">user_data</span><span class=\"p\">)</span>\n<span class=\"n\">double</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"nb\">int</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">double</span> <span class=\"o\">*</span><span class=\"n\">xx</span><span class=\"p\">)</span>\n<span class=\"n\">double</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"nb\">int</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">double</span> <span class=\"o\">*</span><span class=\"n\">xx</span><span class=\"p\">,</span> <span class=\"n\">void</span> <span class=\"o\">*</span><span class=\"n\">user_data</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal\"><span class=\"pre\">user_data</span></code> is the data contained in the <cite>scipy.LowLevelCallable</cite>.\nIn the call forms with <code class=\"docutils literal\"><span class=\"pre\">xx</span></code>,  <code class=\"docutils literal\"><span class=\"pre\">n</span></code> is the length of the <code class=\"docutils literal\"><span class=\"pre\">xx</span></code> \narray which contains <code class=\"docutils literal\"><span class=\"pre\">xx[0]</span> <span class=\"pre\">==</span> <span class=\"pre\">x</span></code> and the rest of the items are\nnumbers contained in the <code class=\"docutils literal\"><span class=\"pre\">args</span></code> argument of quad.</p>\n<p>In addition, certain ctypes call signatures are supported for \nbackward compatibility, but those should not be used in new code.</p>\n</div></blockquote>\n<p><strong>a</strong> : float</p>\n<blockquote>\n<div><p>Lower limit of integration (use -numpy.inf for -infinity).</p>\n</div></blockquote>\n<p><strong>b</strong> : float</p>\n<blockquote>\n<div><p>Upper limit of integration (use numpy.inf for +infinity).</p>\n</div></blockquote>\n<p><strong>args</strong> : tuple, optional</p>\n<blockquote>\n<div><p>Extra arguments to pass to <cite>func</cite>.</p>\n</div></blockquote>\n<p><strong>full_output</strong> : int, optional</p>\n<blockquote>\n<div><p>Non-zero to return a dictionary of integration information.\nIf non-zero, warning messages are also suppressed and the\nmessage is appended to the output tuple.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y</strong> : float</p>\n<blockquote>\n<div><p>The integral of func from <cite>a</cite> to <cite>b</cite>.</p>\n</div></blockquote>\n<p><strong>abserr</strong> : float</p>\n<blockquote>\n<div><p>An estimate of the absolute error in the result.</p>\n</div></blockquote>\n<p><strong>infodict</strong> : dict</p>\n<blockquote>\n<div><p>A dictionary containing additional information.\nRun scipy.integrate.quad_explain() for more information.</p>\n</div></blockquote>\n<p><strong>message</strong> :</p>\n<blockquote>\n<div><p>A convergence message.</p>\n</div></blockquote>\n<p><strong>explain</strong> :</p>\n<blockquote>\n<div><p>Appended only with &#8216;cos&#8217; or &#8216;sin&#8217; weighting and infinite\nintegration limits, it contains an explanation of the codes in\ninfodict[&#8216;ierlst&#8217;]</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\" colspan=\"2\">Other Parameters:</th></tr>\n<tr class=\"field-odd field\"><td>&#160;</td><td class=\"field-body\"><p class=\"first\"><strong>epsabs</strong> : float or int, optional</p>\n<blockquote>\n<div><p>Absolute error tolerance.</p>\n</div></blockquote>\n<p><strong>epsrel</strong> : float or int, optional</p>\n<blockquote>\n<div><p>Relative error tolerance.</p>\n</div></blockquote>\n<p><strong>limit</strong> : float or int, optional</p>\n<blockquote>\n<div><p>An upper bound on the number of subintervals used in the adaptive\nalgorithm.</p>\n</div></blockquote>\n<p><strong>points</strong> : (sequence of floats,ints), optional</p>\n<blockquote>\n<div><p>A sequence of break points in the bounded integration interval\nwhere local difficulties of the integrand may occur (e.g.,\nsingularities, discontinuities). The sequence does not have\nto be sorted.</p>\n</div></blockquote>\n<p><strong>weight</strong> : float or int, optional</p>\n<blockquote>\n<div><p>String indicating weighting function. Full explanation for this\nand the remaining arguments can be found below.</p>\n</div></blockquote>\n<p><strong>wvar</strong> : optional</p>\n<blockquote>\n<div><p>Variables for use with weighting functions.</p>\n</div></blockquote>\n<p><strong>wopts</strong> : optional</p>\n<blockquote>\n<div><p>Optional input for reusing Chebyshev moments.</p>\n</div></blockquote>\n<p><strong>maxp1</strong> : float or int, optional</p>\n<blockquote>\n<div><p>An upper bound on the number of Chebyshev moments.</p>\n</div></blockquote>\n<p><strong>limlst</strong> : int, optional</p>\n<blockquote class=\"last\">\n<div><p>Upper bound on the number of cycles (&gt;=3) for use with a sinusoidal\nweighting and an infinite end-point.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dblquad</span></code></dt>\n<dd>double integral</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">tplquad</span></code></dt>\n<dd>triple integral</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nquad</span></code></dt>\n<dd>n-dimensional integrals (uses <cite>quad</cite> recursively)</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fixed_quad</span></code></dt>\n<dd>fixed-order Gaussian quadrature</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quadrature</span></code></dt>\n<dd>adaptive Gaussian quadrature</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odeint</span></code></dt>\n<dd>ODE integrator</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ode</span></code></dt>\n<dd>ODE integrator</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">simps</span></code></dt>\n<dd>integrator for sampled data</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">romb</span></code></dt>\n<dd>integrator for sampled data</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">scipy.special</span></code></dt>\n<dd>for coefficients and roots of orthogonal polynomials</dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p><strong>Extra information for quad() inputs and outputs</strong></p>\n<p>If full_output is non-zero, then the third output argument\n(infodict) is a dictionary with entries as tabulated below.  For\ninfinite limits, the range is transformed to (0,1) and the\noptional outputs are given with respect to this transformed range.\nLet M be the input argument limit and let K be infodict[&#8216;last&#8217;].\nThe entries are:</p>\n<dl class=\"docutils\">\n<dt>&#8216;neval&#8217;</dt>\n<dd>The number of function evaluations.</dd>\n<dt>&#8216;last&#8217;</dt>\n<dd>The number, K, of subintervals produced in the subdivision process.</dd>\n<dt>&#8216;alist&#8217;</dt>\n<dd>A rank-1 array of length M, the first K elements of which are the\nleft end points of the subintervals in the partition of the\nintegration range.</dd>\n<dt>&#8216;blist&#8217;</dt>\n<dd>A rank-1 array of length M, the first K elements of which are the\nright end points of the subintervals.</dd>\n<dt>&#8216;rlist&#8217;</dt>\n<dd>A rank-1 array of length M, the first K elements of which are the\nintegral approximations on the subintervals.</dd>\n<dt>&#8216;elist&#8217;</dt>\n<dd>A rank-1 array of length M, the first K elements of which are the\nmoduli of the absolute error estimates on the subintervals.</dd>\n<dt>&#8216;iord&#8217;</dt>\n<dd>A rank-1 integer array of length M, the first L elements of\nwhich are pointers to the error estimates over the subintervals\nwith <code class=\"docutils literal\"><span class=\"pre\">L=K</span></code> if <code class=\"docutils literal\"><span class=\"pre\">K&lt;=M/2+2</span></code> or <code class=\"docutils literal\"><span class=\"pre\">L=M+1-K</span></code> otherwise. Let I be the\nsequence <code class=\"docutils literal\"><span class=\"pre\">infodict['iord']</span></code> and let E be the sequence\n<code class=\"docutils literal\"><span class=\"pre\">infodict['elist']</span></code>.  Then <code class=\"docutils literal\"><span class=\"pre\">E[I[1]],</span> <span class=\"pre\">...,</span> <span class=\"pre\">E[I[L]]</span></code> forms a\ndecreasing sequence.</dd>\n</dl>\n<p>If the input argument points is provided (i.e. it is not None),\nthe following additional outputs are placed in the output\ndictionary.  Assume the points sequence is of length P.</p>\n<dl class=\"docutils\">\n<dt>&#8216;pts&#8217;</dt>\n<dd>A rank-1 array of length P+2 containing the integration limits\nand the break points of the intervals in ascending order.\nThis is an array giving the subintervals over which integration\nwill occur.</dd>\n<dt>&#8216;level&#8217;</dt>\n<dd>A rank-1 integer array of length M (=limit), containing the\nsubdivision levels of the subintervals, i.e., if (aa,bb) is a\nsubinterval of <code class=\"docutils literal\"><span class=\"pre\">(pts[1],</span> <span class=\"pre\">pts[2])</span></code> where <code class=\"docutils literal\"><span class=\"pre\">pts[0]</span></code> and <code class=\"docutils literal\"><span class=\"pre\">pts[2]</span></code>\nare adjacent elements of <code class=\"docutils literal\"><span class=\"pre\">infodict['pts']</span></code>, then (aa,bb) has level l\nif <code class=\"docutils literal\"><span class=\"pre\">|bb-aa|</span> <span class=\"pre\">=</span> <span class=\"pre\">|pts[2]-pts[1]|</span> <span class=\"pre\">*</span> <span class=\"pre\">2**(-l)</span></code>.</dd>\n<dt>&#8216;ndin&#8217;</dt>\n<dd>A rank-1 integer array of length P+2.  After the first integration\nover the intervals (pts[1], pts[2]), the error estimates over some\nof the intervals may have been increased artificially in order to\nput their subdivision forward.  This array has ones in slots\ncorresponding to the subintervals for which this happens.</dd>\n</dl>\n<p><strong>Weighting the integrand</strong></p>\n<p>The input variables, <em>weight</em> and <em>wvar</em>, are used to weight the\nintegrand by a select list of functions.  Different integration\nmethods are used to compute the integral with these weighting\nfunctions.  The possible values of weight and the corresponding\nweighting functions are.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"15%\" />\n<col width=\"53%\" />\n<col width=\"32%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\"><code class=\"docutils literal\"><span class=\"pre\">weight</span></code></th>\n<th class=\"head\">Weight function used</th>\n<th class=\"head\"><code class=\"docutils literal\"><span class=\"pre\">wvar</span></code></th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>&#8216;cos&#8217;</td>\n<td>cos(w*x)</td>\n<td>wvar = w</td>\n</tr>\n<tr class=\"row-odd\"><td>&#8216;sin&#8217;</td>\n<td>sin(w*x)</td>\n<td>wvar = w</td>\n</tr>\n<tr class=\"row-even\"><td>&#8216;alg&#8217;</td>\n<td>g(x) = ((x-a)**alpha)*((b-x)**beta)</td>\n<td>wvar = (alpha, beta)</td>\n</tr>\n<tr class=\"row-odd\"><td>&#8216;alg-loga&#8217;</td>\n<td>g(x)*log(x-a)</td>\n<td>wvar = (alpha, beta)</td>\n</tr>\n<tr class=\"row-even\"><td>&#8216;alg-logb&#8217;</td>\n<td>g(x)*log(b-x)</td>\n<td>wvar = (alpha, beta)</td>\n</tr>\n<tr class=\"row-odd\"><td>&#8216;alg-log&#8217;</td>\n<td>g(x)*log(x-a)*log(b-x)</td>\n<td>wvar = (alpha, beta)</td>\n</tr>\n<tr class=\"row-even\"><td>&#8216;cauchy&#8217;</td>\n<td>1/(x-c)</td>\n<td>wvar = c</td>\n</tr>\n</tbody>\n</table>\n<p>wvar holds the parameter w, (alpha, beta), or c depending on the weight\nselected.  In these expressions, a and b are the integration limits.</p>\n<p>For the &#8216;cos&#8217; and &#8216;sin&#8217; weighting, additional inputs and outputs are\navailable.</p>\n<p>For finite integration limits, the integration is performed using a\nClenshaw-Curtis method which uses Chebyshev moments.  For repeated\ncalculations, these moments are saved in the output dictionary:</p>\n<dl class=\"docutils\">\n<dt>&#8216;momcom&#8217;</dt>\n<dd>The maximum level of Chebyshev moments that have been computed,\ni.e., if <code class=\"docutils literal\"><span class=\"pre\">M_c</span></code> is <code class=\"docutils literal\"><span class=\"pre\">infodict['momcom']</span></code> then the moments have been\ncomputed for intervals of length <code class=\"docutils literal\"><span class=\"pre\">|b-a|</span> <span class=\"pre\">*</span> <span class=\"pre\">2**(-l)</span></code>,\n<code class=\"docutils literal\"><span class=\"pre\">l=0,1,...,M_c</span></code>.</dd>\n<dt>&#8216;nnlog&#8217;</dt>\n<dd>A rank-1 integer array of length M(=limit), containing the\nsubdivision levels of the subintervals, i.e., an element of this\narray is equal to l if the corresponding subinterval is\n<code class=\"docutils literal\"><span class=\"pre\">|b-a|*</span> <span class=\"pre\">2**(-l)</span></code>.</dd>\n<dt>&#8216;chebmo&#8217;</dt>\n<dd>A rank-2 array of shape (25, maxp1) containing the computed\nChebyshev moments.  These can be passed on to an integration\nover the same interval by passing this array as the second\nelement of the sequence wopts and passing infodict[&#8216;momcom&#8217;] as\nthe first element.</dd>\n</dl>\n<p>If one of the integration limits is infinite, then a Fourier integral is\ncomputed (assuming w neq 0).  If full_output is 1 and a numerical error\nis encountered, besides the error message attached to the output tuple,\na dictionary is also appended to the output tuple which translates the\nerror codes in the array <code class=\"docutils literal\"><span class=\"pre\">info['ierlst']</span></code> to English messages.  The\noutput information dictionary contains the following entries instead of\n&#8216;last&#8217;, &#8216;alist&#8217;, &#8216;blist&#8217;, &#8216;rlist&#8217;, and &#8216;elist&#8217;:</p>\n<dl class=\"docutils\">\n<dt>&#8216;lst&#8217;</dt>\n<dd>The number of subintervals needed for the integration (call it <code class=\"docutils literal\"><span class=\"pre\">K_f</span></code>).</dd>\n<dt>&#8216;rslst&#8217;</dt>\n<dd>A rank-1 array of length M_f=limlst, whose first <code class=\"docutils literal\"><span class=\"pre\">K_f</span></code> elements\ncontain the integral contribution over the interval\n<code class=\"docutils literal\"><span class=\"pre\">(a+(k-1)c,</span> <span class=\"pre\">a+kc)</span></code> where <code class=\"docutils literal\"><span class=\"pre\">c</span> <span class=\"pre\">=</span> <span class=\"pre\">(2*floor(|w|)</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">pi</span> <span class=\"pre\">/</span> <span class=\"pre\">|w|</span></code>\nand <code class=\"docutils literal\"><span class=\"pre\">k=1,2,...,K_f</span></code>.</dd>\n<dt>&#8216;erlst&#8217;</dt>\n<dd>A rank-1 array of length <code class=\"docutils literal\"><span class=\"pre\">M_f</span></code> containing the error estimate\ncorresponding to the interval in the same position in\n<code class=\"docutils literal\"><span class=\"pre\">infodict['rslist']</span></code>.</dd>\n<dt>&#8216;ierlst&#8217;</dt>\n<dd>A rank-1 integer array of length <code class=\"docutils literal\"><span class=\"pre\">M_f</span></code> containing an error flag\ncorresponding to the interval in the same position in\n<code class=\"docutils literal\"><span class=\"pre\">infodict['rslist']</span></code>.  See the explanation dictionary (last entry\nin the output tuple) for the meaning of the codes.</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Calculate <span class=\"math\">\\(\\int^4_0 x^2 dx\\)</span> and compare with an analytic result</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"k\">import</span> <span class=\"n\">integrate</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x2</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">integrate</span><span class=\"o\">.</span><span class=\"n\">quad</span><span class=\"p\">(</span><span class=\"n\">x2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">(21.333333333333332, 2.3684757858670003e-13)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"o\">**</span><span class=\"mi\">3</span> <span class=\"o\">/</span> <span class=\"mf\">3.</span><span class=\"p\">)</span>  <span class=\"c1\"># analytical result</span>\n<span class=\"go\">21.3333333333</span>\n</pre></div>\n</div>\n<p>Calculate <span class=\"math\">\\(\\int^\\infty_0 e^{-x} dx\\)</span></p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">invexp</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">integrate</span><span class=\"o\">.</span><span class=\"n\">quad</span><span class=\"p\">(</span><span class=\"n\">invexp</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">inf</span><span class=\"p\">)</span>\n<span class=\"go\">(1.0, 5.842605999138044e-11)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">a</span> <span class=\"p\">:</span> <span class=\"n\">a</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">integrate</span><span class=\"o\">.</span><span class=\"n\">quad</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span>\n<span class=\"go\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"n\">integrate</span><span class=\"o\">.</span><span class=\"n\">quad</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span>\n<span class=\"go\">1.5</span>\n</pre></div>\n</div>\n<p>Calculate <span class=\"math\">\\(\\int^1_0 x^2 + y^2 dx\\)</span> with ctypes, holding\ny parameter as 1:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">testlib</span><span class=\"o\">.</span><span class=\"n\">c</span> <span class=\"o\">=&gt;</span>\n    <span class=\"n\">double</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"nb\">int</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">double</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]){</span>\n        <span class=\"k\">return</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">];}</span>\n<span class=\"nb\">compile</span> <span class=\"n\">to</span> <span class=\"n\">library</span> <span class=\"n\">testlib</span><span class=\"o\">.*</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"k\">import</span> <span class=\"n\">integrate</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ctypes</span>\n<span class=\"n\">lib</span> <span class=\"o\">=</span> <span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">CDLL</span><span class=\"p\">(</span><span class=\"s1\">&#39;/home/.../testlib.*&#39;</span><span class=\"p\">)</span> <span class=\"c1\">#use absolute path</span>\n<span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">restype</span> <span class=\"o\">=</span> <span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_double</span>\n<span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">argtypes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_int</span><span class=\"p\">,</span><span class=\"n\">ctypes</span><span class=\"o\">.</span><span class=\"n\">c_double</span><span class=\"p\">)</span>\n<span class=\"n\">integrate</span><span class=\"o\">.</span><span class=\"n\">quad</span><span class=\"p\">(</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"c1\">#(1.3333333333333333, 1.4802973661668752e-14)</span>\n<span class=\"nb\">print</span><span class=\"p\">((</span><span class=\"mf\">1.0</span><span class=\"o\">**</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mf\">3.0</span> <span class=\"o\">+</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"o\">**</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mf\">3.0</span> <span class=\"o\">+</span> <span class=\"mf\">0.0</span><span class=\"p\">))</span> <span class=\"c1\">#Analytic result</span>\n<span class=\"c1\"># 1.3333333333333333</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"real-sph-harm\">\n<h3>real_sph_harm<a class=\"headerlink\" href=\"#real-sph-harm\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.real_sph_harm\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">real_sph_harm</code><span class=\"sig-paren\">(</span><em>m</em>, <em>n</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.real_sph_harm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute real spherical harmonics.</p>\n<p>Where the real harmonic <span class=\"math\">\\(Y^m_n\\)</span> is defined to be:</p>\n<blockquote>\n<div>Imag(<span class=\"math\">\\(Y^m_n\\)</span>) * sqrt(2)     if m &gt; 0\n<span class=\"math\">\\(Y^0_n\\)</span>                     if m = 0\nReal(<span class=\"math\">\\(Y^|m|_n\\)</span>) * sqrt(2)   if m &lt; 0</div></blockquote>\n<p>This may take scalar or array arguments. The inputs will be broadcasted\nagainst each other.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>m</strong> : int <code class=\"docutils literal\"><span class=\"pre\">|m|</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">n</span></code></p>\n<blockquote>\n<div><p>The order of the harmonic.</p>\n</div></blockquote>\n<p><strong>n</strong> : int <code class=\"docutils literal\"><span class=\"pre\">&gt;=</span> <span class=\"pre\">0</span></code></p>\n<blockquote>\n<div><p>The degree of the harmonic.</p>\n</div></blockquote>\n<p><strong>theta</strong> : float [0, 2*pi]</p>\n<blockquote>\n<div><p>The azimuthal (longitudinal) coordinate.</p>\n</div></blockquote>\n<p><strong>phi</strong> : float [0, pi]</p>\n<blockquote>\n<div><p>The polar (colatitudinal) coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y_mn</strong> : real float</p>\n<blockquote class=\"last\">\n<div><p>The real harmonic <span class=\"math\">\\(Y^m_n\\)</span> sampled at <cite>theta</cite> and <cite>phi</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">scipy.special.sph_harm</span></code></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"real-sym-sh-basis\">\n<h3>real_sym_sh_basis<a class=\"headerlink\" href=\"#real-sym-sh-basis\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.real_sym_sh_basis\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">real_sym_sh_basis</code><span class=\"sig-paren\">(</span><em>sh_order</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.real_sym_sh_basis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Samples a real symmetric spherical harmonic basis at point on the sphere</p>\n<p>Samples the basis functions up to order <cite>sh_order</cite> at points on the sphere\ngiven by <cite>theta</cite> and <cite>phi</cite>. The basis functions are defined here the same\nway as in fibernavigator <a class=\"reference internal\" href=\"#r181\" id=\"id129\">[R181]</a> where the real harmonic <span class=\"math\">\\(Y^m_n\\)</span> is defined to\nbe:</p>\n<blockquote>\n<div>Imag(<span class=\"math\">\\(Y^m_n\\)</span>) * sqrt(2)     if m &gt; 0\n<span class=\"math\">\\(Y^0_n\\)</span>                     if m = 0\nReal(<span class=\"math\">\\(Y^|m|_n\\)</span>) * sqrt(2)   if m &lt; 0</div></blockquote>\n<p>This may take scalar or array arguments. The inputs will be broadcasted\nagainst each other.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sh_order</strong> : int</p>\n<blockquote>\n<div><p>even int &gt; 0, max spherical harmonic degree</p>\n</div></blockquote>\n<p><strong>theta</strong> : float [0, 2*pi]</p>\n<blockquote>\n<div><p>The azimuthal (longitudinal) coordinate.</p>\n</div></blockquote>\n<p><strong>phi</strong> : float [0, pi]</p>\n<blockquote>\n<div><p>The polar (colatitudinal) coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y_mn</strong> : real float</p>\n<blockquote>\n<div><p>The real harmonic <span class=\"math\">\\(Y^m_n\\)</span> sampled at <cite>theta</cite> and <cite>phi</cite></p>\n</div></blockquote>\n<p><strong>m</strong> : array</p>\n<blockquote>\n<div><p>The order of the harmonics.</p>\n</div></blockquote>\n<p><strong>n</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>The degree of the harmonics.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r181\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R181]</td><td><em>(<a class=\"fn-backref\" href=\"#id129\">1</a>, <a class=\"fn-backref\" href=\"#id130\">2</a>)</em> <a class=\"reference external\" href=\"https://github.com/scilus/fibernavigator\">https://github.com/scilus/fibernavigator</a></td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"recursive-response\">\n<h3>recursive_response<a class=\"headerlink\" href=\"#recursive-response\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.recursive_response\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">recursive_response</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>data</em>, <em>mask=None</em>, <em>sh_order=8</em>, <em>peak_thr=0.01</em>, <em>init_fa=0.08</em>, <em>init_trace=0.0021</em>, <em>iter=8</em>, <em>convergence=0.001</em>, <em>parallel=True</em>, <em>nbr_processes=None</em>, <em>sphere=&lt;dipy.core.sphere.HemiSphere object&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.recursive_response\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Recursive calibration of response function using peak threshold</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<p><strong>data</strong> : ndarray</p>\n<blockquote>\n<div><p>diffusion data</p>\n</div></blockquote>\n<p><strong>mask</strong> : ndarray, optional</p>\n<blockquote>\n<div><p>mask for recursive calibration, for example a white matter mask. It has\nshape <cite>data.shape[0:3]</cite> and dtype=bool. Default: use the entire data\narray.</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int, optional</p>\n<blockquote>\n<div><p>maximal spherical harmonics order. Default: 8</p>\n</div></blockquote>\n<p><strong>peak_thr</strong> : float, optional</p>\n<blockquote>\n<div><p>peak threshold, how large the second peak can be relative to the first\npeak in order to call it a single fiber population [1]. Default: 0.01</p>\n</div></blockquote>\n<p><strong>init_fa</strong> : float, optional</p>\n<blockquote>\n<div><p>FA of the initial &#8216;fat&#8217; response function (tensor). Default: 0.08</p>\n</div></blockquote>\n<p><strong>init_trace</strong> : float, optional</p>\n<blockquote>\n<div><p>trace of the initial &#8216;fat&#8217; response function (tensor). Default: 0.0021</p>\n</div></blockquote>\n<p><strong>iter</strong> : int, optional</p>\n<blockquote>\n<div><p>maximum number of iterations for calibration. Default: 8.</p>\n</div></blockquote>\n<p><strong>convergence</strong> : float, optional</p>\n<blockquote>\n<div><p>convergence criterion, maximum relative change of SH\ncoefficients. Default: 0.001.</p>\n</div></blockquote>\n<p><strong>parallel</strong> : bool, optional</p>\n<blockquote>\n<div><p>Whether to use parallelization in peak-finding during the calibration\nprocedure. Default: True</p>\n</div></blockquote>\n<p><strong>nbr_processes: int</strong> :</p>\n<blockquote>\n<div><p>If <cite>parallel</cite> is True, the number of subprocesses to use\n(default multiprocessing.cpu_count()).</p>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere, optional.</p>\n<blockquote>\n<div><p>The sphere used for peak finding. Default: default_sphere.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>response</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>response function in SH coefficients</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>In CSD there is an important pre-processing step: the estimation of the\nfiber response function. Using an FA threshold is not a very robust method.\nIt is dependent on the dataset (non-informed used subjectivity), and still\ndepends on the diffusion tensor (FA and first eigenvector),\nwhich has low accuracy at high b-value. This function recursively\ncalibrates the response function, for more information see [1].</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r182\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id131\">[R182]</a></td><td>Tax, C.M.W., et al. NeuroImage 2014. Recursive calibration of\nthe fiber response function for spherical deconvolution of\ndiffusion MRI data.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"response-from-mask\">\n<h3>response_from_mask<a class=\"headerlink\" href=\"#response-from-mask\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.response_from_mask\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">response_from_mask</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>data</em>, <em>mask</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.response_from_mask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Estimate the response function from a given mask.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<p><strong>data</strong> : ndarray</p>\n<blockquote>\n<div><p>Diffusion data</p>\n</div></blockquote>\n<p><strong>mask</strong> : ndarray</p>\n<blockquote>\n<div><p>Mask to use for the estimation of the response function. For example a\nmask of the white matter voxels with FA values higher than 0.7\n(see <a class=\"reference internal\" href=\"#r183\" id=\"id132\">[R183]</a>).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>response</strong> : tuple, (2,)</p>\n<blockquote>\n<div><p>(<cite>evals</cite>, <cite>S0</cite>)</p>\n</div></blockquote>\n<p><strong>ratio</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>The ratio between smallest versus largest eigenvalue of the response.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>See csdeconv.auto_response() or csdeconv.recursive_response() if you don&#8217;t\nhave a computed mask for the response function estimation.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r183\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R183]</td><td><em>(<a class=\"fn-backref\" href=\"#id132\">1</a>, <a class=\"fn-backref\" href=\"#id133\">2</a>)</em> Tournier, J.D., et al. NeuroImage 2004. Direct estimation of the</td></tr>\n</tbody>\n</table>\n<p>fiber orientation density function from diffusion-weighted MRI\ndata using spherical deconvolution</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sh-to-rh\">\n<h3>sh_to_rh<a class=\"headerlink\" href=\"#sh-to-rh\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.sh_to_rh\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">sh_to_rh</code><span class=\"sig-paren\">(</span><em>r_sh</em>, <em>m</em>, <em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.sh_to_rh\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical harmonics (SH) to rotational harmonics (RH)</p>\n<p>Calculate the rotational harmonic decomposition up to\nharmonic order <cite>m</cite>, degree <cite>n</cite> for an axially and antipodally\nsymmetric function. Note that all <code class=\"docutils literal\"><span class=\"pre\">m</span> <span class=\"pre\">!=</span> <span class=\"pre\">0</span></code> coefficients\nwill be ignored as axial symmetry is assumed. Hence, there\nwill be <code class=\"docutils literal\"><span class=\"pre\">(sh_order/2</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span></code> non-zero coefficients.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>r_sh</strong> : ndarray (N,)</p>\n<blockquote>\n<div><p>ndarray of SH coefficients for the single fiber response function.\nThese coefficients must correspond to the real spherical harmonic\nfunctions produced by <cite>shm.real_sph_harm</cite>.</p>\n</div></blockquote>\n<p><strong>m</strong> : ndarray (N,)</p>\n<blockquote>\n<div><p>The order of the spherical harmonic function associated with each\ncoefficient.</p>\n</div></blockquote>\n<p><strong>n</strong> : ndarray (N,)</p>\n<blockquote>\n<div><p>The degree of the spherical harmonic function associated with each\ncoefficient.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>r_rh</strong> : ndarray (<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)*(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)/2</span></code>,)</p>\n<blockquote class=\"last\">\n<div><p>Rotational harmonics coefficients representing the input <cite>r_sh</cite></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shm.real_sph_harm</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shm.real_sym_sh_basis</span></code></p>\n</div>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r184\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id134\">[R184]</a></td><td>Tournier, J.D., et al. NeuroImage 2007. Robust determination of the\nfibre orientation distribution in diffusion MRI: Non-negativity\nconstrained super-resolved spherical deconvolution</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"single-tensor\">\n<h3>single_tensor<a class=\"headerlink\" href=\"#single-tensor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.single_tensor\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">single_tensor</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>S0=1</em>, <em>evals=None</em>, <em>evecs=None</em>, <em>snr=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.single_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simulated Q-space signal with a single tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<blockquote>\n<div><p>Measurement directions.</p>\n</div></blockquote>\n<p><strong>S0</strong> : double,</p>\n<blockquote>\n<div><p>Strength of signal in the presence of no diffusion gradient (also\ncalled the <code class=\"docutils literal\"><span class=\"pre\">b=0</span></code> value).</p>\n</div></blockquote>\n<p><strong>evals</strong> : (3,) ndarray</p>\n<blockquote>\n<div><p>Eigenvalues of the diffusion tensor.  By default, values typical for\nprolate white matter are used.</p>\n</div></blockquote>\n<p><strong>evecs</strong> : (3, 3) ndarray</p>\n<blockquote>\n<div><p>Eigenvectors of the tensor.  You can also think of this as a rotation\nmatrix that transforms the direction of the tensor. The eigenvectors\nneed to be column wise.</p>\n</div></blockquote>\n<p><strong>snr</strong> : float</p>\n<blockquote>\n<div><p>Signal to noise ratio, assuming Rician noise.  None implies no noise.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : (N,) ndarray</p>\n<blockquote class=\"last\">\n<div><p>Simulated signal: <code class=\"docutils literal\"><span class=\"pre\">S(q,</span> <span class=\"pre\">tau)</span> <span class=\"pre\">=</span> <span class=\"pre\">S_0</span> <span class=\"pre\">e^(-b</span> <span class=\"pre\">g^T</span> <span class=\"pre\">R</span> <span class=\"pre\">D</span> <span class=\"pre\">R.T</span> <span class=\"pre\">g)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r185\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id135\">[R185]</a></td><td>M. Descoteaux, &#8220;High Angular Resolution Diffusion MRI: from Local\nEstimation to Segmentation and Tractography&#8221;, PhD thesis,\nUniversity of Nice-Sophia Antipolis, p. 42, 2008.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r186\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id136\">[R186]</a></td><td>E. Stejskal and J. Tanner, &#8220;Spin diffusion measurements: spin echos\nin the presence of a time-dependent field gradient&#8221;, Journal of\nChemical Physics, nr. 42, pp. 288&#8211;292, 1965.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sph-harm-ind-list\">\n<h3>sph_harm_ind_list<a class=\"headerlink\" href=\"#sph-harm-ind-list\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.sph_harm_ind_list\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">sph_harm_ind_list</code><span class=\"sig-paren\">(</span><em>sh_order</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.sph_harm_ind_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the degree (n) and order (m) of all the symmetric spherical\nharmonics of degree less then or equal to <cite>sh_order</cite>. The results, <cite>m_list</cite>\nand <cite>n_list</cite> are kx1 arrays, where k depends on sh_order. They can be\npassed to <a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.real_sph_harm\" title=\"dipy.reconst.csdeconv.real_sph_harm\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">real_sph_harm()</span></code></a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sh_order</strong> : int</p>\n<blockquote>\n<div><p>even int &gt; 0, max degree to return</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>m_list</strong> : array</p>\n<blockquote>\n<div><p>orders of even spherical harmonics</p>\n</div></blockquote>\n<p><strong>n_list</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>degrees of even spherical harmonics</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.csdeconv.real_sph_harm\" title=\"dipy.reconst.csdeconv.real_sph_harm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real_sph_harm</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"vec2vec-rotmat\">\n<h3>vec2vec_rotmat<a class=\"headerlink\" href=\"#vec2vec-rotmat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.csdeconv.vec2vec_rotmat\">\n<code class=\"descclassname\">dipy.reconst.csdeconv.</code><code class=\"descname\">vec2vec_rotmat</code><span class=\"sig-paren\">(</span><em>u</em>, <em>v</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.csdeconv.vec2vec_rotmat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>rotation matrix from 2 unit vectors</p>\n<p>u, v being unit 3d vectors return a 3x3 rotation matrix R than aligns u to\nv.</p>\n<p>In general there are many rotations that will map u to v. If S is any\nrotation using v as an axis then R.S will also map u to v since (S.R)u =\nS(Ru) = Sv = v.  The rotation R returned by vec2vec_rotmat leaves fixed the\nperpendicular to the plane spanned by u and v.</p>\n<p>The transpose of R will align v to u.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>u</strong> : array, shape(3,)</p>\n<p><strong>v</strong> : array, shape(3,)</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>R</strong> : array, shape(3,3)</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.geometry</span> <span class=\"k\">import</span> <span class=\"n\">vec2vec_rotmat</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">R</span><span class=\"o\">=</span><span class=\"n\">vec2vec_rotmat</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">,</span><span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">,</span><span class=\"n\">u</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 0.,  1.,  0.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1.,  0.,  0.])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"diffusionkurtosisfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit\" title=\"dipy.reconst.dki.DiffusionKurtosisFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">DiffusionKurtosisFit</span></code></a><a class=\"headerlink\" href=\"#diffusionkurtosisfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">DiffusionKurtosisFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit\" title=\"dipy.reconst.dti.TensorFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.dti.TensorFit</span></code></a></p>\n<p>Class for fitting the Diffusion Kurtosis Model</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">S0_hat</span></code></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directions</span></code></td>\n<td>For tracking - return the primary direction in each voxel</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evals</span></code></td>\n<td>Returns the eigenvalues of the tensor as an array</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evecs</span></code></td>\n<td>Returns the eigenvectors of the tensor as an array, columnwise</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.kt\" title=\"dipy.reconst.dki.DiffusionKurtosisFit.kt\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">kt</span></code></a></td>\n<td>Returns the 15 independent elements of the kurtosis tensor as an array</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quadratic_form</span></code></td>\n<td>Calculates the 3x3 diffusion tensor for each voxel</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ad</span></code>()</td>\n<td>Axial diffusivity (AD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">adc</span></code>(sphere)</td>\n<td>Calculate the apparent diffusion coefficient (ADC) in each direction on</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.ak\" title=\"dipy.reconst.dki.DiffusionKurtosisFit.ak\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ak</span></code></a>([min_kurtosis,&nbsp;max_kurtosis])</td>\n<td>Axial Kurtosis (AK) of a diffusion kurtosis tensor [R193].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.akc\" title=\"dipy.reconst.dki.DiffusionKurtosisFit.akc\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">akc</span></code></a>(sphere)</td>\n<td>Calculates the apparent kurtosis coefficient (AKC) in each</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">color_fa</span></code>()</td>\n<td>Color fractional anisotropy of diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fa</span></code>()</td>\n<td>Fractional anisotropy (FA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ga</span></code>()</td>\n<td>Geodesic anisotropy (GA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.kmax\" title=\"dipy.reconst.dki.DiffusionKurtosisFit.kmax\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">kmax</span></code></a>([sphere,&nbsp;gtol,&nbsp;mask])</td>\n<td>Computes the maximum value of a single voxel kurtosis tensor</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">linearity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code>([b0])</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">md</span></code>()</td>\n<td>Mean diffusitivity (MD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.mk\" title=\"dipy.reconst.dki.DiffusionKurtosisFit.mk\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mk</span></code></a>([min_kurtosis,&nbsp;max_kurtosis])</td>\n<td>Computes mean Kurtosis (MK) from the kurtosis tensor.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mode</span></code>()</td>\n<td>Tensor mode calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code>(sphere)</td>\n<td>The diffusion orientation distribution function (dODF).</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">planarity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.predict\" title=\"dipy.reconst.dki.DiffusionKurtosisFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(gtab[,&nbsp;S0])</td>\n<td>Given a DKI model fit, predict the signal on the vertices of a</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rd</span></code>()</td>\n<td>Radial diffusitivity (RD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.rk\" title=\"dipy.reconst.dki.DiffusionKurtosisFit.rk\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rk</span></code></a>([min_kurtosis,&nbsp;max_kurtosis])</td>\n<td>Radial Kurtosis (RK) of a diffusion kurtosis tensor [R197].</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphericity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code>()</td>\n<td>Trace of the tensor calculated from cached eigenvalues.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a DiffusionKurtosisFit class instance.</p>\n<p>Since DKI is an extension of DTI, class instance is defined as subclass\nof the TensorFit from dti.py</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : DiffusionKurtosisModel Class instance</p>\n<blockquote>\n<div><p>Class instance containing the Diffusion Kurtosis Model for the fit</p>\n</div></blockquote>\n<p><strong>model_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote class=\"last\">\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisFit.ak\">\n<code class=\"descname\">ak</code><span class=\"sig-paren\">(</span><em>min_kurtosis=-0.42857142857142855</em>, <em>max_kurtosis=10</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.ak\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Axial Kurtosis (AK) of a diffusion kurtosis tensor <a class=\"reference internal\" href=\"#r187\" id=\"id139\">[R187]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, axial\nkurtosis values that are smaller than <cite>min_kurtosis</cite> are replaced\nwith -3./7 (theoretical kurtosis limit\nfor regions that consist of water confined to spherical pores <a class=\"reference internal\" href=\"#r188\" id=\"id140\">[R188]</a>)</p>\n</div></blockquote>\n<p><strong>max_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, axial\nkurtosis values that are larger than <cite>max_kurtosis</cite> are replaced\nwith <cite>max_kurtosis</cite>. Default = 10</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ak</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated AK.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r187\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R187]</td><td><em>(<a class=\"fn-backref\" href=\"#id139\">1</a>, <a class=\"fn-backref\" href=\"#id141\">2</a>)</em> Tabesh, A., Jensen, J.H., Ardekani, B.A., Helpern, J.A., 2011.\nEstimation of tensors and tensor-derived measures in diffusional\nkurtosis imaging. Magn Reson Med. 65(3), 823-836</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r188\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R188]</td><td><em>(<a class=\"fn-backref\" href=\"#id140\">1</a>, <a class=\"fn-backref\" href=\"#id142\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on\nBiomedical Imaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisFit.akc\">\n<code class=\"descname\">akc</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.akc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the apparent kurtosis coefficient (AKC) in each\ndirection on the sphere for each voxel in the data</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere class instance</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>akc</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The estimates of the apparent kurtosis coefficient in every\ndirection on the input sphere</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>For each sphere direction with coordinates <span class=\"math\">\\((n_{1}, n_{2}, n_{3})\\)</span>, the\ncalculation of AKC is done using formula:</p>\n<div class=\"math\">\n\\[AKC(n)=\\frac{MD^{2}}{ADC(n)^{2}}\\sum_{i=1}^{3}\\sum_{j=1}^{3}\n\\sum_{k=1}^{3}\\sum_{l=1}^{3}n_{i}n_{j}n_{k}n_{l}W_{ijkl}\\]</div>\n<p>where <span class=\"math\">\\(W_{ijkl}\\)</span> are the elements of the kurtosis tensor, MD the mean\ndiffusivity and ADC the apparent diffusion coefficent computed as:</p>\n<div class=\"math\">\n\\[ADC(n)=\\sum_{i=1}^{3}\\sum_{j=1}^{3}n_{i}n_{j}D_{ij}\\]</div>\n<p>where <span class=\"math\">\\(D_{ij}\\)</span> are the elements of the diffusion tensor.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisFit.kmax\">\n<code class=\"descname\">kmax</code><span class=\"sig-paren\">(</span><em>sphere='repulsion100'</em>, <em>gtol=1e-05</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.kmax\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the maximum value of a single voxel kurtosis tensor</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere class instance, optional</p>\n<blockquote>\n<div><p>The sphere providing sample directions for the initial search of\nthe maximum value of kurtosis.</p>\n</div></blockquote>\n<p><strong>gtol</strong> : float, optional</p>\n<blockquote>\n<div><p>This input is to refine kurtosis maximum under the precision of the\ndirections sampled on the sphere class instance. The gradient of\nthe convergence procedure must be less than gtol before successful\ntermination. If gtol is None, fiber direction is directly taken\nfrom the initial sampled directions of the given sphere object</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>max_value</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>kurtosis tensor maximum value</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisFit.kt\">\n<code class=\"descname\">kt</code><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.kt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the 15 independent elements of the kurtosis tensor as an array</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisFit.mk\">\n<code class=\"descname\">mk</code><span class=\"sig-paren\">(</span><em>min_kurtosis=-0.42857142857142855</em>, <em>max_kurtosis=10</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.mk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes mean Kurtosis (MK) from the kurtosis tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, mean\nkurtosis values that are smaller than <cite>min_kurtosis</cite> are replaced\nwith <cite>min_kurtosis</cite>. Default = -3./7 (theoretical kurtosis limit\nfor regions that consist of water confined to spherical pores <a class=\"reference internal\" href=\"#r190\" id=\"id143\">[R190]</a>)</p>\n</div></blockquote>\n<p><strong>max_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, mean\nkurtosis values that are larger than <cite>max_kurtosis</cite> are replaced\nwith <cite>max_kurtosis</cite>. Default = 10</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>mk</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated MK.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The MK analytical solution is calculated using the following equation\n<a class=\"reference internal\" href=\"#r189\" id=\"id144\">[R189]</a>:</p>\n<div class=\"math\">\n\\[\\begin{split}MK=F_1(\\lambda_1,\\lambda_2,\\lambda_3)\\hat{W}_{1111}+\nF_1(\\lambda_2,\\lambda_1,\\lambda_3)\\hat{W}_{2222}+\nF_1(\\lambda_3,\\lambda_2,\\lambda_1)\\hat{W}_{3333}+ \\\\\nF_2(\\lambda_1,\\lambda_2,\\lambda_3)\\hat{W}_{2233}+\nF_2(\\lambda_2,\\lambda_1,\\lambda_3)\\hat{W}_{1133}+\nF_2(\\lambda_3,\\lambda_2,\\lambda_1)\\hat{W}_{1122}\\end{split}\\]</div>\n<p>where <span class=\"math\">\\(\\hat{W}_{ijkl}\\)</span> are the components of the <span class=\"math\">\\(W\\)</span> tensor in the\ncoordinates system defined by the eigenvectors of the diffusion tensor\n<span class=\"math\">\\(\\mathbf{D}\\)</span> and</p>\n<div class=\"math\">\n\\[\\begin{split}F_1(\\lambda_1,\\lambda_2,\\lambda_3)=\n\\frac{(\\lambda_1+\\lambda_2+\\lambda_3)^2}\n{18(\\lambda_1-\\lambda_2)(\\lambda_1-\\lambda_3)}\n[\\frac{\\sqrt{\\lambda_2\\lambda_3}}{\\lambda_1}\nR_F(\\frac{\\lambda_1}{\\lambda_2},\\frac{\\lambda_1}{\\lambda_3},1)+\\\\\n\\frac{3\\lambda_1^2-\\lambda_1\\lambda_2-\\lambda_2\\lambda_3-\n\\lambda_1\\lambda_3}\n{3\\lambda_1 \\sqrt{\\lambda_2 \\lambda_3}}\nR_D(\\frac{\\lambda_1}{\\lambda_2},\\frac{\\lambda_1}{\\lambda_3},1)-1 ]\\end{split}\\]</div>\n<p>and</p>\n<div class=\"math\">\n\\[\\begin{split}F_2(\\lambda_1,\\lambda_2,\\lambda_3)=\n\\frac{(\\lambda_1+\\lambda_2+\\lambda_3)^2}\n{3(\\lambda_2-\\lambda_3)^2}\n[\\frac{\\lambda_2+\\lambda_3}{\\sqrt{\\lambda_2\\lambda_3}}\nR_F(\\frac{\\lambda_1}{\\lambda_2},\\frac{\\lambda_1}{\\lambda_3},1)+\\\\\n\\frac{2\\lambda_1-\\lambda_2-\\lambda_3}{3\\sqrt{\\lambda_2 \\lambda_3}}\nR_D(\\frac{\\lambda_1}{\\lambda_2},\\frac{\\lambda_1}{\\lambda_3},1)-2]\\end{split}\\]</div>\n<p>where <span class=\"math\">\\(R_f\\)</span> and <span class=\"math\">\\(R_d\\)</span> are the Carlson&#8217;s elliptic integrals.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r189\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R189]</td><td><em>(<a class=\"fn-backref\" href=\"#id144\">1</a>, <a class=\"fn-backref\" href=\"#id145\">2</a>)</em> Tabesh, A., Jensen, J.H., Ardekani, B.A., Helpern, J.A., 2011.\nEstimation of tensors and tensor-derived measures in diffusional\nkurtosis imaging. Magn Reson Med. 65(3), 823-836</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r190\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R190]</td><td><em>(<a class=\"fn-backref\" href=\"#id143\">1</a>, <a class=\"fn-backref\" href=\"#id146\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on\nBiomedical Imaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a DKI model fit, predict the signal on the vertices of a\ngradient table</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>The gradient table for this prediction</p>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray (optional)</p>\n<blockquote class=\"last\">\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The predicted signal is given by:</p>\n<div class=\"math\">\n\\[S(n,b)=S_{0}e^{-bD(n)+\\frac{1}{6}b^{2}D(n)^{2}K(n)}\\]</div>\n<p><span class=\"math\">\\(\\mathbf{D(n)}\\)</span> and <span class=\"math\">\\(\\mathbf{K(n)}\\)</span> can be computed from the DT and KT\nusing the following equations:</p>\n<div class=\"math\">\n\\[D(n)=\\sum_{i=1}^{3}\\sum_{j=1}^{3}n_{i}n_{j}D_{ij}\\]</div>\n<p>and</p>\n<div class=\"math\">\n\\[K(n)=\\frac{MD^{2}}{D(n)^{2}}\\sum_{i=1}^{3}\\sum_{j=1}^{3}\n\\sum_{k=1}^{3}\\sum_{l=1}^{3}n_{i}n_{j}n_{k}n_{l}W_{ijkl}\\]</div>\n<p>where <span class=\"math\">\\(D_{ij}\\)</span> and <span class=\"math\">\\(W_{ijkl}\\)</span> are the elements of the second-order DT\nand the fourth-order KT tensors, respectively, and <span class=\"math\">\\(MD\\)</span> is the mean\ndiffusivity.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisFit.rk\">\n<code class=\"descname\">rk</code><span class=\"sig-paren\">(</span><em>min_kurtosis=-0.42857142857142855</em>, <em>max_kurtosis=10</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit.rk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radial Kurtosis (RK) of a diffusion kurtosis tensor <a class=\"reference internal\" href=\"#r191\" id=\"id147\">[R191]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, axial\nkurtosis values that are smaller than <cite>min_kurtosis</cite> are replaced\nwith -3./7 (theoretical kurtosis limit\nfor regions that consist of water confined to spherical pores <a class=\"reference internal\" href=\"#r192\" id=\"id148\">[R192]</a>)</p>\n</div></blockquote>\n<p><strong>max_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, axial\nkurtosis values that are larger than <cite>max_kurtosis</cite> are replaced\nwith <cite>max_kurtosis</cite>. Default = 10</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rk</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated RK.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RK is calculated with the following equation:</p>\n<div class=\"math\">\n\\[K_{\\bot} = G_1(\\lambda_1,\\lambda_2,\\lambda_3)\\hat{W}_{2222} +\n           G_1(\\lambda_1,\\lambda_3,\\lambda_2)\\hat{W}_{3333} +\n           G_2(\\lambda_1,\\lambda_2,\\lambda_3)\\hat{W}_{2233}\\]</div>\n<p>where:</p>\n<div class=\"math\">\n\\[G_1(\\lambda_1,\\lambda_2,\\lambda_3)=\n\\frac{(\\lambda_1+\\lambda_2+\\lambda_3)^2}{18\\lambda_2(\\lambda_2-\n\\lambda_3)} \\left (2\\lambda_2 +\n\\frac{\\lambda_3^2-3\\lambda_2\\lambda_3}{\\sqrt{\\lambda_2\\lambda_3}}\n\\right)\\]</div>\n<p>and</p>\n<div class=\"math\">\n\\[G_2(\\lambda_1,\\lambda_2,\\lambda_3)=\n\\frac{(\\lambda_1+\\lambda_2+\\lambda_3)^2}{(\\lambda_2-\\lambda_3)^2}\n\\left ( \\frac{\\lambda_2+\\lambda_3}{\\sqrt{\\lambda_2\\lambda_3}}-2\n\\right )\\]</div>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r191\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R191]</td><td><em>(<a class=\"fn-backref\" href=\"#id147\">1</a>, <a class=\"fn-backref\" href=\"#id149\">2</a>)</em> Tabesh, A., Jensen, J.H., Ardekani, B.A., Helpern, J.A., 2011.\nEstimation of tensors and tensor-derived measures in diffusional\nkurtosis imaging. Magn Reson Med. 65(3), 823-836</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r192\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R192]</td><td><em>(<a class=\"fn-backref\" href=\"#id148\">1</a>, <a class=\"fn-backref\" href=\"#id150\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on\nBiomedical Imaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"diffusionkurtosismodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisModel\" title=\"dipy.reconst.dki.DiffusionKurtosisModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">DiffusionKurtosisModel</span></code></a><a class=\"headerlink\" href=\"#diffusionkurtosismodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">DiffusionKurtosisModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='WLS'</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>Class for the Diffusion Kurtosis Model</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisModel.fit\" title=\"dipy.reconst.dki.DiffusionKurtosisModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method of the DKI model class</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisModel.predict\" title=\"dipy.reconst.dki.DiffusionKurtosisModel.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(dki_params[,&nbsp;S0])</td>\n<td>Predict a signal for this DKI model class instance given parameters.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='WLS'</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Diffusion Kurtosis Tensor Model [1]</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable class instance</p>\n<p><strong>fit_method</strong> : str or callable</p>\n<blockquote>\n<div><p>str can be one of the following:\n&#8216;OLS&#8217; or &#8216;ULLS&#8217; for ordinary least squares</p>\n<blockquote>\n<div><p>dki.ols_fit_dki</p>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>&#8216;WLS&#8217; or &#8216;UWLLS&#8217; for weighted ordinary least squares</dt>\n<dd><p class=\"first last\">dki.wls_fit_dki</p>\n</dd>\n<dt>callable has to have the signature:</dt>\n<dd><p class=\"first last\">fit_method(design_matrix, data, <a href=\"#id151\"><span class=\"problematic\" id=\"id152\">*</span></a>args, <a href=\"#id153\"><span class=\"problematic\" id=\"id154\">**</span></a>kwargs)</p>\n</dd>\n</dl>\n</div></blockquote>\n<p><strong>args, kwargs</strong> : arguments and key-word arguments passed to the</p>\n<blockquote class=\"last\">\n<div><p>fit_method. See dki.ols_fit_dki, dki.wls_fit_dki for details</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method of the DKI model class</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array</p>\n<blockquote>\n<div><p>The measured signal from one voxel.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>A boolean array used to mark the coordinates in the data that\nshould be analyzed that has the shape data.shape[-1]</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.DiffusionKurtosisModel.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.DiffusionKurtosisModel.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict a signal for this DKI model class instance given\nparameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray (optional)</p>\n<blockquote class=\"last\">\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id156\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dki.ReconstModel\" title=\"dipy.reconst.dki.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstModel</span></code></a><a class=\"headerlink\" href=\"#id156\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dki.ReconstModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">ReconstModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.ReconstModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class for signal reconstruction models</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.ReconstModel.fit\" title=\"dipy.reconst.dki.ReconstModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.ReconstModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.ReconstModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialization of the abstract class for signal reconstruction models</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gtab</strong> : GradientTable class instance</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.ReconstModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.ReconstModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"tensorfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit\" title=\"dipy.reconst.dki.TensorFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">TensorFit</span></code></a><a class=\"headerlink\" href=\"#tensorfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dki.TensorFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">TensorFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em>, <em>model_S0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.S0_hat\" title=\"dipy.reconst.dki.TensorFit.S0_hat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">S0_hat</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.directions\" title=\"dipy.reconst.dki.TensorFit.directions\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directions</span></code></a></td>\n<td>For tracking - return the primary direction in each voxel</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.evals\" title=\"dipy.reconst.dki.TensorFit.evals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evals</span></code></a></td>\n<td>Returns the eigenvalues of the tensor as an array</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.evecs\" title=\"dipy.reconst.dki.TensorFit.evecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evecs</span></code></a></td>\n<td>Returns the eigenvectors of the tensor as an array, columnwise</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.quadratic_form\" title=\"dipy.reconst.dki.TensorFit.quadratic_form\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quadratic_form</span></code></a></td>\n<td>Calculates the 3x3 diffusion tensor for each voxel</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.shape\" title=\"dipy.reconst.dki.TensorFit.shape\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.ad\" title=\"dipy.reconst.dki.TensorFit.ad\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ad</span></code></a>()</td>\n<td>Axial diffusivity (AD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.adc\" title=\"dipy.reconst.dki.TensorFit.adc\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">adc</span></code></a>(sphere)</td>\n<td>Calculate the apparent diffusion coefficient (ADC) in each direction on</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.color_fa\" title=\"dipy.reconst.dki.TensorFit.color_fa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">color_fa</span></code></a>()</td>\n<td>Color fractional anisotropy of diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.fa\" title=\"dipy.reconst.dki.TensorFit.fa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fa</span></code></a>()</td>\n<td>Fractional anisotropy (FA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.ga\" title=\"dipy.reconst.dki.TensorFit.ga\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ga</span></code></a>()</td>\n<td>Geodesic anisotropy (GA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.linearity\" title=\"dipy.reconst.dki.TensorFit.linearity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">linearity</span></code></a>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.lower_triangular\" title=\"dipy.reconst.dki.TensorFit.lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code></a>([b0])</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.md\" title=\"dipy.reconst.dki.TensorFit.md\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">md</span></code></a>()</td>\n<td>Mean diffusitivity (MD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.mode\" title=\"dipy.reconst.dki.TensorFit.mode\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mode</span></code></a>()</td>\n<td>Tensor mode calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.odf\" title=\"dipy.reconst.dki.TensorFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>The diffusion orientation distribution function (dODF).</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.planarity\" title=\"dipy.reconst.dki.TensorFit.planarity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">planarity</span></code></a>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.predict\" title=\"dipy.reconst.dki.TensorFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(gtab[,&nbsp;S0,&nbsp;step])</td>\n<td>Given a model fit, predict the signal on the vertices of a sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.rd\" title=\"dipy.reconst.dki.TensorFit.rd\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rd</span></code></a>()</td>\n<td>Radial diffusitivity (RD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.sphericity\" title=\"dipy.reconst.dki.TensorFit.sphericity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphericity</span></code></a>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.TensorFit.trace\" title=\"dipy.reconst.dki.TensorFit.trace\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code></a>()</td>\n<td>Trace of the tensor calculated from cached eigenvalues.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em>, <em>model_S0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a TensorFit class instance.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki.TensorFit.S0_hat\">\n<code class=\"descname\">S0_hat</code><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.S0_hat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.ad\">\n<code class=\"descname\">ad</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.ad\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Axial diffusivity (AD) calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ad</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated AD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[AD = \\lambda_1\\]</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.adc\">\n<code class=\"descname\">adc</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.adc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the apparent diffusion coefficient (ADC) in each direction on\nthe sphere for each voxel in the data</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere class instance</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>adc</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The estimates of the apparent diffusion coefficient in every\ndirection on the input sphere</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The calculation of ADC, relies on the following relationship:</p>\n<div class=\"math\">\n\\[ADC = \\vec{b} Q \\vec{b}^T\\]</div>\n<p>Where Q is the quadratic form of the tensor.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.color_fa\">\n<code class=\"descname\">color_fa</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.color_fa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Color fractional anisotropy of diffusion tensor</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki.TensorFit.directions\">\n<code class=\"descname\">directions</code><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>For tracking - return the primary direction in each voxel</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki.TensorFit.evals\">\n<code class=\"descname\">evals</code><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.evals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the eigenvalues of the tensor as an array</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki.TensorFit.evecs\">\n<code class=\"descname\">evecs</code><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.evecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the eigenvectors of the tensor as an array, columnwise</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.fa\">\n<code class=\"descname\">fa</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.fa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fractional anisotropy (FA) calculated from cached eigenvalues.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.ga\">\n<code class=\"descname\">ga</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.ga\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Geodesic anisotropy (GA) calculated from cached eigenvalues.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.linearity\">\n<code class=\"descname\">linearity</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.linearity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>linearity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated linearity of the diffusion tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id157\">[1]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Linearity is calculated with the following equation:</p>\n<div class=\"math\">\n\\[Linearity =\n\\frac{\\lambda_1-\\lambda_2}{\\lambda_1+\\lambda_2+\\lambda_3}\\]</div>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz</dt>\n<dd>F., &#8220;Geometrical diffusion measures for MRI from tensor basis\nanalysis&#8221; in Proc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.lower_triangular\">\n<code class=\"descname\">lower_triangular</code><span class=\"sig-paren\">(</span><em>b0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.md\">\n<code class=\"descname\">md</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.md\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Mean diffusitivity (MD) calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>md</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated MD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>MD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[MD = \\frac{\\lambda_1+\\lambda_2+\\lambda_3}{3}\\]</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.mode\">\n<code class=\"descname\">mode</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.mode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Tensor mode calculated from cached eigenvalues.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The diffusion orientation distribution function (dODF). This is an\nestimate of the diffusion distance in each direction</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere class instance.</p>\n<blockquote>\n<div><p>The dODF is calculated in the vertices of this input.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>odf</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The diffusion distance in every direction of the sphere in every\nvoxel in the input data.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>This is based on equation 3 in <a class=\"reference internal\" href=\"#id360\" id=\"id158\">[Aganj2010]</a>. To re-derive it from\nscratch, follow steps in <a class=\"reference internal\" href=\"#id361\" id=\"id159\">[Descoteaux2008]</a>, Section 7.9 Equation\n7.24 but with an <span class=\"math\">\\(r^2\\)</span> term in the integral.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"aganj2010\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Aganj2010]</td><td>Aganj, I., Lenglet, C., Sapiro, G., Yacoub, E., Ugurbil,\nK., &amp; Harel, N. (2010). Reconstruction of the orientation\ndistribution function in single- and multiple-shell q-ball imaging\nwithin constant solid angle. Magnetic Resonance in Medicine, 64(2),\n554-566. doi:DOI: 10.1002/mrm.22365</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"descoteaux2008\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Descoteaux2008]</td><td>Descoteaux, M. (2008). PhD Thesis: High Angular\nResolution Diffusion MRI: from Local Estimation to Segmentation and\nTractography. <a class=\"reference external\" href=\"ftp://ftp-sop.inria.fr/athena/Publications/PhDs/descoteaux_thesis.pdf\">ftp://ftp-sop.inria.fr/athena/Publications/PhDs/descoteaux_thesis.pdf</a></td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.planarity\">\n<code class=\"descname\">planarity</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.planarity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sphericity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated sphericity of the diffusion tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id160\">[1]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz</dt>\n<dd>F., &#8220;Geometrical diffusion measures for MRI from tensor basis\nanalysis&#8221; in Proc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>S0=None</em>, <em>step=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a model fit, predict the signal on the vertices of a sphere</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>This encodes the directions for which a prediction is made</p>\n</div></blockquote>\n<p><strong>S0</strong> : float array</p>\n<blockquote>\n<div><p>The mean non-diffusion weighted signal in each voxel. Default:\nThe fitted S0 value in all voxels if it was fitted. Otherwise 1 in\nall voxels.</p>\n</div></blockquote>\n<p><strong>step</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>The chunk size as a number of voxels. Optional parameter with\ndefault value 10,000.</p>\n<p>In order to increase speed of processing, tensor fitting is done\nsimultaneously over many voxels. This parameter sets the number of\nvoxels that will be fit at once in each iteration. A larger step\nvalue should speed things up, but it will also take up more memory.\nIt is advisable to keep an eye on memory consumption as this value\nis increased.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The predicted signal is given by:</p>\n<div class=\"math\">\n\\[S(\\theta, b) = S_0 * e^{-b ADC}\\]</div>\n<p>Where:\n.. math</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ADC</span> <span class=\"o\">=</span> \\<span class=\"n\">theta</span> <span class=\"n\">Q</span> \\<span class=\"n\">theta</span><span class=\"o\">^</span><span class=\"n\">T</span>\n</pre></div>\n</div>\n<p><span class=\"math\">\\(\\theta\\)</span> is a unit vector pointing at any direction on the sphere for\nwhich a signal is to be predicted and <span class=\"math\">\\(b\\)</span> is the b value provided in\nthe GradientTable input for that direction</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki.TensorFit.quadratic_form\">\n<code class=\"descname\">quadratic_form</code><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.quadratic_form\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the 3x3 diffusion tensor for each voxel</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.rd\">\n<code class=\"descname\">rd</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.rd\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radial diffusitivity (RD) calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rd</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated RD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[RD = \\frac{\\lambda_2 + \\lambda_3}{2}\\]</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki.TensorFit.shape\">\n<code class=\"descname\">shape</code><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.sphericity\">\n<code class=\"descname\">sphericity</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.sphericity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sphericity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated sphericity of the diffusion tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id161\">[1]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz</dt>\n<dd>F., &#8220;Geometrical diffusion measures for MRI from tensor basis\nanalysis&#8221; in Proc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.TensorFit.trace\">\n<code class=\"descname\">trace</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.TensorFit.trace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Trace of the tensor calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>trace</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated trace.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The trace is calculated with the following equation:</p>\n<div class=\"math\">\n\\[trace = \\lambda_1 + \\lambda_2 + \\lambda_3\\]</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id162\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dki.range\" title=\"dipy.reconst.dki.range\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></code></a><a class=\"headerlink\" href=\"#id162\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dki.range\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">range</code><span class=\"sig-paren\">(</span><em>stop</em><span class=\"sig-paren\">)</span> &#x2192; range object<a class=\"headerlink\" href=\"#dipy.reconst.dki.range\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>range(start, stop[, step]) -&gt; range object</p>\n<p>Return an object that produces a sequence of integers from start (inclusive)\nto stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.\nstart defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.\nThese are exactly the valid indices for a list of 4 elements.\nWhen step is given, it specifies the increment (or decrement).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.range.count\" title=\"dipy.reconst.dki.range.count\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">count</span></code></a>(...)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki.range.index\" title=\"dipy.reconst.dki.range.index\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">index</span></code></a>((value,&nbsp;[start,&nbsp;...)</td>\n<td>Raise ValueError if the value is not present.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.range.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.range.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.range.count\">\n<code class=\"descname\">count</code><span class=\"sig-paren\">(</span><em>value</em><span class=\"sig-paren\">)</span> &#x2192; integer -- return number of occurrences of value<a class=\"headerlink\" href=\"#dipy.reconst.dki.range.count\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki.range.index\">\n<code class=\"descname\">index</code><span class=\"sig-paren\">(</span><em>value</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>stop</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"sig-paren\">)</span> &#x2192; integer -- return index of value.<a class=\"headerlink\" href=\"#dipy.reconst.dki.range.index\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raise ValueError if the value is not present.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki.range.start\">\n<code class=\"descname\">start</code><a class=\"headerlink\" href=\"#dipy.reconst.dki.range.start\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki.range.step\">\n<code class=\"descname\">step</code><a class=\"headerlink\" href=\"#dipy.reconst.dki.range.step\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki.range.stop\">\n<code class=\"descname\">stop</code><a class=\"headerlink\" href=\"#dipy.reconst.dki.range.stop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"wcons\">\n<h3>Wcons<a class=\"headerlink\" href=\"#wcons\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.Wcons\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">Wcons</code><span class=\"sig-paren\">(</span><em>k_elements</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.Wcons\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct the full 4D kurtosis tensors from its 15 independent\nelements</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>k_elements</strong> : (15,)</p>\n<blockquote>\n<div><p>elements of the kurtosis tensor in the following order:</p>\n<div class=\"math\">\n\\[\\]</div>\n</div></blockquote>\n<p><strong>begin{matrix} ( &amp; W_{xxxx} &amp; W_{yyyy} &amp; W_{zzzz} &amp; W_{xxxy} &amp; W_{xxxz}</strong> :</p>\n<blockquote>\n<div><p>&amp; ... \\\n&amp; W_{xyyy} &amp; W_{yyyz} &amp; W_{xzzz} &amp; W_{yzzz} &amp; W_{xxyy}\n&amp; ... \\\n&amp; W_{xxzz} &amp; W_{yyzz} &amp; W_{xxyz} &amp; W_{xyyz} &amp; W_{xyzz}\n&amp; &amp; )end{matrix}</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>W</strong> : array(3, 3, 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>Full 4D kurtosis tensor</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"wrotate\">\n<h3>Wrotate<a class=\"headerlink\" href=\"#wrotate\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.Wrotate\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">Wrotate</code><span class=\"sig-paren\">(</span><em>kt</em>, <em>Basis</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.Wrotate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Rotate a kurtosis tensor from the standard Cartesian coordinate system\nto another coordinate system basis</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>kt</strong> : (15,)</p>\n<blockquote>\n<div><p>Vector with the 15 independent elements of the kurtosis tensor</p>\n</div></blockquote>\n<p><strong>Basis</strong> : array (3, 3)</p>\n<blockquote>\n<div><p>Vectors of the basis column-wise oriented</p>\n</div></blockquote>\n<p><strong>inds</strong> : array(m, 4) (optional)</p>\n<blockquote>\n<div><p>Array of vectors containing the four indexes of m specific elements of\nthe rotated kurtosis tensor. If not specified all 15 elements of the\nrotated kurtosis tensor are computed.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>Wrot</strong> : array (m,) or (15,)</p>\n<blockquote>\n<div><p>Vector with the m independent elements of the rotated kurtosis tensor.\nIf &#8216;indices&#8217; is not specified all 15 elements of the rotated kurtosis\ntensor are computed.</p>\n</div></blockquote>\n<p><strong>Note</strong> :</p>\n<p><strong>&#8212;&#8212;</strong> :</p>\n<p><strong>KT elements are assumed to be ordered as follows:</strong> :</p>\n<p><strong>.. math::</strong> :</p>\n<p><strong>begin{matrix} ( &amp; W_{xxxx} &amp; W_{yyyy} &amp; W_{zzzz} &amp; W_{xxxy} &amp; W_{xxxz}</strong> :</p>\n<blockquote class=\"last\">\n<div><p>&amp; ... \\\n&amp; W_{xyyy} &amp; W_{yyyz} &amp; W_{xzzz} &amp; W_{yzzz} &amp; W_{xxyy}\n&amp; ... \\\n&amp; W_{xxzz} &amp; W_{yyzz} &amp; W_{xxyz} &amp; W_{xyyz} &amp; W_{xyzz}\n&amp; &amp; )end{matrix}</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<p>[1] Hui ES, Cheung MM, Qi L, Wu EX, 2008. Towards better MR\ncharacterization of neural tissues using directional diffusion kurtosis\nanalysis. Neuroimage 42(1): 122-34</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"wrotate-element\">\n<h3>Wrotate_element<a class=\"headerlink\" href=\"#wrotate-element\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.Wrotate_element\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">Wrotate_element</code><span class=\"sig-paren\">(</span><em>kt</em>, <em>indi</em>, <em>indj</em>, <em>indk</em>, <em>indl</em>, <em>B</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.Wrotate_element\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the the specified index element of a kurtosis tensor rotated\nto the coordinate system basis B.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>kt</strong> : ndarray (x, y, z, 15) or (n, 15)</p>\n<blockquote>\n<div><p>Array containing the 15 independent elements of the kurtosis tensor</p>\n</div></blockquote>\n<p><strong>indi</strong> : int</p>\n<blockquote>\n<div><p>Rotated kurtosis tensor element index i (0 for x, 1 for y, 2 for z)</p>\n</div></blockquote>\n<p><strong>indj</strong> : int</p>\n<blockquote>\n<div><p>Rotated kurtosis tensor element index j (0 for x, 1 for y, 2 for z)</p>\n</div></blockquote>\n<p><strong>indk</strong> : int</p>\n<blockquote>\n<div><p>Rotated kurtosis tensor element index k (0 for x, 1 for y, 2 for z)</p>\n</div></blockquote>\n<p><strong>indl: int</strong> :</p>\n<blockquote>\n<div><p>Rotated kurtosis tensor element index l (0 for x, 1 for y, 2 for z)</p>\n</div></blockquote>\n<p><strong>B: array (x, y, z, 3, 3) or (n, 15)</strong> :</p>\n<blockquote>\n<div><p>Vectors of the basis column-wise oriented</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>Wre</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>rotated kurtosis tensor element of index ind_i, ind_j, ind_k, ind_l</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<p>[1] Hui ES, Cheung MM, Qi L, Wu EX, 2008. Towards better MR\ncharacterization of neural tissues using directional diffusion kurtosis\nanalysis. Neuroimage 42(1): 122-34</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"apparent-kurtosis-coef\">\n<h3>apparent_kurtosis_coef<a class=\"headerlink\" href=\"#apparent-kurtosis-coef\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.apparent_kurtosis_coef\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">apparent_kurtosis_coef</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>sphere</em>, <em>min_diffusivity=0</em>, <em>min_kurtosis=-0.42857142857142855</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.apparent_kurtosis_coef\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the apparent kurtosis coefficient (AKC) in each direction\nof a sphere <a class=\"reference internal\" href=\"#r199\" id=\"id163\">[R199]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvectors respectively</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>sphere</strong> : a Sphere class instance</p>\n<blockquote>\n<div><p>The AKC will be calculated for each of the vertices in the sphere</p>\n</div></blockquote>\n<p><strong>min_diffusivity</strong> : float (optional)</p>\n<blockquote>\n<div><p>Because negative eigenvalues are not physical and small eigenvalues\ncause quite a lot of noise in diffusion-based metrics, diffusivity\nvalues smaller than <cite>min_diffusivity</cite> are replaced with\n<cite>min_diffusivity</cite>. Default = 0</p>\n</div></blockquote>\n<p><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>Because high-amplitude negative values of kurtosis are not physicaly\nand biologicaly pluasible, and these cause artefacts in\nkurtosis-based measures, directional kurtosis values smaller than\n<cite>min_kurtosis</cite> are replaced with <cite>min_kurtosis</cite>. Default = -3./7\n(theoretical kurtosis limit for regions that consist of water confined\nto spherical pores <a class=\"reference internal\" href=\"#r200\" id=\"id164\">[R200]</a>)</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>akc</strong> : ndarray (x, y, z, g) or (n, g)</p>\n<blockquote class=\"last\">\n<div><p>Apparent kurtosis coefficient (AKC) for all g directions of a sphere.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>For each sphere direction with coordinates <span class=\"math\">\\((n_{1}, n_{2}, n_{3})\\)</span>, the\ncalculation of AKC is done using formula <a class=\"reference internal\" href=\"#r199\" id=\"id165\">[R199]</a>:</p>\n<div class=\"math\">\n\\[AKC(n)=\\frac{MD^{2}}{ADC(n)^{2}}\\sum_{i=1}^{3}\\sum_{j=1}^{3}\n\\sum_{k=1}^{3}\\sum_{l=1}^{3}n_{i}n_{j}n_{k}n_{l}W_{ijkl}\\]</div>\n<p>where <span class=\"math\">\\(W_{ijkl}\\)</span> are the elements of the kurtosis tensor, MD the mean\ndiffusivity and ADC the apparent diffusion coefficent computed as:</p>\n<div class=\"math\">\n\\[ADC(n)=\\sum_{i=1}^{3}\\sum_{j=1}^{3}n_{i}n_{j}D_{ij}\\]</div>\n<p>where <span class=\"math\">\\(D_{ij}\\)</span> are the elements of the diffusion tensor.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r199\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R199]</td><td><em>(<a class=\"fn-backref\" href=\"#id163\">1</a>, <a class=\"fn-backref\" href=\"#id165\">2</a>, <a class=\"fn-backref\" href=\"#id166\">3</a>)</em> Neto Henriques R, Correia MM, Nunes RG, Ferreira HA (2015).\nExploring the 3D geometry of the diffusion kurtosis tensor -\nImpact on the development of robust tractography procedures and\nnovel biomarkers, NeuroImage 111: 85-99</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r200\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R200]</td><td><em>(<a class=\"fn-backref\" href=\"#id164\">1</a>, <a class=\"fn-backref\" href=\"#id167\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on\nBiomedical Imaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"axial-kurtosis\">\n<h3>axial_kurtosis<a class=\"headerlink\" href=\"#axial-kurtosis\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.axial_kurtosis\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">axial_kurtosis</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>min_kurtosis=-0.42857142857142855</em>, <em>max_kurtosis=10</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.axial_kurtosis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes axial Kurtosis (AK) from the kurtosis tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, axial\nkurtosis values that are smaller than <cite>min_kurtosis</cite> are replaced with\n<cite>min_kurtosis</cite>. Default = -3./7 (theoretical kurtosis limit for regions\nthat consist of water confined to spherical pores <a class=\"reference internal\" href=\"#r201\" id=\"id168\">[R201]</a>)</p>\n</div></blockquote>\n<p><strong>max_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, axial\nkurtosis values that are larger than <cite>max_kurtosis</cite> are replaced with\n<cite>max_kurtosis</cite>. Default = 10</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ak</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated AK.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r201\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R201]</td><td><em>(<a class=\"fn-backref\" href=\"#id168\">1</a>, <a class=\"fn-backref\" href=\"#id169\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on\nBiomedical Imaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"carlson-rd\">\n<h3>carlson_rd<a class=\"headerlink\" href=\"#carlson-rd\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.carlson_rd\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">carlson_rd</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>z</em>, <em>errtol=0.0001</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.carlson_rd\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the Carlson&#8217;s incomplete elliptic integral of the second kind\ndefined as:</p>\n<div class=\"math\">\n\\[R_D = \\frac{3}{2} \\int_{0}^{\\infty} (t+x)^{-\\frac{1}{2}}\n(t+y)^{-\\frac{1}{2}}(t+z)  ^{-\\frac{3}{2}}\\]</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : ndarray</p>\n<blockquote>\n<div><p>First independent variable of the integral.</p>\n</div></blockquote>\n<p><strong>y</strong> : ndarray</p>\n<blockquote>\n<div><p>Second independent variable of the integral.</p>\n</div></blockquote>\n<p><strong>z</strong> : ndarray</p>\n<blockquote>\n<div><p>Third independent variable of the integral.</p>\n</div></blockquote>\n<p><strong>errtol</strong> : float</p>\n<blockquote>\n<div><p>Error tolerance. Integral is computed with relative error less in\nmagnitude than the defined value</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>RD</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Value of the incomplete second order elliptic integral</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"carlson-rf\">\n<h3>carlson_rf<a class=\"headerlink\" href=\"#carlson-rf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.carlson_rf\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">carlson_rf</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>z</em>, <em>errtol=0.0003</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.carlson_rf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the Carlson&#8217;s incomplete elliptic integral of the first kind\ndefined as:</p>\n<div class=\"math\">\n\\[R_F = \\frac{1}{2} \\int_{0}^{\\infty} \\left [(t+x)(t+y)(t+z)  \\right ]\n^{-\\frac{1}{2}}dt\\]</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : ndarray</p>\n<blockquote>\n<div><p>First independent variable of the integral.</p>\n</div></blockquote>\n<p><strong>y</strong> : ndarray</p>\n<blockquote>\n<div><p>Second independent variable of the integral.</p>\n</div></blockquote>\n<p><strong>z</strong> : ndarray</p>\n<blockquote>\n<div><p>Third independent variable of the integral.</p>\n</div></blockquote>\n<p><strong>errtol</strong> : float</p>\n<blockquote>\n<div><p>Error tolerance. Integral is computed with relative error less in\nmagnitude than the defined value</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>RF</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Value of the incomplete first order elliptic integral</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r202\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id170\">[R202]</a></td><td>Carlson, B.C., 1994. Numerical computation of real or complex\nelliptic integrals. arXiv:math/9409227 [math.CA]</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id171\">\n<h3>cart2sphere<a class=\"headerlink\" href=\"#id171\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.cart2sphere\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">cart2sphere</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.cart2sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></p>\n<p>See doc for <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> for angle conventions and derivation\nof the formulae.</p>\n<p><span class=\"math\">\\(0\\le\\theta\\mathrm{(theta)}\\le\\pi\\)</span> and <span class=\"math\">\\(-\\pi\\le\\phi\\mathrm{(phi)}\\le\\pi\\)</span></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>x coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>y</strong> : array_like</p>\n<blockquote>\n<div><p>y coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array_like</p>\n<blockquote>\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> : array</p>\n<blockquote>\n<div><p>radius</p>\n</div></blockquote>\n<p><strong>theta</strong> : array</p>\n<blockquote>\n<div><p>inclination (polar) angle</p>\n</div></blockquote>\n<p><strong>phi</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>azimuth angle</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"check-multi-b\">\n<h3>check_multi_b<a class=\"headerlink\" href=\"#check-multi-b\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.check_multi_b\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">check_multi_b</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>n_bvals</em>, <em>non_zero=True</em>, <em>bmag=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.check_multi_b\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if you have enough different b-values in your gradient table</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable class instance.</p>\n<p><strong>n_bvals</strong> : int</p>\n<blockquote>\n<div><p>The number of different b-values you are checking for.</p>\n</div></blockquote>\n<p><strong>non_zero</strong> : bool</p>\n<blockquote>\n<div><p>Whether to check only non-zero bvalues. In this case, we will require\nat least <cite>n_bvals</cite> <em>non-zero</em> b-values (where non-zero is defined\ndepending on the <cite>gtab</cite> object&#8217;s <cite>b0_threshold</cite> attribute)</p>\n</div></blockquote>\n<p><strong>bmag</strong> : int</p>\n<blockquote>\n<div><p>The order of magnitude of the b-values used. The function will\nnormalize the b-values relative <span class=\"math\">\\(10^{bmag - 1}\\)</span>. Default: derive this\nvalue from the maximal b-value provided: <span class=\"math\">\\(bmag=log_{10}(max(bvals))\\)</span>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>bool</strong> : Whether there are at least <cite>n_bvals</cite> different b-values in the</p>\n<p class=\"last\"><strong>gradient table used.</strong> :</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"decompose-tensor\">\n<h3>decompose_tensor<a class=\"headerlink\" href=\"#decompose-tensor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.decompose_tensor\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">decompose_tensor</code><span class=\"sig-paren\">(</span><em>tensor</em>, <em>min_diffusivity=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.decompose_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns eigenvalues and eigenvectors given a diffusion tensor</p>\n<p>Computes tensor eigen decomposition to calculate eigenvalues and\neigenvectors (Basser et al., 1994a).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : array (..., 3, 3)</p>\n<blockquote>\n<div><p>Hermitian matrix representing a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>min_diffusivity</strong> : float</p>\n<blockquote>\n<div><p>Because negative eigenvalues are not physical and small eigenvalues,\nmuch smaller than the diffusion weighting, cause quite a lot of noise\nin metrics such as fa, diffusivity values smaller than\n<cite>min_diffusivity</cite> are replaced with <cite>min_diffusivity</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>eigvals</strong> : array (..., 3)</p>\n<blockquote>\n<div><p>Eigenvalues from eigen decomposition of the tensor. Negative\neigenvalues are replaced by zero. Sorted from largest to smallest.</p>\n</div></blockquote>\n<p><strong>eigvecs</strong> : array (..., 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>Associated eigenvectors from eigen decomposition of the tensor.\nEigenvectors are columnar (e.g. eigvecs[..., :, j] is associated with\neigvals[..., j])</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"design-matrix\">\n<h3>design_matrix<a class=\"headerlink\" href=\"#design-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.design_matrix\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">design_matrix</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.design_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs B design matrix for DKI</p>\n<dl class=\"docutils\">\n<dt>gtab <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">GradientTable</span></dt>\n<dd>Measurement directions.</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>B</strong> : array (N, 22)</p>\n<blockquote class=\"last\">\n<div><p>Design matrix or B matrix for the DKI model\nB[j, :] = (Bxx, Bxy, Bzz, Bxz, Byz, Bzz,</p>\n<blockquote>\n<div><p>Bxxxx, Byyyy, Bzzzz, Bxxxy, Bxxxz,\nBxyyy, Byyyz, Bxzzz, Byzzz, Bxxyy,\nBxxzz, Byyzz, Bxxyz, Bxyyz, Bxyzz,\nBlogS0)</p>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"directional-diffusion\">\n<h3>directional_diffusion<a class=\"headerlink\" href=\"#directional-diffusion\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.directional_diffusion\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">directional_diffusion</code><span class=\"sig-paren\">(</span><em>dt</em>, <em>V</em>, <em>min_diffusivity=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.directional_diffusion\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the apparent diffusion coefficient (adc) in each direction\nof a sphere for a single voxel <a class=\"reference internal\" href=\"#r203\" id=\"id172\">[R203]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dt</strong> : array (6,)</p>\n<blockquote>\n<div><p>elements of the diffusion tensor of the voxel.</p>\n</div></blockquote>\n<p><strong>V</strong> : array (g, 3)</p>\n<blockquote>\n<div><p>g directions of a Sphere in Cartesian coordinates</p>\n</div></blockquote>\n<p><strong>min_diffusivity</strong> : float (optional)</p>\n<blockquote>\n<div><p>Because negative eigenvalues are not physical and small eigenvalues\ncause quite a lot of noise in diffusion-based metrics, diffusivity\nvalues smaller than <cite>min_diffusivity</cite> are replaced with\n<cite>min_diffusivity</cite>. Default = 0</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>adc</strong> : ndarray (g,)</p>\n<blockquote class=\"last\">\n<div><p>Apparent diffusion coefficient (adc) in all g directions of a sphere\nfor a single voxel.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r203\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R203]</td><td><em>(<a class=\"fn-backref\" href=\"#id172\">1</a>, <a class=\"fn-backref\" href=\"#id173\">2</a>)</em> Neto Henriques R, Correia MM, Nunes RG, Ferreira HA (2015).\nExploring the 3D geometry of the diffusion kurtosis tensor -\nImpact on the development of robust tractography procedures and\nnovel biomarkers, NeuroImage 111: 85-99</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"directional-diffusion-variance\">\n<h3>directional_diffusion_variance<a class=\"headerlink\" href=\"#directional-diffusion-variance\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.directional_diffusion_variance\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">directional_diffusion_variance</code><span class=\"sig-paren\">(</span><em>kt</em>, <em>V</em>, <em>min_kurtosis=-0.42857142857142855</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.directional_diffusion_variance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the apparent diffusion variance (adv) in each direction\nof a sphere for a single voxel <a class=\"reference internal\" href=\"#r204\" id=\"id174\">[R204]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dt</strong> : array (6,)</p>\n<blockquote>\n<div><p>elements of the diffusion tensor of the voxel.</p>\n</div></blockquote>\n<p><strong>kt</strong> : array (15,)</p>\n<blockquote>\n<div><p>elements of the kurtosis tensor of the voxel.</p>\n</div></blockquote>\n<p><strong>V</strong> : array (g, 3)</p>\n<blockquote>\n<div><p>g directions of a Sphere in Cartesian coordinates</p>\n</div></blockquote>\n<p><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>Because high-amplitude negative values of kurtosis are not physicaly\nand biologicaly pluasible, and these cause artefacts in\nkurtosis-based measures, directional kurtosis values smaller than\n<cite>min_kurtosis</cite> are replaced with <cite>min_kurtosis</cite>. Default = -3./7\n(theoretical kurtosis limit for regions that consist of water confined\nto spherical pores <a href=\"#id649\"><span class=\"problematic\" id=\"id650\"><span id=\"id175\"></span>[2]_</span></a>)</p>\n</div></blockquote>\n<p><strong>adc</strong> : ndarray(g,) (optional)</p>\n<blockquote>\n<div><p>Apparent diffusion coefficient (adc) in all g directions of a sphere\nfor a single voxel.</p>\n</div></blockquote>\n<p><strong>adv</strong> : ndarray(g,) (optional)</p>\n<blockquote>\n<div><p>Apparent diffusion variance coefficient (advc) in all g directions of\na sphere for a single voxel.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>adv</strong> : ndarray (g,)</p>\n<blockquote class=\"last\">\n<div><p>Apparent diffusion variance (adv) in all g directions of a sphere for\na single voxel.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r204\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R204]</td><td><em>(<a class=\"fn-backref\" href=\"#id174\">1</a>, <a class=\"fn-backref\" href=\"#id176\">2</a>)</em> Neto Henriques R, Correia MM, Nunes RG, Ferreira HA (2015).\nExploring the 3D geometry of the diffusion kurtosis tensor -\nImpact on the development of robust tractography procedures and\nnovel biomarkers, NeuroImage 111: 85-99</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"directional-kurtosis\">\n<h3>directional_kurtosis<a class=\"headerlink\" href=\"#directional-kurtosis\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.directional_kurtosis\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">directional_kurtosis</code><span class=\"sig-paren\">(</span><em>dt</em>, <em>md</em>, <em>kt</em>, <em>V</em>, <em>min_diffusivity=0</em>, <em>min_kurtosis=-0.42857142857142855</em>, <em>adc=None</em>, <em>adv=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.directional_kurtosis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the apparent kurtosis coefficient (akc) in each direction\nof a sphere for a single voxel <a class=\"reference internal\" href=\"#r205\" id=\"id177\">[R205]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dt</strong> : array (6,)</p>\n<blockquote>\n<div><p>elements of the diffusion tensor of the voxel.</p>\n</div></blockquote>\n<p><strong>md</strong> : float</p>\n<blockquote>\n<div><p>mean diffusivity of the voxel</p>\n</div></blockquote>\n<p><strong>kt</strong> : array (15,)</p>\n<blockquote>\n<div><p>elements of the kurtosis tensor of the voxel.</p>\n</div></blockquote>\n<p><strong>V</strong> : array (g, 3)</p>\n<blockquote>\n<div><p>g directions of a Sphere in Cartesian coordinates</p>\n</div></blockquote>\n<p><strong>min_diffusivity</strong> : float (optional)</p>\n<blockquote>\n<div><p>Because negative eigenvalues are not physical and small eigenvalues\ncause quite a lot of noise in diffusion-based metrics, diffusivity\nvalues smaller than <cite>min_diffusivity</cite> are replaced with\n<cite>min_diffusivity</cite>. Default = 0</p>\n</div></blockquote>\n<p><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>Because high-amplitude negative values of kurtosis are not physicaly\nand biologicaly pluasible, and these cause artefacts in\nkurtosis-based measures, directional kurtosis values smaller than\n<cite>min_kurtosis</cite> are replaced with <cite>min_kurtosis</cite>. Default = -3./7\n(theoretical kurtosis limit for regions that consist of water confined\nto spherical pores <a class=\"reference internal\" href=\"#r206\" id=\"id178\">[R206]</a>)</p>\n</div></blockquote>\n<p><strong>adc</strong> : ndarray(g,) (optional)</p>\n<blockquote>\n<div><p>Apparent diffusion coefficient (adc) in all g directions of a sphere\nfor a single voxel.</p>\n</div></blockquote>\n<p><strong>adv</strong> : ndarray(g,) (optional)</p>\n<blockquote>\n<div><p>Apparent diffusion variance (advc) in all g directions of a sphere for\na single voxel.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>akc</strong> : ndarray (g,)</p>\n<blockquote class=\"last\">\n<div><p>Apparent kurtosis coefficient (AKC) in all g directions of a sphere for\na single voxel.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r205\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R205]</td><td><em>(<a class=\"fn-backref\" href=\"#id177\">1</a>, <a class=\"fn-backref\" href=\"#id179\">2</a>)</em> Neto Henriques R, Correia MM, Nunes RG, Ferreira HA (2015).\nExploring the 3D geometry of the diffusion kurtosis tensor -\nImpact on the development of robust tractography procedures and\nnovel biomarkers, NeuroImage 111: 85-99</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r206\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R206]</td><td><em>(<a class=\"fn-backref\" href=\"#id178\">1</a>, <a class=\"fn-backref\" href=\"#id180\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on\nBiomedical Imaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dki-prediction\">\n<h3>dki_prediction<a class=\"headerlink\" href=\"#dki-prediction\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.dki_prediction\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">dki_prediction</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>gtab</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.dki_prediction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict a signal given diffusion kurtosis imaging parameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>gtab <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">a GradientTable class instance</span></dt>\n<dd><p class=\"first last\">The gradient table for this prediction</p>\n</dd>\n<dt>S0 <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">float or ndarray (optional)</span></dt>\n<dd><p class=\"first last\">The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 150</p>\n</dd>\n</dl>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : (..., N) ndarray</p>\n<blockquote>\n<div><blockquote>\n<div><p>Simulated signal based on the DKI model:</p>\n</div></blockquote>\n<div class=\"math\">\n\\[S=S_{0}e^{-bD+\\]</div>\n</div></blockquote>\n<p class=\"last\"><strong>rac{1}{6}b^{2}D^{2}K}</strong> :</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"from-lower-triangular\">\n<h3>from_lower_triangular<a class=\"headerlink\" href=\"#from-lower-triangular\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.from_lower_triangular\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">from_lower_triangular</code><span class=\"sig-paren\">(</span><em>D</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.from_lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a tensor given the six unique tensor elements</p>\n<p>Given the six unique tensor elments (in the order: Dxx, Dxy, Dyy, Dxz, Dyz,\nDzz) returns a 3 by 3 tensor. All elements after the sixth are ignored.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>D</strong> : array_like, (..., &gt;6)</p>\n<blockquote>\n<div><p>Unique elements of the tensors</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : ndarray (..., 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>3 by 3 tensors</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id181\">\n<h3>get_sphere<a class=\"headerlink\" href=\"#id181\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.get_sphere\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">get_sphere</code><span class=\"sig-paren\">(</span><em>name='symmetric362'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.get_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>provide triangulated spheres</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>name</strong> : str</p>\n<blockquote>\n<div><p>which sphere - one of:\n* &#8216;symmetric362&#8217;\n* &#8216;symmetric642&#8217;\n* &#8216;symmetric724&#8217;\n* &#8216;repulsion724&#8217;\n* &#8216;repulsion100&#8217;\n* &#8216;repulsion200&#8217;</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>sphere</strong> : a dipy.core.sphere.Sphere class instance</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric362&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">faces</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">362</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">720</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;not a sphere name&#39;</span><span class=\"p\">)</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n    <span class=\"o\">...</span>\n<span class=\"gr\">DataError</span>: <span class=\"n\">No sphere called &quot;not a sphere name&quot;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"kurtosis-maximum\">\n<h3>kurtosis_maximum<a class=\"headerlink\" href=\"#kurtosis-maximum\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.kurtosis_maximum\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">kurtosis_maximum</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>sphere='repulsion100'</em>, <em>gtol=0.01</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.kurtosis_maximum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes kurtosis maximum value</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eingenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere class instance, optional</p>\n<blockquote>\n<div><p>The sphere providing sample directions for the initial search of the\nmaximal value of kurtosis.</p>\n</div></blockquote>\n<p><strong>gtol</strong> : float, optional</p>\n<blockquote>\n<div><p>This input is to refine kurtosis maximum under the precision of the\ndirections sampled on the sphere class instance. The gradient of the\nconvergence procedure must be less than gtol before successful\ntermination. If gtol is None, fiber direction is directly taken from\nthe initial sampled directions of the given sphere object</p>\n</div></blockquote>\n<p><strong>mask</strong> : ndarray</p>\n<blockquote>\n<div><p>A boolean array used to mark the coordinates in the data that should be\nanalyzed that has the shape dki_params.shape[:-1]</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>max_value</strong> : float</p>\n<blockquote>\n<div><p>kurtosis tensor maximum value</p>\n</div></blockquote>\n<p><strong>max_dir</strong> : array (3,)</p>\n<blockquote class=\"last\">\n<div><p>Cartesian coordinates of the direction of the maximal kurtosis value</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id182\">\n<h3>local_maxima<a class=\"headerlink\" href=\"#id182\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.local_maxima\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">local_maxima</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.local_maxima\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Local maxima of a function evaluated on a discrete set of points.</p>\n<p>If a function is evaluated on some set of points where each pair of\nneighboring points is an edge in edges, find the local maxima.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>odf</strong> : array, 1d, dtype=double</p>\n<blockquote>\n<div><p>The function evaluated on a set of discrete points.</p>\n</div></blockquote>\n<p><strong>edges</strong> : array (N, 2)</p>\n<blockquote>\n<div><p>The set of neighbor relations between the points. Every edge, ie\n<cite>edges[i, :]</cite>, is a pair of neighboring points.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>peak_values</strong> : ndarray</p>\n<blockquote>\n<div><p>Value of odf at a maximum point. Peak values is sorted in descending\norder.</p>\n</div></blockquote>\n<p><strong>peak_indices</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Indices of maximum points. Sorted in the same order as <cite>peak_values</cite> so\n<cite>odf[peak_indices[i]] == peak_values[i]</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"../dipy.core/#module-dipy.core.sphere\" title=\"dipy.core.sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dipy.core.sphere</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"lower-triangular\">\n<h3>lower_triangular<a class=\"headerlink\" href=\"#lower-triangular\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.lower_triangular\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">lower_triangular</code><span class=\"sig-paren\">(</span><em>tensor</em>, <em>b0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the six lower triangular values of the tensor and a dummy variable\nif b0 is not None</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : array_like (..., 3, 3)</p>\n<blockquote>\n<div><p>a collection of 3, 3 diffusion tensors</p>\n</div></blockquote>\n<p><strong>b0</strong> : float</p>\n<blockquote>\n<div><p>if b0 is not none log(b0) is returned as the dummy variable</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>D</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>If b0 is none, then the shape will be (..., 6) otherwise (..., 7)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mean-diffusivity\">\n<h3>mean_diffusivity<a class=\"headerlink\" href=\"#mean-diffusivity\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.mean_diffusivity\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">mean_diffusivity</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.mean_diffusivity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Mean Diffusivity (MD) of a diffusion tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>md</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated MD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>MD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[MD = \\frac{\\lambda_1 + \\lambda_2 + \\lambda_3}{3}\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mean-kurtosis\">\n<h3>mean_kurtosis<a class=\"headerlink\" href=\"#mean-kurtosis\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.mean_kurtosis\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">mean_kurtosis</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>min_kurtosis=-0.42857142857142855</em>, <em>max_kurtosis=3</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.mean_kurtosis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes mean Kurtosis (MK) from the kurtosis tensor <a class=\"reference internal\" href=\"#r207\" id=\"id183\">[R207]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, mean\nkurtosis values that are smaller than <cite>min_kurtosis</cite> are replaced with\n<cite>min_kurtosis</cite>. Default = -3./7 (theoretical kurtosis limit for regions\nthat consist of water confined to spherical pores <a class=\"reference internal\" href=\"#r208\" id=\"id184\">[R208]</a>)</p>\n</div></blockquote>\n<p><strong>max_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, mean\nkurtosis values that are larger than <cite>max_kurtosis</cite> are replaced with\n<cite>max_kurtosis</cite>. Default = 10</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>mk</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated MK.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The MK analytical solution is calculated using the following equation <a class=\"reference internal\" href=\"#r207\" id=\"id185\">[R207]</a>:\n.. math:</p>\n<dl class=\"docutils\">\n<dt>MK=F_1(lambda_1,lambda_2,lambda_3)hat{W}_{1111}+</dt>\n<dd>F_1(lambda_2,lambda_1,lambda_3)hat{W}_{2222}+\nF_1(lambda_3,lambda_2,lambda_1)hat{W}_{3333}+ \\\nF_2(lambda_1,lambda_2,lambda_3)hat{W}_{2233}+\nF_2(lambda_2,lambda_1,lambda_3)hat{W}_{1133}+\nF_2(lambda_3,lambda_2,lambda_1)hat{W}_{1122}</dd>\n</dl>\n<p>where <span class=\"math\">\\(\\hat{W}_{ijkl}\\)</span> are the components of the <span class=\"math\">\\(W\\)</span> tensor in the\ncoordinates system defined by the eigenvectors of the diffusion tensor\n<span class=\"math\">\\(\\mathbf{D}\\)</span> and</p>\n<p>F_1(lambda_1,lambda_2,lambda_3)=\nfrac{(lambda_1+lambda_2+lambda_3)^2}\n{18(lambda_1-lambda_2)(lambda_1-lambda_3)}\n[frac{sqrt{lambda_2lambda_3}}{lambda_1}\nR_F(frac{lambda_1}{lambda_2},frac{lambda_1}{lambda_3},1)+\\\nfrac{3lambda_1^2-lambda_1lambda_2-lambda_2lambda_3-\nlambda_1lambda_3}\n{3lambda_1 sqrt{lambda_2 lambda_3}}\nR_D(frac{lambda_1}{lambda_2},frac{lambda_1}{lambda_3},1)-1 ]</p>\n<p>F_2(lambda_1,lambda_2,lambda_3)=\nfrac{(lambda_1+lambda_2+lambda_3)^2}\n{3(lambda_2-lambda_3)^2}\n[frac{lambda_2+lambda_3}{sqrt{lambda_2lambda_3}}\nR_F(frac{lambda_1}{lambda_2},frac{lambda_1}{lambda_3},1)+\\\nfrac{2lambda_1-lambda_2-lambda_3}{3sqrt{lambda_2 lambda_3}}\nR_D(frac{lambda_1}{lambda_2},frac{lambda_1}{lambda_3},1)-2]</p>\n<p>where <span class=\"math\">\\(R_f\\)</span> and <span class=\"math\">\\(R_d\\)</span> are the Carlson&#8217;s elliptic integrals.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r207\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R207]</td><td><em>(<a class=\"fn-backref\" href=\"#id183\">1</a>, <a class=\"fn-backref\" href=\"#id185\">2</a>, <a class=\"fn-backref\" href=\"#id186\">3</a>)</em> Tabesh, A., Jensen, J.H., Ardekani, B.A., Helpern, J.A., 2011.\nEstimation of tensors and tensor-derived measures in diffusional\nkurtosis imaging. Magn Reson Med. 65(3), 823-836</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r208\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R208]</td><td><em>(<a class=\"fn-backref\" href=\"#id184\">1</a>, <a class=\"fn-backref\" href=\"#id187\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on Biomedical\nImaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id188\">\n<h3>ndindex<a class=\"headerlink\" href=\"#id188\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.ndindex\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">ndindex</code><span class=\"sig-paren\">(</span><em>shape</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape</strong> : tuple of ints</p>\n<blockquote class=\"last\">\n<div><p>The dimensions of the array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"k\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"ols-fit-dki\">\n<h3>ols_fit_dki<a class=\"headerlink\" href=\"#ols-fit-dki\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.ols_fit_dki\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">ols_fit_dki</code><span class=\"sig-paren\">(</span><em>design_matrix</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.ols_fit_dki\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes ordinary least squares (OLS) fit to calculate the diffusion\ntensor and kurtosis tensor using a linear regression diffusion kurtosis\nmodel <a class=\"footnote-reference\" href=\"#id337\" id=\"id189\">[1]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array (g, 22)</p>\n<blockquote>\n<div><p>Design matrix holding the covariants used to solve for the regression\ncoefficients.</p>\n</div></blockquote>\n<p><strong>data</strong> : array (N, g)</p>\n<blockquote>\n<div><p>Data or response variables holding the data. Note that the last\ndimension should contain the data. It makes no copies of data.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : array (N, 27)</p>\n<blockquote class=\"last\">\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.dki.wls_fit_dki\" title=\"dipy.reconst.dki.wls_fit_dki\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">wls_fit_dki</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"radial-kurtosis\">\n<h3>radial_kurtosis<a class=\"headerlink\" href=\"#radial-kurtosis\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.radial_kurtosis\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">radial_kurtosis</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>min_kurtosis=-0.42857142857142855</em>, <em>max_kurtosis=10</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.radial_kurtosis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radial Kurtosis (RK) of a diffusion kurtosis tensor <a class=\"reference internal\" href=\"#r209\" id=\"id191\">[R209]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, radial\nkurtosis values that are smaller than <cite>min_kurtosis</cite> are replaced with\n<cite>min_kurtosis</cite>. Default = -3./7 (theoretical kurtosis limit for regions\nthat consist of water confined to spherical pores <a class=\"reference internal\" href=\"#r210\" id=\"id192\">[R210]</a>)</p>\n</div></blockquote>\n<p><strong>max_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, radial\nkurtosis values that are larger than <cite>max_kurtosis</cite> are replaced with\n<cite>max_kurtosis</cite>. Default = 10</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rk</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated RK.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RK is calculated with the following equation  <a class=\"reference internal\" href=\"#r209\" id=\"id193\">[R209]</a>::\n.. math:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">K_</span><span class=\"p\">{</span>\\<span class=\"n\">bot</span><span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"n\">G_1</span><span class=\"p\">(</span>\\<span class=\"n\">lambda_1</span><span class=\"p\">,</span>\\<span class=\"n\">lambda_2</span><span class=\"p\">,</span>\\<span class=\"n\">lambda_3</span><span class=\"p\">)</span>\\<span class=\"n\">hat</span><span class=\"p\">{</span><span class=\"n\">W</span><span class=\"p\">}</span><span class=\"n\">_</span><span class=\"p\">{</span><span class=\"mi\">2222</span><span class=\"p\">}</span> <span class=\"o\">+</span>\n           <span class=\"n\">G_1</span><span class=\"p\">(</span>\\<span class=\"n\">lambda_1</span><span class=\"p\">,</span>\\<span class=\"n\">lambda_3</span><span class=\"p\">,</span>\\<span class=\"n\">lambda_2</span><span class=\"p\">)</span>\\<span class=\"n\">hat</span><span class=\"p\">{</span><span class=\"n\">W</span><span class=\"p\">}</span><span class=\"n\">_</span><span class=\"p\">{</span><span class=\"mi\">3333</span><span class=\"p\">}</span> <span class=\"o\">+</span>\n           <span class=\"n\">G_2</span><span class=\"p\">(</span>\\<span class=\"n\">lambda_1</span><span class=\"p\">,</span>\\<span class=\"n\">lambda_2</span><span class=\"p\">,</span>\\<span class=\"n\">lambda_3</span><span class=\"p\">)</span>\\<span class=\"n\">hat</span><span class=\"p\">{</span><span class=\"n\">W</span><span class=\"p\">}</span><span class=\"n\">_</span><span class=\"p\">{</span><span class=\"mi\">2233</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>where:\n.. math:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">G_1</span><span class=\"p\">(</span>\\<span class=\"n\">lambda_1</span><span class=\"p\">,</span>\\<span class=\"n\">lambda_2</span><span class=\"p\">,</span>\\<span class=\"n\">lambda_3</span><span class=\"p\">)</span><span class=\"o\">=</span>\n\\<span class=\"n\">frac</span><span class=\"p\">{(</span>\\<span class=\"n\">lambda_1</span><span class=\"o\">+</span>\\<span class=\"n\">lambda_2</span><span class=\"o\">+</span>\\<span class=\"n\">lambda_3</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"mi\">2</span><span class=\"p\">}{</span><span class=\"mi\">18</span>\\<span class=\"n\">lambda_2</span><span class=\"p\">(</span>\\<span class=\"n\">lambda_2</span><span class=\"o\">-</span>\n\\<span class=\"n\">lambda_3</span><span class=\"p\">)}</span> \\<span class=\"n\">left</span> <span class=\"p\">(</span><span class=\"mi\">2</span>\\<span class=\"n\">lambda_2</span> <span class=\"o\">+</span>\n\\<span class=\"n\">frac</span><span class=\"p\">{</span>\\<span class=\"n\">lambda_3</span><span class=\"o\">^</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"mi\">3</span>\\<span class=\"n\">lambda_2</span>\\<span class=\"n\">lambda_3</span><span class=\"p\">}{</span>\\<span class=\"n\">sqrt</span><span class=\"p\">{</span>\\<span class=\"n\">lambda_2</span>\\<span class=\"n\">lambda_3</span><span class=\"p\">}}</span>\n\\<span class=\"n\">right</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>and</p>\n<div class=\"math\">\n\\[G_2(\\lambda_1,\\lambda_2,\\lambda_3)=\n\\frac{(\\lambda_1+\\lambda_2+\\lambda_3)^2}{(\\lambda_2-\\lambda_3)^2}\n\\left ( \\frac{\\lambda_2+\\lambda_3}{\\sqrt{\\lambda_2\\lambda_3}}-2\\right )\\]</div>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r209\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R209]</td><td><em>(<a class=\"fn-backref\" href=\"#id191\">1</a>, <a class=\"fn-backref\" href=\"#id193\">2</a>, <a class=\"fn-backref\" href=\"#id194\">3</a>)</em> Tabesh, A., Jensen, J.H., Ardekani, B.A., Helpern, J.A., 2011.\nEstimation of tensors and tensor-derived measures in diffusional\nkurtosis imaging. Magn Reson Med. 65(3), 823-836</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r210\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R210]</td><td><em>(<a class=\"fn-backref\" href=\"#id192\">1</a>, <a class=\"fn-backref\" href=\"#id195\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on Biomedical\nImaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sphere2cart\">\n<h3>sphere2cart<a class=\"headerlink\" href=\"#sphere2cart\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.sphere2cart\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">sphere2cart</code><span class=\"sig-paren\">(</span><em>r</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.sphere2cart\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical to Cartesian coordinates</p>\n<p>This is the standard physics convention where <cite>theta</cite> is the\ninclination (polar) angle, and <cite>phi</cite> is the azimuth angle.</p>\n<p>Imagine a sphere with center (0,0,0).  Orient it with the z axis\nrunning south-north, the y axis running west-east and the x axis\nfrom posterior to anterior.  <cite>theta</cite> (the inclination angle) is the\nangle to rotate from the z-axis (the zenith) around the y-axis,\ntowards the x axis.  Thus the rotation is counter-clockwise from the\npoint of view of positive y.  <cite>phi</cite> (azimuth) gives the angle of\nrotation around the z-axis towards the y axis.  The rotation is\ncounter-clockwise from the point of view of positive z.</p>\n<p>Equivalently, given a point P on the sphere, with coordinates x, y,\nz, <cite>theta</cite> is the angle between P and the z-axis, and <cite>phi</cite> is\nthe angle between the projection of P onto the XY plane, and the X\naxis.</p>\n<p>Geographical nomenclature designates theta as &#8216;co-latitude&#8217;, and phi\nas &#8216;longitude&#8217;</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> : array_like</p>\n<blockquote>\n<div><p>radius</p>\n</div></blockquote>\n<p><strong>theta</strong> : array_like</p>\n<blockquote>\n<div><p>inclination or polar angle</p>\n</div></blockquote>\n<p><strong>phi</strong> : array_like</p>\n<blockquote>\n<div><p>azimuth angle</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array</p>\n<blockquote>\n<div><p>x coordinate(s) in Cartesion space</p>\n</div></blockquote>\n<p><strong>y</strong> : array</p>\n<blockquote>\n<div><p>y coordinate(s) in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>See these pages:</p>\n<ul class=\"simple\">\n<li><a class=\"reference external\" href=\"http://en.wikipedia.org/wiki/Spherical_coordinate_system\">http://en.wikipedia.org/wiki/Spherical_coordinate_system</a></li>\n<li><a class=\"reference external\" href=\"http://mathworld.wolfram.com/SphericalCoordinates.html\">http://mathworld.wolfram.com/SphericalCoordinates.html</a></li>\n</ul>\n<p>for excellent discussion of the many different conventions\npossible.  Here we use the physics conventions, used in the\nwikipedia page.</p>\n<p>Derivations of the formulae are simple. Consider a vector x, y, z of\nlength r (norm of x, y, z).  The inclination angle (theta) can be\nfound from: cos(theta) == z / r -&gt; z == r * cos(theta).  This gives\nthe hypotenuse of the projection onto the XY plane, which we will\ncall Q. Q == r*sin(theta). Now x / Q == cos(phi) -&gt; x == r *\nsin(theta) * cos(phi) and so on.</p>\n<p>We have deliberately named this function <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> rather than\n<code class=\"docutils literal\"><span class=\"pre\">sph2cart</span></code> to distinguish it from the Matlab function of that\nname, because the Matlab function uses an unusual convention for the\nangles that we did not want to replicate.  The Matlab function is\ntrivial to implement with the formulae given in the Matlab help.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"split-dki-param\">\n<h3>split_dki_param<a class=\"headerlink\" href=\"#split-dki-param\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.split_dki_param\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">split_dki_param</code><span class=\"sig-paren\">(</span><em>dki_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.split_dki_param\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extract the diffusion tensor eigenvalues, the diffusion tensor\neigenvector matrix, and the 15 independent elements of the kurtosis tensor\nfrom the model parameters estimated from the DKI model</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>eigvals</strong> : array (x, y, z, 3) or (n, 3)</p>\n<blockquote>\n<div><p>Eigenvalues from eigen decomposition of the tensor.</p>\n</div></blockquote>\n<p><strong>eigvecs</strong> : array (x, y, z, 3, 3) or (n, 3, 3)</p>\n<blockquote>\n<div><p>Associated eigenvectors from eigen decomposition of the tensor.\nEigenvectors are columnar (e.g. eigvecs[:,j] is associated with\neigvals[j])</p>\n</div></blockquote>\n<p><strong>kt</strong> : array (x, y, z, 15) or (n, 15)</p>\n<blockquote class=\"last\">\n<div><p>Fifteen elements of the kurtosis tensor</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id196\">\n<h3>vec_val_vect<a class=\"headerlink\" href=\"#id196\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.vec_val_vect\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">vec_val_vect</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.vec_val_vect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Vectorize <cite>vecs</cite>.diag(<cite>vals</cite>).`vecs`.T for last 2 dimensions of <cite>vecs</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vecs</strong> : shape (..., M, N) array</p>\n<blockquote>\n<div><p>containing tensor in last two dimensions; M, N usually equal to (3, 3)</p>\n</div></blockquote>\n<p><strong>vals</strong> : shape (..., N) array</p>\n<blockquote>\n<div><p>diagonal values carried in last dimension, <code class=\"docutils literal\"><span class=\"pre\">...</span></code> shape above must\nmatch that for <cite>vecs</cite></p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>res</strong> : shape (..., M, M) array</p>\n<blockquote>\n<div><p>For all the dimensions ellided by <code class=\"docutils literal\"><span class=\"pre\">...</span></code>, loops to get (M, N) <code class=\"docutils literal\"><span class=\"pre\">vec</span></code>\nmatrix, and (N,) <code class=\"docutils literal\"><span class=\"pre\">vals</span></code> vector, and calculates\n<code class=\"docutils literal\"><span class=\"pre\">vec.dot(np.diag(val).dot(vec.T)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>ValueError</strong> : non-matching <code class=\"docutils literal\"><span class=\"pre\">...</span></code> dimensions of <cite>vecs</cite>, <cite>vals</cite></p>\n<p class=\"last\"><strong>ValueError</strong> : non-matching <code class=\"docutils literal\"><span class=\"pre\">N</span></code> dimensions of <cite>vecs</cite>, <cite>vals</cite></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<p>Make a 3D array where the first dimension is only 1</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec_val_vect</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">vals</span><span class=\"p\">)</span>\n<span class=\"go\">array([[[   9.,   24.,   39.],</span>\n<span class=\"go\">        [  24.,   66.,  108.],</span>\n<span class=\"go\">        [  39.,  108.,  177.]]])</span>\n</pre></div>\n</div>\n<p>That&#8217;s the same as the 2D case (apart from the float casting):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">vals</span><span class=\"p\">),</span> <span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">array([[  9,  24,  39],</span>\n<span class=\"go\">       [ 24,  66, 108],</span>\n<span class=\"go\">       [ 39, 108, 177]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"wls-fit-dki\">\n<h3>wls_fit_dki<a class=\"headerlink\" href=\"#wls-fit-dki\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki.wls_fit_dki\">\n<code class=\"descclassname\">dipy.reconst.dki.</code><code class=\"descname\">wls_fit_dki</code><span class=\"sig-paren\">(</span><em>design_matrix</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki.wls_fit_dki\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes weighted linear least squares (WLS) fit to calculate\nthe diffusion tensor and kurtosis tensor using a weighted linear\nregression diffusion kurtosis model <a class=\"footnote-reference\" href=\"#id337\" id=\"id197\">[1]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array (g, 22)</p>\n<blockquote>\n<div><p>Design matrix holding the covariants used to solve for the regression\ncoefficients.</p>\n</div></blockquote>\n<p><strong>data</strong> : array (N, g)</p>\n<blockquote>\n<div><p>Data or response variables holding the data. Note that the last\ndimension should contain the data. It makes no copies of data.</p>\n</div></blockquote>\n<p><strong>min_signal</strong> : default = 1</p>\n<blockquote>\n<div><p>All values below min_signal are repalced with min_signal. This is done\nin order to avoid taking log(0) durring the tensor fitting.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : array (N, 27)</p>\n<blockquote class=\"last\">\n<div><p>All parameters estimated from the diffusion kurtosis model for all N\nvoxels.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id199\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">DiffusionKurtosisFit</span></code></a><a class=\"headerlink\" href=\"#id199\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">DiffusionKurtosisFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit\" title=\"dipy.reconst.dti.TensorFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.dti.TensorFit</span></code></a></p>\n<p>Class for fitting the Diffusion Kurtosis Model</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">S0_hat</span></code></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directions</span></code></td>\n<td>For tracking - return the primary direction in each voxel</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evals</span></code></td>\n<td>Returns the eigenvalues of the tensor as an array</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evecs</span></code></td>\n<td>Returns the eigenvectors of the tensor as an array, columnwise</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.kt\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.kt\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">kt</span></code></a></td>\n<td>Returns the 15 independent elements of the kurtosis tensor as an array</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quadratic_form</span></code></td>\n<td>Calculates the 3x3 diffusion tensor for each voxel</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ad</span></code>()</td>\n<td>Axial diffusivity (AD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">adc</span></code>(sphere)</td>\n<td>Calculate the apparent diffusion coefficient (ADC) in each direction on</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.ak\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.ak\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ak</span></code></a>([min_kurtosis,&nbsp;max_kurtosis])</td>\n<td>Axial Kurtosis (AK) of a diffusion kurtosis tensor [R217].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.akc\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.akc\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">akc</span></code></a>(sphere)</td>\n<td>Calculates the apparent kurtosis coefficient (AKC) in each</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">color_fa</span></code>()</td>\n<td>Color fractional anisotropy of diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fa</span></code>()</td>\n<td>Fractional anisotropy (FA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ga</span></code>()</td>\n<td>Geodesic anisotropy (GA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.kmax\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.kmax\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">kmax</span></code></a>([sphere,&nbsp;gtol,&nbsp;mask])</td>\n<td>Computes the maximum value of a single voxel kurtosis tensor</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">linearity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code>([b0])</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">md</span></code>()</td>\n<td>Mean diffusitivity (MD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.mk\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.mk\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mk</span></code></a>([min_kurtosis,&nbsp;max_kurtosis])</td>\n<td>Computes mean Kurtosis (MK) from the kurtosis tensor.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mode</span></code>()</td>\n<td>Tensor mode calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code>(sphere)</td>\n<td>The diffusion orientation distribution function (dODF).</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">planarity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.predict\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(gtab[,&nbsp;S0])</td>\n<td>Given a DKI model fit, predict the signal on the vertices of a</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rd</span></code>()</td>\n<td>Radial diffusitivity (RD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.rk\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.rk\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rk</span></code></a>([min_kurtosis,&nbsp;max_kurtosis])</td>\n<td>Radial Kurtosis (RK) of a diffusion kurtosis tensor [R221].</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphericity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code>()</td>\n<td>Trace of the tensor calculated from cached eigenvalues.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a DiffusionKurtosisFit class instance.</p>\n<p>Since DKI is an extension of DTI, class instance is defined as subclass\nof the TensorFit from dti.py</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : DiffusionKurtosisModel Class instance</p>\n<blockquote>\n<div><p>Class instance containing the Diffusion Kurtosis Model for the fit</p>\n</div></blockquote>\n<p><strong>model_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote class=\"last\">\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.ak\">\n<code class=\"descname\">ak</code><span class=\"sig-paren\">(</span><em>min_kurtosis=-0.42857142857142855</em>, <em>max_kurtosis=10</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.ak\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Axial Kurtosis (AK) of a diffusion kurtosis tensor <a class=\"reference internal\" href=\"#r211\" id=\"id202\">[R211]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, axial\nkurtosis values that are smaller than <cite>min_kurtosis</cite> are replaced\nwith -3./7 (theoretical kurtosis limit\nfor regions that consist of water confined to spherical pores <a class=\"reference internal\" href=\"#r212\" id=\"id203\">[R212]</a>)</p>\n</div></blockquote>\n<p><strong>max_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, axial\nkurtosis values that are larger than <cite>max_kurtosis</cite> are replaced\nwith <cite>max_kurtosis</cite>. Default = 10</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ak</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated AK.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r211\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R211]</td><td><em>(<a class=\"fn-backref\" href=\"#id202\">1</a>, <a class=\"fn-backref\" href=\"#id204\">2</a>)</em> Tabesh, A., Jensen, J.H., Ardekani, B.A., Helpern, J.A., 2011.\nEstimation of tensors and tensor-derived measures in diffusional\nkurtosis imaging. Magn Reson Med. 65(3), 823-836</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r212\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R212]</td><td><em>(<a class=\"fn-backref\" href=\"#id203\">1</a>, <a class=\"fn-backref\" href=\"#id205\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on\nBiomedical Imaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.akc\">\n<code class=\"descname\">akc</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.akc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the apparent kurtosis coefficient (AKC) in each\ndirection on the sphere for each voxel in the data</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere class instance</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>akc</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The estimates of the apparent kurtosis coefficient in every\ndirection on the input sphere</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>For each sphere direction with coordinates <span class=\"math\">\\((n_{1}, n_{2}, n_{3})\\)</span>, the\ncalculation of AKC is done using formula:</p>\n<div class=\"math\">\n\\[AKC(n)=\\frac{MD^{2}}{ADC(n)^{2}}\\sum_{i=1}^{3}\\sum_{j=1}^{3}\n\\sum_{k=1}^{3}\\sum_{l=1}^{3}n_{i}n_{j}n_{k}n_{l}W_{ijkl}\\]</div>\n<p>where <span class=\"math\">\\(W_{ijkl}\\)</span> are the elements of the kurtosis tensor, MD the mean\ndiffusivity and ADC the apparent diffusion coefficent computed as:</p>\n<div class=\"math\">\n\\[ADC(n)=\\sum_{i=1}^{3}\\sum_{j=1}^{3}n_{i}n_{j}D_{ij}\\]</div>\n<p>where <span class=\"math\">\\(D_{ij}\\)</span> are the elements of the diffusion tensor.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.kmax\">\n<code class=\"descname\">kmax</code><span class=\"sig-paren\">(</span><em>sphere='repulsion100'</em>, <em>gtol=1e-05</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.kmax\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the maximum value of a single voxel kurtosis tensor</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere class instance, optional</p>\n<blockquote>\n<div><p>The sphere providing sample directions for the initial search of\nthe maximum value of kurtosis.</p>\n</div></blockquote>\n<p><strong>gtol</strong> : float, optional</p>\n<blockquote>\n<div><p>This input is to refine kurtosis maximum under the precision of the\ndirections sampled on the sphere class instance. The gradient of\nthe convergence procedure must be less than gtol before successful\ntermination. If gtol is None, fiber direction is directly taken\nfrom the initial sampled directions of the given sphere object</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>max_value</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>kurtosis tensor maximum value</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.kt\">\n<code class=\"descname\">kt</code><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.kt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the 15 independent elements of the kurtosis tensor as an array</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.mk\">\n<code class=\"descname\">mk</code><span class=\"sig-paren\">(</span><em>min_kurtosis=-0.42857142857142855</em>, <em>max_kurtosis=10</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.mk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes mean Kurtosis (MK) from the kurtosis tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, mean\nkurtosis values that are smaller than <cite>min_kurtosis</cite> are replaced\nwith <cite>min_kurtosis</cite>. Default = -3./7 (theoretical kurtosis limit\nfor regions that consist of water confined to spherical pores <a class=\"reference internal\" href=\"#r214\" id=\"id206\">[R214]</a>)</p>\n</div></blockquote>\n<p><strong>max_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, mean\nkurtosis values that are larger than <cite>max_kurtosis</cite> are replaced\nwith <cite>max_kurtosis</cite>. Default = 10</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>mk</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated MK.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The MK analytical solution is calculated using the following equation\n<a class=\"reference internal\" href=\"#r213\" id=\"id207\">[R213]</a>:</p>\n<div class=\"math\">\n\\[\\begin{split}MK=F_1(\\lambda_1,\\lambda_2,\\lambda_3)\\hat{W}_{1111}+\nF_1(\\lambda_2,\\lambda_1,\\lambda_3)\\hat{W}_{2222}+\nF_1(\\lambda_3,\\lambda_2,\\lambda_1)\\hat{W}_{3333}+ \\\\\nF_2(\\lambda_1,\\lambda_2,\\lambda_3)\\hat{W}_{2233}+\nF_2(\\lambda_2,\\lambda_1,\\lambda_3)\\hat{W}_{1133}+\nF_2(\\lambda_3,\\lambda_2,\\lambda_1)\\hat{W}_{1122}\\end{split}\\]</div>\n<p>where <span class=\"math\">\\(\\hat{W}_{ijkl}\\)</span> are the components of the <span class=\"math\">\\(W\\)</span> tensor in the\ncoordinates system defined by the eigenvectors of the diffusion tensor\n<span class=\"math\">\\(\\mathbf{D}\\)</span> and</p>\n<div class=\"math\">\n\\[\\begin{split}F_1(\\lambda_1,\\lambda_2,\\lambda_3)=\n\\frac{(\\lambda_1+\\lambda_2+\\lambda_3)^2}\n{18(\\lambda_1-\\lambda_2)(\\lambda_1-\\lambda_3)}\n[\\frac{\\sqrt{\\lambda_2\\lambda_3}}{\\lambda_1}\nR_F(\\frac{\\lambda_1}{\\lambda_2},\\frac{\\lambda_1}{\\lambda_3},1)+\\\\\n\\frac{3\\lambda_1^2-\\lambda_1\\lambda_2-\\lambda_2\\lambda_3-\n\\lambda_1\\lambda_3}\n{3\\lambda_1 \\sqrt{\\lambda_2 \\lambda_3}}\nR_D(\\frac{\\lambda_1}{\\lambda_2},\\frac{\\lambda_1}{\\lambda_3},1)-1 ]\\end{split}\\]</div>\n<p>and</p>\n<div class=\"math\">\n\\[\\begin{split}F_2(\\lambda_1,\\lambda_2,\\lambda_3)=\n\\frac{(\\lambda_1+\\lambda_2+\\lambda_3)^2}\n{3(\\lambda_2-\\lambda_3)^2}\n[\\frac{\\lambda_2+\\lambda_3}{\\sqrt{\\lambda_2\\lambda_3}}\nR_F(\\frac{\\lambda_1}{\\lambda_2},\\frac{\\lambda_1}{\\lambda_3},1)+\\\\\n\\frac{2\\lambda_1-\\lambda_2-\\lambda_3}{3\\sqrt{\\lambda_2 \\lambda_3}}\nR_D(\\frac{\\lambda_1}{\\lambda_2},\\frac{\\lambda_1}{\\lambda_3},1)-2]\\end{split}\\]</div>\n<p>where <span class=\"math\">\\(R_f\\)</span> and <span class=\"math\">\\(R_d\\)</span> are the Carlson&#8217;s elliptic integrals.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r213\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R213]</td><td><em>(<a class=\"fn-backref\" href=\"#id207\">1</a>, <a class=\"fn-backref\" href=\"#id208\">2</a>)</em> Tabesh, A., Jensen, J.H., Ardekani, B.A., Helpern, J.A., 2011.\nEstimation of tensors and tensor-derived measures in diffusional\nkurtosis imaging. Magn Reson Med. 65(3), 823-836</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r214\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R214]</td><td><em>(<a class=\"fn-backref\" href=\"#id206\">1</a>, <a class=\"fn-backref\" href=\"#id209\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on\nBiomedical Imaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a DKI model fit, predict the signal on the vertices of a\ngradient table</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>The gradient table for this prediction</p>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray (optional)</p>\n<blockquote class=\"last\">\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The predicted signal is given by:</p>\n<div class=\"math\">\n\\[S(n,b)=S_{0}e^{-bD(n)+\\frac{1}{6}b^{2}D(n)^{2}K(n)}\\]</div>\n<p><span class=\"math\">\\(\\mathbf{D(n)}\\)</span> and <span class=\"math\">\\(\\mathbf{K(n)}\\)</span> can be computed from the DT and KT\nusing the following equations:</p>\n<div class=\"math\">\n\\[D(n)=\\sum_{i=1}^{3}\\sum_{j=1}^{3}n_{i}n_{j}D_{ij}\\]</div>\n<p>and</p>\n<div class=\"math\">\n\\[K(n)=\\frac{MD^{2}}{D(n)^{2}}\\sum_{i=1}^{3}\\sum_{j=1}^{3}\n\\sum_{k=1}^{3}\\sum_{l=1}^{3}n_{i}n_{j}n_{k}n_{l}W_{ijkl}\\]</div>\n<p>where <span class=\"math\">\\(D_{ij}\\)</span> and <span class=\"math\">\\(W_{ijkl}\\)</span> are the elements of the second-order DT\nand the fourth-order KT tensors, respectively, and <span class=\"math\">\\(MD\\)</span> is the mean\ndiffusivity.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisFit.rk\">\n<code class=\"descname\">rk</code><span class=\"sig-paren\">(</span><em>min_kurtosis=-0.42857142857142855</em>, <em>max_kurtosis=10</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisFit.rk\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radial Kurtosis (RK) of a diffusion kurtosis tensor <a class=\"reference internal\" href=\"#r215\" id=\"id210\">[R215]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, axial\nkurtosis values that are smaller than <cite>min_kurtosis</cite> are replaced\nwith -3./7 (theoretical kurtosis limit\nfor regions that consist of water confined to spherical pores <a class=\"reference internal\" href=\"#r216\" id=\"id211\">[R216]</a>)</p>\n</div></blockquote>\n<p><strong>max_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>To keep kurtosis values within a plausible biophysical range, axial\nkurtosis values that are larger than <cite>max_kurtosis</cite> are replaced\nwith <cite>max_kurtosis</cite>. Default = 10</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rk</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated RK.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RK is calculated with the following equation:</p>\n<div class=\"math\">\n\\[K_{\\bot} = G_1(\\lambda_1,\\lambda_2,\\lambda_3)\\hat{W}_{2222} +\n           G_1(\\lambda_1,\\lambda_3,\\lambda_2)\\hat{W}_{3333} +\n           G_2(\\lambda_1,\\lambda_2,\\lambda_3)\\hat{W}_{2233}\\]</div>\n<p>where:</p>\n<div class=\"math\">\n\\[G_1(\\lambda_1,\\lambda_2,\\lambda_3)=\n\\frac{(\\lambda_1+\\lambda_2+\\lambda_3)^2}{18\\lambda_2(\\lambda_2-\n\\lambda_3)} \\left (2\\lambda_2 +\n\\frac{\\lambda_3^2-3\\lambda_2\\lambda_3}{\\sqrt{\\lambda_2\\lambda_3}}\n\\right)\\]</div>\n<p>and</p>\n<div class=\"math\">\n\\[G_2(\\lambda_1,\\lambda_2,\\lambda_3)=\n\\frac{(\\lambda_1+\\lambda_2+\\lambda_3)^2}{(\\lambda_2-\\lambda_3)^2}\n\\left ( \\frac{\\lambda_2+\\lambda_3}{\\sqrt{\\lambda_2\\lambda_3}}-2\n\\right )\\]</div>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r215\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R215]</td><td><em>(<a class=\"fn-backref\" href=\"#id210\">1</a>, <a class=\"fn-backref\" href=\"#id212\">2</a>)</em> Tabesh, A., Jensen, J.H., Ardekani, B.A., Helpern, J.A., 2011.\nEstimation of tensors and tensor-derived measures in diffusional\nkurtosis imaging. Magn Reson Med. 65(3), 823-836</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r216\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R216]</td><td><em>(<a class=\"fn-backref\" href=\"#id211\">1</a>, <a class=\"fn-backref\" href=\"#id213\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on\nBiomedical Imaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id214\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisModel\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">DiffusionKurtosisModel</span></code></a><a class=\"headerlink\" href=\"#id214\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">DiffusionKurtosisModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='WLS'</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>Class for the Diffusion Kurtosis Model</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisModel.fit\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method of the DKI model class</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisModel.predict\" title=\"dipy.reconst.dki_micro.DiffusionKurtosisModel.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(dki_params[,&nbsp;S0])</td>\n<td>Predict a signal for this DKI model class instance given parameters.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='WLS'</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Diffusion Kurtosis Tensor Model [1]</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable class instance</p>\n<p><strong>fit_method</strong> : str or callable</p>\n<blockquote>\n<div><p>str can be one of the following:\n&#8216;OLS&#8217; or &#8216;ULLS&#8217; for ordinary least squares</p>\n<blockquote>\n<div><p>dki.ols_fit_dki</p>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>&#8216;WLS&#8217; or &#8216;UWLLS&#8217; for weighted ordinary least squares</dt>\n<dd><p class=\"first last\">dki.wls_fit_dki</p>\n</dd>\n<dt>callable has to have the signature:</dt>\n<dd><p class=\"first last\">fit_method(design_matrix, data, <a href=\"#id215\"><span class=\"problematic\" id=\"id216\">*</span></a>args, <a href=\"#id217\"><span class=\"problematic\" id=\"id218\">**</span></a>kwargs)</p>\n</dd>\n</dl>\n</div></blockquote>\n<p><strong>args, kwargs</strong> : arguments and key-word arguments passed to the</p>\n<blockquote class=\"last\">\n<div><p>fit_method. See dki.ols_fit_dki, dki.wls_fit_dki for details</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method of the DKI model class</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array</p>\n<blockquote>\n<div><p>The measured signal from one voxel.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>A boolean array used to mark the coordinates in the data that\nshould be analyzed that has the shape data.shape[-1]</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.DiffusionKurtosisModel.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.DiffusionKurtosisModel.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict a signal for this DKI model class instance given\nparameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray (optional)</p>\n<blockquote class=\"last\">\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"kurtosismicrostructuralfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">KurtosisMicrostructuralFit</span></code></a><a class=\"headerlink\" href=\"#kurtosismicrostructuralfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">KurtosisMicrostructuralFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisFit\" title=\"dipy.reconst.dki.DiffusionKurtosisFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.dki.DiffusionKurtosisFit</span></code></a></p>\n<p>Class for fitting the Diffusion Kurtosis Microstructural Model</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">S0_hat</span></code></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">awf</span></code></a></td>\n<td>Returns the volume fraction of the restricted diffusion compartment also known as axonal water fraction.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">axonal_diffusivity</span></code></a></td>\n<td>Returns the axonal diffusivity defined as the restricted diffusion tensor trace [R231].</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directions</span></code></td>\n<td>For tracking - return the primary direction in each voxel</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evals</span></code></td>\n<td>Returns the eigenvalues of the tensor as an array</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evecs</span></code></td>\n<td>Returns the eigenvectors of the tensor as an array, columnwise</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">hindered_ad</span></code></a></td>\n<td>Returns the axial diffusivity of the hindered compartment.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">hindered_evals</span></code></a></td>\n<td>Returns the eigenvalues of the hindered diffusion compartment.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">hindered_rd</span></code></a></td>\n<td>Returns the radial diffusivity of the hindered compartment.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">kt</span></code></td>\n<td>Returns the 15 independent elements of the kurtosis tensor as an array</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quadratic_form</span></code></td>\n<td>Calculates the 3x3 diffusion tensor for each voxel</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">restricted_evals</span></code></a></td>\n<td>Returns the eigenvalues of the restricted diffusion compartment.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">tortuosity</span></code></a></td>\n<td>Returns the tortuosity of the hindered diffusion which is defined by ADe / RDe, where ADe and RDe are the axial and radial diffusivities of the hindered compartment [R236].</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ad</span></code>()</td>\n<td>Axial diffusivity (AD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">adc</span></code>(sphere)</td>\n<td>Calculate the apparent diffusion coefficient (ADC) in each direction on</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ak</span></code>([min_kurtosis,&nbsp;max_kurtosis])</td>\n<td>Axial Kurtosis (AK) of a diffusion kurtosis tensor [R237].</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">akc</span></code>(sphere)</td>\n<td>Calculates the apparent kurtosis coefficient (AKC) in each</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">color_fa</span></code>()</td>\n<td>Color fractional anisotropy of diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fa</span></code>()</td>\n<td>Fractional anisotropy (FA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ga</span></code>()</td>\n<td>Geodesic anisotropy (GA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">kmax</span></code>([sphere,&nbsp;gtol,&nbsp;mask])</td>\n<td>Computes the maximum value of a single voxel kurtosis tensor</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">linearity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code>([b0])</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">md</span></code>()</td>\n<td>Mean diffusitivity (MD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mk</span></code>([min_kurtosis,&nbsp;max_kurtosis])</td>\n<td>Computes mean Kurtosis (MK) from the kurtosis tensor.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mode</span></code>()</td>\n<td>Tensor mode calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code>(sphere)</td>\n<td>The diffusion orientation distribution function (dODF).</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">planarity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(gtab[,&nbsp;S0])</td>\n<td>Given a DKI microstructural model fit, predict the signal on the</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rd</span></code>()</td>\n<td>Radial diffusitivity (RD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rk</span></code>([min_kurtosis,&nbsp;max_kurtosis])</td>\n<td>Radial Kurtosis (RK) of a diffusion kurtosis tensor [R241].</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphericity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code>()</td>\n<td>Trace of the tensor calculated from cached eigenvalues.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a KurtosisMicrostructural Fit class instance.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : DiffusionKurtosisModel Class instance</p>\n<blockquote>\n<div><p>Class instance containing the Diffusion Kurtosis Model for the fit</p>\n</div></blockquote>\n<p><strong>model_params</strong> : ndarray (x, y, z, 40) or (n, 40)</p>\n<blockquote class=\"last\">\n<div><p>All parameters estimated from the diffusion kurtosis\nmicrostructural model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n<li>Six elements of the hindered diffusion tensor</li>\n<li>Six elements of the restricted diffusion tensor</li>\n<li>Axonal water fraction</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r243\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id224\">[R243]</a></td><td>Fieremans, E., Jensen, J.H., Helpern, J.A., 2011. White Matter\nCharacterization with Diffusion Kurtosis Imaging. Neuroimage\n58(1): 177-188. doi:10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf\">\n<code class=\"descname\">awf</code><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the volume fraction of the restricted diffusion compartment\nalso known as axonal water fraction.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r223\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id225\">[R223]</a></td><td>Fieremans, E., Jensen, J.H., Helpern, J.A., 2011. White Matter\nCharacterization with Diffusion Kurtosis Imaging. Neuroimage\n58(1): 177-188. doi:10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity\">\n<code class=\"descname\">axonal_diffusivity</code><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the axonal diffusivity defined as the restricted diffusion\ntensor trace <a class=\"reference internal\" href=\"#r224\" id=\"id226\">[R224]</a>.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r224\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R224]</td><td><em>(<a class=\"fn-backref\" href=\"#id226\">1</a>, <a class=\"fn-backref\" href=\"#id227\">2</a>)</em> Fieremans, E., Jensen, J.H., Helpern, J.A., 2011. White Matter\nCharacterization with Diffusion Kurtosis Imaging. Neuroimage\n58(1): 177-188. doi:10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad\">\n<code class=\"descname\">hindered_ad</code><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the axial diffusivity of the hindered compartment.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r225\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id228\">[R225]</a></td><td>Fieremans, E., Jensen, J.H., Helpern, J.A., 2011. White Matter\nCharacterization with Diffusion Kurtosis Imaging. Neuroimage\n58(1): 177-188. doi:10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals\">\n<code class=\"descname\">hindered_evals</code><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the eigenvalues of the hindered diffusion compartment.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r226\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id229\">[R226]</a></td><td>Fieremans, E., Jensen, J.H., Helpern, J.A., 2011. White Matter\nCharacterization with Diffusion Kurtosis Imaging. Neuroimage\n58(1): 177-188. doi:10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd\">\n<code class=\"descname\">hindered_rd</code><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the radial diffusivity of the hindered compartment.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r227\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id230\">[R227]</a></td><td>Fieremans, E., Jensen, J.H., Helpern, J.A., 2011. White Matter\nCharacterization with Diffusion Kurtosis Imaging. Neuroimage\n58(1): 177-188. doi:10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a DKI microstructural model fit, predict the signal on the\nvertices of a gradient table</p>\n<dl class=\"docutils\">\n<dt>gtab <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">a GradientTable class instance</span></dt>\n<dd>The gradient table for this prediction</dd>\n<dt>S0 <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">float or ndarray (optional)</span></dt>\n<dd>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>The predicted signal is given by:</p>\n<p><span class=\"math\">\\(S(\\theta, b) = S_0 * [f * e^{-b ADC_{r}} + (1-f) * e^{-b ADC_{h}]\\)</span>,\nwhere <span class=\"math\">\\(ADC_{r}\\)</span> and <span class=\"math\">\\(ADC_{h}\\)</span> are the apparent diffusion coefficients\nof the diffusion hindered and restricted compartment for a given\ndirection <span class=\"math\">\\(\\theta\\)</span>, <span class=\"math\">\\(b\\)</span> is the b value provided in the GradientTable\ninput for that direction, <span class=\"math\">\\(f\\)</span> is the volume fraction of the restricted\ndiffusion compartment (also known as the axonal water fraction).</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals\">\n<code class=\"descname\">restricted_evals</code><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the eigenvalues of the restricted diffusion compartment.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r228\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id231\">[R228]</a></td><td>Fieremans, E., Jensen, J.H., Helpern, J.A., 2011. White Matter\nCharacterization with Diffusion Kurtosis Imaging. Neuroimage\n58(1): 177-188. doi:10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity\">\n<code class=\"descname\">tortuosity</code><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the tortuosity of the hindered diffusion which is defined\nby ADe / RDe, where ADe and RDe are the axial and radial diffusivities\nof the hindered compartment <a class=\"reference internal\" href=\"#r229\" id=\"id232\">[R229]</a>.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r229\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R229]</td><td><em>(<a class=\"fn-backref\" href=\"#id232\">1</a>, <a class=\"fn-backref\" href=\"#id233\">2</a>)</em> Fieremans, E., Jensen, J.H., Helpern, J.A., 2011. White Matter\nCharacterization with Diffusion Kurtosis Imaging. Neuroimage\n58(1): 177-188. doi:10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"kurtosismicrostructuremodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructureModel\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructureModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">KurtosisMicrostructureModel</span></code></a><a class=\"headerlink\" href=\"#kurtosismicrostructuremodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructureModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">KurtosisMicrostructureModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='WLS'</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructureModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.dki.DiffusionKurtosisModel\" title=\"dipy.reconst.dki.DiffusionKurtosisModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.dki.DiffusionKurtosisModel</span></code></a></p>\n<p>Class for the Diffusion Kurtosis Microstructural Model</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask,&nbsp;sphere,&nbsp;gtol,&nbsp;awf_only])</td>\n<td>Fit method of the Diffusion Kurtosis Microstructural Model</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict\" title=\"dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(params[,&nbsp;S0])</td>\n<td>Predict a signal for the DKI microstructural model class instance given parameters.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructureModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='WLS'</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructureModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a KurtosisMicrostrutureModel class instance <a class=\"reference internal\" href=\"#r246\" id=\"id234\">[R246]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable class instance</p>\n<p><strong>fit_method</strong> : str or callable</p>\n<blockquote>\n<div><p>str can be one of the following:\n&#8216;OLS&#8217; or &#8216;ULLS&#8217; to fit the diffusion tensor and kurtosis tensor\nusing the ordinary linear least squares solution</p>\n<blockquote>\n<div><p>dki.ols_fit_dki</p>\n</div></blockquote>\n<p>&#8216;WLS&#8217; or &#8216;UWLLS&#8217; to fit the diffusion tensor and kurtosis tensor\nusing the ordinary linear least squares solution</p>\n<blockquote>\n<div><p>dki.wls_fit_dki</p>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>callable has to have the signature:</dt>\n<dd><p class=\"first last\">fit_method(design_matrix, data, <a href=\"#id235\"><span class=\"problematic\" id=\"id236\">*</span></a>args, <a href=\"#id237\"><span class=\"problematic\" id=\"id238\">**</span></a>kwargs)</p>\n</dd>\n</dl>\n</div></blockquote>\n<p><strong>args, kwargs</strong> : arguments and key-word arguments passed to the</p>\n<blockquote class=\"last\">\n<div><p>fit_method. See dki.ols_fit_dki, dki.wls_fit_dki for details</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r246\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R246]</td><td><em>(<a class=\"fn-backref\" href=\"#id234\">1</a>, <a class=\"fn-backref\" href=\"#id239\">2</a>)</em> Fieremans, E., Jensen, J.H., Helpern, J.A., 2011. White Matter\nCharacterization with Diffusion Kurtosis Imaging. Neuroimage\n58(1): 177-188. doi:10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em>, <em>sphere='repulsion100'</em>, <em>gtol=0.01</em>, <em>awf_only=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method of the Diffusion Kurtosis Microstructural Model</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array</p>\n<blockquote>\n<div><p>An 4D matrix containing the diffusion-weighted data.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array</p>\n<blockquote>\n<div><p>A boolean array used to mark the coordinates in the data that\nshould be analyzed that has the shape data.shape[-1]</p>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere class instance, optional</p>\n<blockquote>\n<div><p>The sphere providing sample directions for the initial search of\nthe maximal value of kurtosis.</p>\n</div></blockquote>\n<p><strong>gtol</strong> : float, optional</p>\n<blockquote>\n<div><p>This input is to refine kurtosis maxima under the precision of the\ndirections sampled on the sphere class instance. The gradient of\nthe convergence procedure must be less than gtol before successful\ntermination. If gtol is None, fiber direction is directly taken\nfrom the initial sampled directions of the given sphere object</p>\n</div></blockquote>\n<p><strong>awf_only</strong> : bool, optiomal</p>\n<blockquote class=\"last\">\n<div><p>If set to true only the axonal volume fraction is computed from\nthe kurtosis tensor. Default = False</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>params</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict a signal for the DKI microstructural model class instance\ngiven parameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>params</strong> : ndarray (x, y, z, 40) or (n, 40)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis\nmicrostructural model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n<li>Six elements of the hindered diffusion tensor</li>\n<li>Six elements of the restricted diffusion tensor</li>\n<li>Axonal water fraction</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray (optional)</p>\n<blockquote class=\"last\">\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r244\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id240\">[R244]</a></td><td>Fieremans, E., Jensen, J.H., Helpern, J.A., 2011. White Matter\nCharacterization with Diffusion Kurtosis Imaging. Neuroimage\n58(1): 177-188. doi:10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"axial-diffusivity\">\n<h3>axial_diffusivity<a class=\"headerlink\" href=\"#axial-diffusivity\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.axial_diffusivity\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">axial_diffusivity</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.axial_diffusivity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Axial Diffusivity (AD) of a diffusion tensor.\nAlso called parallel diffusivity.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor, must be sorted in descending order\nalong <cite>axis</cite>.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ad</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated AD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>AD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[AD = \\lambda_1\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"axonal-water-fraction\">\n<h3>axonal_water_fraction<a class=\"headerlink\" href=\"#axonal-water-fraction\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.axonal_water_fraction\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">axonal_water_fraction</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>sphere='repulsion100'</em>, <em>gtol=0.01</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.axonal_water_fraction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the axonal water fraction from DKI <a class=\"reference internal\" href=\"#r247\" id=\"id241\">[R247]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere class instance, optional</p>\n<blockquote>\n<div><p>The sphere providing sample directions for the initial search of the\nmaximal value of kurtosis.</p>\n</div></blockquote>\n<p><strong>gtol</strong> : float, optional</p>\n<blockquote>\n<div><p>This input is to refine kurtosis maxima under the precision of the\ndirections sampled on the sphere class instance. The gradient of the\nconvergence procedure must be less than gtol before successful\ntermination. If gtol is None, fiber direction is directly taken from\nthe initial sampled directions of the given sphere object</p>\n</div></blockquote>\n<p><strong>mask</strong> : ndarray</p>\n<blockquote>\n<div><p>A boolean array used to mark the coordinates in the data that should be\nanalyzed that has the shape dki_params.shape[:-1]</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>awf</strong> : ndarray (x, y, z) or (n)</p>\n<blockquote class=\"last\">\n<div><p>Axonal Water Fraction</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r247\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R247]</td><td><em>(<a class=\"fn-backref\" href=\"#id241\">1</a>, <a class=\"fn-backref\" href=\"#id242\">2</a>)</em> Fieremans E, Jensen JH, Helpern JA, 2011. White matter\ncharacterization with diffusional kurtosis imaging.\nNeuroimage 58(1):177-88. doi: 10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id243\">\n<h3>decompose_tensor<a class=\"headerlink\" href=\"#id243\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.decompose_tensor\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">decompose_tensor</code><span class=\"sig-paren\">(</span><em>tensor</em>, <em>min_diffusivity=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.decompose_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns eigenvalues and eigenvectors given a diffusion tensor</p>\n<p>Computes tensor eigen decomposition to calculate eigenvalues and\neigenvectors (Basser et al., 1994a).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : array (..., 3, 3)</p>\n<blockquote>\n<div><p>Hermitian matrix representing a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>min_diffusivity</strong> : float</p>\n<blockquote>\n<div><p>Because negative eigenvalues are not physical and small eigenvalues,\nmuch smaller than the diffusion weighting, cause quite a lot of noise\nin metrics such as fa, diffusivity values smaller than\n<cite>min_diffusivity</cite> are replaced with <cite>min_diffusivity</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>eigvals</strong> : array (..., 3)</p>\n<blockquote>\n<div><p>Eigenvalues from eigen decomposition of the tensor. Negative\neigenvalues are replaced by zero. Sorted from largest to smallest.</p>\n</div></blockquote>\n<p><strong>eigvecs</strong> : array (..., 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>Associated eigenvectors from eigen decomposition of the tensor.\nEigenvectors are columnar (e.g. eigvecs[..., :, j] is associated with\neigvals[..., j])</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"diffusion-components\">\n<h3>diffusion_components<a class=\"headerlink\" href=\"#diffusion-components\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.diffusion_components\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">diffusion_components</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>sphere='repulsion100'</em>, <em>awf=None</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.diffusion_components\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extracts the restricted and hindered diffusion tensors of well aligned\nfibers from diffusion kurtosis imaging parameters <a class=\"reference internal\" href=\"#r248\" id=\"id244\">[R248]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere class instance, optional</p>\n<blockquote>\n<div><p>The sphere providing sample directions to sample the restricted and\nhindered cellular diffusion tensors. For more details see Fieremans\net al., 2011.</p>\n</div></blockquote>\n<p><strong>awf</strong> : ndarray (optional)</p>\n<blockquote>\n<div><p>Array containing values of the axonal water fraction that has the shape\ndki_params.shape[:-1]. If not given this will be automatically computed\nusing <a class=\"reference internal\" href=\"#dipy.reconst.dki_micro.axonal_water_fraction\" title=\"dipy.reconst.dki_micro.axonal_water_fraction\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">axonal_water_fraction()</span></code></a>&#8221; with function&#8217;s default precision.</p>\n</div></blockquote>\n<p><strong>mask</strong> : ndarray (optional)</p>\n<blockquote>\n<div><p>A boolean array used to mark the coordinates in the data that should be\nanalyzed that has the shape dki_params.shape[:-1]</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>edt</strong> : ndarray (x, y, z, 6) or (n, 6)</p>\n<blockquote>\n<div><p>Parameters of the hindered diffusion tensor.</p>\n</div></blockquote>\n<p><strong>idt</strong> : ndarray (x, y, z, 6) or (n, 6)</p>\n<blockquote class=\"last\">\n<div><p>Parameters of the restricted diffusion tensor.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r248\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R248]</td><td><em>(<a class=\"fn-backref\" href=\"#id244\">1</a>, <a class=\"fn-backref\" href=\"#id245\">2</a>)</em> Fieremans E, Jensen JH, Helpern JA, 2011. White matter\ncharacterization with diffusional kurtosis imaging.\nNeuroimage 58(1):177-88. doi: 10.1016/j.neuroimage.2011.06.006</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id246\">\n<h3>directional_diffusion<a class=\"headerlink\" href=\"#id246\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.directional_diffusion\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">directional_diffusion</code><span class=\"sig-paren\">(</span><em>dt</em>, <em>V</em>, <em>min_diffusivity=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.directional_diffusion\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the apparent diffusion coefficient (adc) in each direction\nof a sphere for a single voxel <a class=\"reference internal\" href=\"#r249\" id=\"id247\">[R249]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dt</strong> : array (6,)</p>\n<blockquote>\n<div><p>elements of the diffusion tensor of the voxel.</p>\n</div></blockquote>\n<p><strong>V</strong> : array (g, 3)</p>\n<blockquote>\n<div><p>g directions of a Sphere in Cartesian coordinates</p>\n</div></blockquote>\n<p><strong>min_diffusivity</strong> : float (optional)</p>\n<blockquote>\n<div><p>Because negative eigenvalues are not physical and small eigenvalues\ncause quite a lot of noise in diffusion-based metrics, diffusivity\nvalues smaller than <cite>min_diffusivity</cite> are replaced with\n<cite>min_diffusivity</cite>. Default = 0</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>adc</strong> : ndarray (g,)</p>\n<blockquote class=\"last\">\n<div><p>Apparent diffusion coefficient (adc) in all g directions of a sphere\nfor a single voxel.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r249\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R249]</td><td><em>(<a class=\"fn-backref\" href=\"#id247\">1</a>, <a class=\"fn-backref\" href=\"#id248\">2</a>)</em> Neto Henriques R, Correia MM, Nunes RG, Ferreira HA (2015).\nExploring the 3D geometry of the diffusion kurtosis tensor -\nImpact on the development of robust tractography procedures and\nnovel biomarkers, NeuroImage 111: 85-99</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id249\">\n<h3>directional_kurtosis<a class=\"headerlink\" href=\"#id249\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.directional_kurtosis\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">directional_kurtosis</code><span class=\"sig-paren\">(</span><em>dt</em>, <em>md</em>, <em>kt</em>, <em>V</em>, <em>min_diffusivity=0</em>, <em>min_kurtosis=-0.42857142857142855</em>, <em>adc=None</em>, <em>adv=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.directional_kurtosis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the apparent kurtosis coefficient (akc) in each direction\nof a sphere for a single voxel <a class=\"reference internal\" href=\"#r250\" id=\"id250\">[R250]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dt</strong> : array (6,)</p>\n<blockquote>\n<div><p>elements of the diffusion tensor of the voxel.</p>\n</div></blockquote>\n<p><strong>md</strong> : float</p>\n<blockquote>\n<div><p>mean diffusivity of the voxel</p>\n</div></blockquote>\n<p><strong>kt</strong> : array (15,)</p>\n<blockquote>\n<div><p>elements of the kurtosis tensor of the voxel.</p>\n</div></blockquote>\n<p><strong>V</strong> : array (g, 3)</p>\n<blockquote>\n<div><p>g directions of a Sphere in Cartesian coordinates</p>\n</div></blockquote>\n<p><strong>min_diffusivity</strong> : float (optional)</p>\n<blockquote>\n<div><p>Because negative eigenvalues are not physical and small eigenvalues\ncause quite a lot of noise in diffusion-based metrics, diffusivity\nvalues smaller than <cite>min_diffusivity</cite> are replaced with\n<cite>min_diffusivity</cite>. Default = 0</p>\n</div></blockquote>\n<p><strong>min_kurtosis</strong> : float (optional)</p>\n<blockquote>\n<div><p>Because high-amplitude negative values of kurtosis are not physicaly\nand biologicaly pluasible, and these cause artefacts in\nkurtosis-based measures, directional kurtosis values smaller than\n<cite>min_kurtosis</cite> are replaced with <cite>min_kurtosis</cite>. Default = -3./7\n(theoretical kurtosis limit for regions that consist of water confined\nto spherical pores <a class=\"reference internal\" href=\"#r251\" id=\"id251\">[R251]</a>)</p>\n</div></blockquote>\n<p><strong>adc</strong> : ndarray(g,) (optional)</p>\n<blockquote>\n<div><p>Apparent diffusion coefficient (adc) in all g directions of a sphere\nfor a single voxel.</p>\n</div></blockquote>\n<p><strong>adv</strong> : ndarray(g,) (optional)</p>\n<blockquote>\n<div><p>Apparent diffusion variance (advc) in all g directions of a sphere for\na single voxel.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>akc</strong> : ndarray (g,)</p>\n<blockquote class=\"last\">\n<div><p>Apparent kurtosis coefficient (AKC) in all g directions of a sphere for\na single voxel.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r250\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R250]</td><td><em>(<a class=\"fn-backref\" href=\"#id250\">1</a>, <a class=\"fn-backref\" href=\"#id252\">2</a>)</em> Neto Henriques R, Correia MM, Nunes RG, Ferreira HA (2015).\nExploring the 3D geometry of the diffusion kurtosis tensor -\nImpact on the development of robust tractography procedures and\nnovel biomarkers, NeuroImage 111: 85-99</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r251\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R251]</td><td><em>(<a class=\"fn-backref\" href=\"#id251\">1</a>, <a class=\"fn-backref\" href=\"#id253\">2</a>)</em> Barmpoutis, A., &amp; Zhuo, J., 2011. Diffusion kurtosis imaging:\nRobust estimation from DW-MRI using homogeneous polynomials.\nProceedings of the 8th {IEEE} International Symposium on\nBiomedical Imaging: From Nano to Macro, ISBI 2011, 262-265.\ndoi: 10.1109/ISBI.2011.5872402</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dkimicro-prediction\">\n<h3>dkimicro_prediction<a class=\"headerlink\" href=\"#dkimicro-prediction\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.dkimicro_prediction\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">dkimicro_prediction</code><span class=\"sig-paren\">(</span><em>params</em>, <em>gtab</em>, <em>S0=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.dkimicro_prediction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Signal prediction given the DKI microstructure model parameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>params</strong> : ndarray (x, y, z, 40) or (n, 40)</p>\n<p><strong>All parameters estimated from the diffusion kurtosis microstructure model.</strong> :</p>\n<blockquote>\n<div><dl class=\"docutils\">\n<dt>Parameters are ordered as follows:</dt>\n<dd><ol class=\"first last arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n<li>Six elements of the hindered diffusion tensor</li>\n<li>Six elements of the restricted diffusion tensor</li>\n<li>Axonal water fraction</li>\n</ol>\n</dd>\n</dl>\n</div></blockquote>\n<p><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>The gradient table for this prediction</p>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray</p>\n<blockquote>\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : (..., N) ndarray</p>\n<blockquote class=\"last\">\n<div><p>Simulated signal based on the DKI microstructure model</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>1) The predicted signal is given by:\n<span class=\"math\">\\(S(\\theta, b) = S_0 * [f * e^{-b ADC_{r}} + (1-f) * e^{-b ADC_{h}]\\)</span>, where\n:math:` ADC_{r} and ADC_{h} are the apparent diffusion coefficients of the\ndiffusion hindered and restricted compartment for a given direction\n<cite>theta:math:</cite>, <cite>b:math:</cite> is the b value provided in the GradientTable input for that\ndirection, <a href=\"#id254\"><span class=\"problematic\" id=\"id255\">`</span></a>f$ is the volume fraction of the restricted diffusion\ncompartment (also known as the axonal water fraction).</p>\n<p>2) In the original article of DKI microstructural model <a class=\"footnote-reference\" href=\"#id337\" id=\"id256\">[1]</a>, the hindered\nand restricted tensors were definde as the intra-cellular and\nextra-cellular diffusion compartments respectively.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dti-design-matrix\">\n<h3>dti_design_matrix<a class=\"headerlink\" href=\"#dti-design-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.dti_design_matrix\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">dti_design_matrix</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>dtype=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.dti_design_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs design matrix for DTI weighted least squares or\nleast squares fitting. (Basser et al., 1994a)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : A GradientTable class instance</p>\n<p><strong>dtype</strong> : string</p>\n<blockquote>\n<div><p>Parameter to control the dtype of returned designed matrix</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array (g,7)</p>\n<blockquote class=\"last\">\n<div><p>Design matrix or B matrix assuming Gaussian distributed tensor model\ndesign_matrix[j, :] = (Bxx, Byy, Bzz, Bxy, Bxz, Byz, dummy)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id257\">\n<h3>from_lower_triangular<a class=\"headerlink\" href=\"#id257\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.from_lower_triangular\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">from_lower_triangular</code><span class=\"sig-paren\">(</span><em>D</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.from_lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a tensor given the six unique tensor elements</p>\n<p>Given the six unique tensor elments (in the order: Dxx, Dxy, Dyy, Dxz, Dyz,\nDzz) returns a 3 by 3 tensor. All elements after the sixth are ignored.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>D</strong> : array_like, (..., &gt;6)</p>\n<blockquote>\n<div><p>Unique elements of the tensors</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : ndarray (..., 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>3 by 3 tensors</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id258\">\n<h3>get_sphere<a class=\"headerlink\" href=\"#id258\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.get_sphere\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">get_sphere</code><span class=\"sig-paren\">(</span><em>name='symmetric362'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.get_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>provide triangulated spheres</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>name</strong> : str</p>\n<blockquote>\n<div><p>which sphere - one of:\n* &#8216;symmetric362&#8217;\n* &#8216;symmetric642&#8217;\n* &#8216;symmetric724&#8217;\n* &#8216;repulsion724&#8217;\n* &#8216;repulsion100&#8217;\n* &#8216;repulsion200&#8217;</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>sphere</strong> : a dipy.core.sphere.Sphere class instance</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric362&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">faces</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">362</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">720</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;not a sphere name&#39;</span><span class=\"p\">)</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n    <span class=\"o\">...</span>\n<span class=\"gr\">DataError</span>: <span class=\"n\">No sphere called &quot;not a sphere name&quot;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id259\">\n<h3>kurtosis_maximum<a class=\"headerlink\" href=\"#id259\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.kurtosis_maximum\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">kurtosis_maximum</code><span class=\"sig-paren\">(</span><em>dki_params</em>, <em>sphere='repulsion100'</em>, <em>gtol=0.01</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.kurtosis_maximum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes kurtosis maximum value</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eingenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere class instance, optional</p>\n<blockquote>\n<div><p>The sphere providing sample directions for the initial search of the\nmaximal value of kurtosis.</p>\n</div></blockquote>\n<p><strong>gtol</strong> : float, optional</p>\n<blockquote>\n<div><p>This input is to refine kurtosis maximum under the precision of the\ndirections sampled on the sphere class instance. The gradient of the\nconvergence procedure must be less than gtol before successful\ntermination. If gtol is None, fiber direction is directly taken from\nthe initial sampled directions of the given sphere object</p>\n</div></blockquote>\n<p><strong>mask</strong> : ndarray</p>\n<blockquote>\n<div><p>A boolean array used to mark the coordinates in the data that should be\nanalyzed that has the shape dki_params.shape[:-1]</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>max_value</strong> : float</p>\n<blockquote>\n<div><p>kurtosis tensor maximum value</p>\n</div></blockquote>\n<p><strong>max_dir</strong> : array (3,)</p>\n<blockquote class=\"last\">\n<div><p>Cartesian coordinates of the direction of the maximal kurtosis value</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id260\">\n<h3>lower_triangular<a class=\"headerlink\" href=\"#id260\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.lower_triangular\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">lower_triangular</code><span class=\"sig-paren\">(</span><em>tensor</em>, <em>b0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the six lower triangular values of the tensor and a dummy variable\nif b0 is not None</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : array_like (..., 3, 3)</p>\n<blockquote>\n<div><p>a collection of 3, 3 diffusion tensors</p>\n</div></blockquote>\n<p><strong>b0</strong> : float</p>\n<blockquote>\n<div><p>if b0 is not none log(b0) is returned as the dummy variable</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>D</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>If b0 is none, then the shape will be (..., 6) otherwise (..., 7)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id261\">\n<h3>mean_diffusivity<a class=\"headerlink\" href=\"#id261\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.mean_diffusivity\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">mean_diffusivity</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.mean_diffusivity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Mean Diffusivity (MD) of a diffusion tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>md</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated MD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>MD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[MD = \\frac{\\lambda_1 + \\lambda_2 + \\lambda_3}{3}\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id262\">\n<h3>ndindex<a class=\"headerlink\" href=\"#id262\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.ndindex\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">ndindex</code><span class=\"sig-paren\">(</span><em>shape</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape</strong> : tuple of ints</p>\n<blockquote class=\"last\">\n<div><p>The dimensions of the array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"k\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"radial-diffusivity\">\n<h3>radial_diffusivity<a class=\"headerlink\" href=\"#radial-diffusivity\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.radial_diffusivity\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">radial_diffusivity</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.radial_diffusivity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radial Diffusivity (RD) of a diffusion tensor.\nAlso called perpendicular diffusivity.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor, must be sorted in descending order\nalong <cite>axis</cite>.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rd</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated RD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[RD = \\frac{\\lambda_2 + \\lambda_3}{2}\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id263\">\n<h3>split_dki_param<a class=\"headerlink\" href=\"#id263\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.split_dki_param\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">split_dki_param</code><span class=\"sig-paren\">(</span><em>dki_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.split_dki_param\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extract the diffusion tensor eigenvalues, the diffusion tensor\neigenvector matrix, and the 15 independent elements of the kurtosis tensor\nfrom the model parameters estimated from the DKI model</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dki_params</strong> : ndarray (x, y, z, 27) or (n, 27)</p>\n<blockquote>\n<div><p>All parameters estimated from the diffusion kurtosis model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the first,\nsecond and third coordinates of the eigenvector</li>\n<li>Fifteen elements of the kurtosis tensor</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>eigvals</strong> : array (x, y, z, 3) or (n, 3)</p>\n<blockquote>\n<div><p>Eigenvalues from eigen decomposition of the tensor.</p>\n</div></blockquote>\n<p><strong>eigvecs</strong> : array (x, y, z, 3, 3) or (n, 3, 3)</p>\n<blockquote>\n<div><p>Associated eigenvectors from eigen decomposition of the tensor.\nEigenvectors are columnar (e.g. eigvecs[:,j] is associated with\neigvals[j])</p>\n</div></blockquote>\n<p><strong>kt</strong> : array (x, y, z, 15) or (n, 15)</p>\n<blockquote class=\"last\">\n<div><p>Fifteen elements of the kurtosis tensor</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"tortuosity\">\n<h3>tortuosity<a class=\"headerlink\" href=\"#tortuosity\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.tortuosity\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">tortuosity</code><span class=\"sig-paren\">(</span><em>hindered_ad</em>, <em>hindered_rd</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.tortuosity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the tortuosity of the hindered diffusion compartment given\nits axial and radial diffusivities</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>hindered_ad: ndarray</strong> :</p>\n<blockquote>\n<div><p>Array containing the values of the hindered axial diffusivity.</p>\n</div></blockquote>\n<p><strong>hindered_rd: ndarray</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Array containing the values of the hindered radial diffusivity.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"trace\">\n<h3>trace<a class=\"headerlink\" href=\"#trace\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.trace\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">trace</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.trace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Trace of a diffusion tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>trace</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated trace of the diffusion tensor.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Trace is calculated with the following equation:</p>\n<div class=\"math\">\n\\[Trace = \\lambda_1 + \\lambda_2 + \\lambda_3\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id264\">\n<h3>vec_val_vect<a class=\"headerlink\" href=\"#id264\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dki_micro.vec_val_vect\">\n<code class=\"descclassname\">dipy.reconst.dki_micro.</code><code class=\"descname\">vec_val_vect</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dki_micro.vec_val_vect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Vectorize <cite>vecs</cite>.diag(<cite>vals</cite>).`vecs`.T for last 2 dimensions of <cite>vecs</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vecs</strong> : shape (..., M, N) array</p>\n<blockquote>\n<div><p>containing tensor in last two dimensions; M, N usually equal to (3, 3)</p>\n</div></blockquote>\n<p><strong>vals</strong> : shape (..., N) array</p>\n<blockquote>\n<div><p>diagonal values carried in last dimension, <code class=\"docutils literal\"><span class=\"pre\">...</span></code> shape above must\nmatch that for <cite>vecs</cite></p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>res</strong> : shape (..., M, M) array</p>\n<blockquote>\n<div><p>For all the dimensions ellided by <code class=\"docutils literal\"><span class=\"pre\">...</span></code>, loops to get (M, N) <code class=\"docutils literal\"><span class=\"pre\">vec</span></code>\nmatrix, and (N,) <code class=\"docutils literal\"><span class=\"pre\">vals</span></code> vector, and calculates\n<code class=\"docutils literal\"><span class=\"pre\">vec.dot(np.diag(val).dot(vec.T)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>ValueError</strong> : non-matching <code class=\"docutils literal\"><span class=\"pre\">...</span></code> dimensions of <cite>vecs</cite>, <cite>vals</cite></p>\n<p class=\"last\"><strong>ValueError</strong> : non-matching <code class=\"docutils literal\"><span class=\"pre\">N</span></code> dimensions of <cite>vecs</cite>, <cite>vals</cite></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<p>Make a 3D array where the first dimension is only 1</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec_val_vect</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">vals</span><span class=\"p\">)</span>\n<span class=\"go\">array([[[   9.,   24.,   39.],</span>\n<span class=\"go\">        [  24.,   66.,  108.],</span>\n<span class=\"go\">        [  39.,  108.,  177.]]])</span>\n</pre></div>\n</div>\n<p>That&#8217;s the same as the 2D case (apart from the float casting):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">vals</span><span class=\"p\">),</span> <span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">array([[  9,  24,  39],</span>\n<span class=\"go\">       [ 24,  66, 108],</span>\n<span class=\"go\">       [ 39, 108, 177]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id265\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dsi.Cache\" title=\"dipy.reconst.dsi.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Cache</span></code></a><a class=\"headerlink\" href=\"#id265\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dsi.Cache\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">Cache</code><a class=\"headerlink\" href=\"#dipy.reconst.dsi.Cache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Cache values based on a key object (such as a sphere or gradient table).</p>\n<p class=\"rubric\">Notes</p>\n<p>This class is meant to be used as a mix-in:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Cache</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelFit</span><span class=\"p\">(</span><span class=\"n\">Fit</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Inside a method on the fit, typical usage would be:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">):</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">M</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_basis_matrix</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">M</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.Cache.cache_clear\" title=\"dipy.reconst.dsi.Cache.cache_clear\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code></a>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.Cache.cache_get\" title=\"dipy.reconst.dsi.Cache.cache_get\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code></a>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.Cache.cache_set\" title=\"dipy.reconst.dsi.Cache.cache_set\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code></a>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.Cache.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.Cache.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.Cache.cache_clear\">\n<code class=\"descname\">cache_clear</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.Cache.cache_clear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clear the cache.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.Cache.cache_get\">\n<code class=\"descname\">cache_get</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>default=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.Cache.cache_get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieve a value from the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>default</strong> : object</p>\n<blockquote>\n<div><p>Value to be returned if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>v</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value from the cache associated with <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.  Returns\n<cite>default</cite> if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.Cache.cache_set\">\n<code class=\"descname\">cache_set</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>value</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.Cache.cache_set\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Store a value in the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>value</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value stored in the cache for each unique combination\nof <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># Imagine the following computation is very expensive</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"o\">=</span> <span class=\"n\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">X1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"ow\">is</span> <span class=\"n\">X2</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"diffusionspectrumdeconvfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvFit\" title=\"dipy.reconst.dsi.DiffusionSpectrumDeconvFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">DiffusionSpectrumDeconvFit</span></code></a><a class=\"headerlink\" href=\"#diffusionspectrumdeconvfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumDeconvFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">DiffusionSpectrumDeconvFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit\" title=\"dipy.reconst.dsi.DiffusionSpectrumFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.dsi.DiffusionSpectrumFit</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">msd_discrete</span></code>([normalized])</td>\n<td>Calculates the mean squared displacement on the discrete propagator</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code>(sphere)</td>\n<td>Calculates the real discrete odf for a given discrete sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf\" title=\"dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pdf</span></code></a>()</td>\n<td>Applies the 3D FFT in the q-space grid to generate</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rtop_pdf</span></code>([normalized])</td>\n<td>Calculates the return to origin probability from the propagator, which is the propagator evaluated at zero (see Descoteaux et Al.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rtop_signal</span></code>([filtering])</td>\n<td>Calculates the return to origin probability (rtop) from the signal</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumDeconvFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates PDF and ODF and other properties for a single voxel</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : object,</p>\n<blockquote>\n<div><p>DiffusionSpectrumModel</p>\n</div></blockquote>\n<p><strong>data</strong> : 1d ndarray,</p>\n<blockquote class=\"last\">\n<div><p>signal values</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf\">\n<code class=\"descname\">pdf</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies the 3D FFT in the q-space grid to generate\nthe DSI diffusion propagator, remove the background noise with a\nhard threshold and then deconvolve the propagator with the\nLucy-Richardson deconvolution algorithm</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"diffusionspectrumdeconvmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvModel\" title=\"dipy.reconst.dsi.DiffusionSpectrumDeconvModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">DiffusionSpectrumDeconvModel</span></code></a><a class=\"headerlink\" href=\"#diffusionspectrumdeconvmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumDeconvModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">DiffusionSpectrumDeconvModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>qgrid_size=35</em>, <em>r_start=4.1</em>, <em>r_end=13.0</em>, <em>r_step=0.4</em>, <em>filter_width=inf</em>, <em>normalize_peaks=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumModel\" title=\"dipy.reconst.dsi.DiffusionSpectrumModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.dsi.DiffusionSpectrumModel</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit\" title=\"dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method for every voxel in data</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumDeconvModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>qgrid_size=35</em>, <em>r_start=4.1</em>, <em>r_end=13.0</em>, <em>r_step=0.4</em>, <em>filter_width=inf</em>, <em>normalize_peaks=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Diffusion Spectrum Deconvolution</p>\n<p>The idea is to remove the convolution on the DSI propagator that is\ncaused by the truncation of the q-space in the DSI sampling.</p>\n<dl class=\"docutils\">\n<dt>..math::</dt>\n<dd><table class=\"first last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">nowrap:</th><td class=\"field-body\"><dl class=\"first docutils\">\n<dt>begin{eqnarray*}</dt>\n<dd><p class=\"first last\">P_{dsi}(mathbf{r}) &amp; = &amp; S_{0}^{-1}iiintlimits_{| mathbf{q} | le mathbf{q_{max}}} S(mathbf{q})exp(-i2pimathbf{q}cdotmathbf{r})dmathbf{q} \\\n&amp; = &amp; S_{0}^{-1}iiintlimits_{mathbf{q}} left( S(mathbf{q}) cdot M(mathbf{q}) right) exp(-i2pimathbf{q}cdotmathbf{r})dmathbf{q} \\\n&amp; = &amp; P(mathbf{r}) otimes left( S_{0}^{-1}iiintlimits_{mathbf{q}}  M(mathbf{q}) exp(-i2pimathbf{q}cdotmathbf{r})dmathbf{q} right) \\</p>\n</dd>\n</dl>\n<p class=\"last\">end{eqnarray*}</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>where <span class=\"math\">\\(\\mathbf{r}\\)</span> is the displacement vector and <span class=\"math\">\\(\\mathbf{q}\\)</span> is the\nwavector which corresponds to different gradient directions,\n<span class=\"math\">\\(M(\\mathbf{q})\\)</span> is a mask corresponding to your q-space sampling and\n<span class=\"math\">\\(\\otimes\\)</span> is the convolution operator <a class=\"reference internal\" href=\"#r256\" id=\"id266\">[R256]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable,</p>\n<blockquote>\n<div><p>Gradient directions and bvalues container class</p>\n</div></blockquote>\n<p><strong>qgrid_size</strong> : int,</p>\n<blockquote>\n<div><p>has to be an odd number. Sets the size of the q_space grid.\nFor example if qgrid_size is 35 then the shape of the grid will be\n<code class=\"docutils literal\"><span class=\"pre\">(35,</span> <span class=\"pre\">35,</span> <span class=\"pre\">35)</span></code>.</p>\n</div></blockquote>\n<p><strong>r_start</strong> : float,</p>\n<blockquote>\n<div><p>ODF is sampled radially in the PDF. This parameters shows where the\nsampling should start.</p>\n</div></blockquote>\n<p><strong>r_end</strong> : float,</p>\n<blockquote>\n<div><p>Radial endpoint of ODF sampling</p>\n</div></blockquote>\n<p><strong>r_step</strong> : float,</p>\n<blockquote>\n<div><p>Step size of the ODf sampling from r_start to r_end</p>\n</div></blockquote>\n<p><strong>filter_width</strong> : float,</p>\n<blockquote class=\"last\">\n<div><p>Strength of the hanning filter</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r256\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R256]</td><td><em>(<a class=\"fn-backref\" href=\"#id266\">1</a>, <a class=\"fn-backref\" href=\"#id267\">2</a>)</em> Canales-Rodriguez E.J et. al, &#8220;Deconvolution in Diffusion</td></tr>\n</tbody>\n</table>\n<p>Spectrum Imaging&#8221;, Neuroimage, 2010.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r257\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id268\">[R257]</a></td><td>Biggs David S.C. et. al, &#8220;Acceleration of Iterative Image</td></tr>\n</tbody>\n</table>\n<p>Restoration Algorithms&#8221;, Applied Optics, vol. 36, No. 8, p. 1766-1775,\n1997.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method for every voxel in data</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"diffusionspectrumfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit\" title=\"dipy.reconst.dsi.DiffusionSpectrumFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">DiffusionSpectrumFit</span></code></a><a class=\"headerlink\" href=\"#diffusionspectrumfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">DiffusionSpectrumFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfFit\" title=\"dipy.reconst.odf.OdfFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.odf.OdfFit</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete\" title=\"dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">msd_discrete</span></code></a>([normalized])</td>\n<td>Calculates the mean squared displacement on the discrete propagator</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.odf\" title=\"dipy.reconst.dsi.DiffusionSpectrumFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>Calculates the real discrete odf for a given discrete sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.pdf\" title=\"dipy.reconst.dsi.DiffusionSpectrumFit.pdf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pdf</span></code></a>([normalized])</td>\n<td>Applies the 3D FFT in the q-space grid to generate</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf\" title=\"dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rtop_pdf</span></code></a>([normalized])</td>\n<td>Calculates the return to origin probability from the propagator, which is the propagator evaluated at zero (see Descoteaux et Al.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal\" title=\"dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rtop_signal</span></code></a>([filtering])</td>\n<td>Calculates the return to origin probability (rtop) from the signal</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates PDF and ODF and other properties for a single voxel</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : object,</p>\n<blockquote>\n<div><p>DiffusionSpectrumModel</p>\n</div></blockquote>\n<p><strong>data</strong> : 1d ndarray,</p>\n<blockquote class=\"last\">\n<div><p>signal values</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete\">\n<code class=\"descname\">msd_discrete</code><span class=\"sig-paren\">(</span><em>normalized=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the mean squared displacement on the discrete propagator</p>\n<dl class=\"docutils\">\n<dt>..math::</dt>\n<dd><table class=\"first last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">nowrap:</th><td class=\"field-body\"><dl class=\"first docutils\">\n<dt>begin{equation}</dt>\n<dd><p class=\"first last\">MSD:{DSI}=int_{-infty}^{infty}int_{-infty}^{infty}int_{-infty}^{infty} P(hat{mathbf{r}}) cdot hat{mathbf{r}}^{2} dr_x dr_y dr_z</p>\n</dd>\n</dl>\n<p class=\"last\">end{equation}</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>where <span class=\"math\">\\(\\hat{\\mathbf{r}}\\)</span> is a point in the 3D Propagator space\n(see Wu et. al <a class=\"reference internal\" href=\"#r258\" id=\"id269\">[R258]</a>).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>normalized</strong> : boolean, optional</p>\n<blockquote>\n<div><p>Whether to normalize the propagator by its sum in order to obtain a\npdf. Default: True</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>msd</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>the mean square displacement</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r258\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R258]</td><td><em>(<a class=\"fn-backref\" href=\"#id269\">1</a>, <a class=\"fn-backref\" href=\"#id270\">2</a>)</em> Wu Y. et. al, &#8220;Hybrid diffusion imaging&#8221;, NeuroImage, vol 36,</td></tr>\n</tbody>\n</table>\n<ol class=\"loweralpha simple\" start=\"16\">\n<li>617-629, 2007.</li>\n</ol>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the real discrete odf for a given discrete sphere</p>\n<dl class=\"docutils\">\n<dt>..math::</dt>\n<dd><table class=\"first last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">nowrap:</th><td class=\"field-body\"><dl class=\"first docutils\">\n<dt>begin{equation}</dt>\n<dd><p class=\"first last\">psi_{DSI}(hat{mathbf{u}})=int_{0}^{infty}P(rhat{mathbf{u}})r^{2}dr</p>\n</dd>\n</dl>\n<p class=\"last\">end{equation}</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>where <span class=\"math\">\\(\\hat{\\mathbf{u}}\\)</span> is the unit vector which corresponds to a\nsphere point.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumFit.pdf\">\n<code class=\"descname\">pdf</code><span class=\"sig-paren\">(</span><em>normalized=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.pdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies the 3D FFT in the q-space grid to generate\nthe diffusion propagator</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf\">\n<code class=\"descname\">rtop_pdf</code><span class=\"sig-paren\">(</span><em>normalized=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the return to origin probability from the propagator, which is\nthe propagator evaluated at zero (see Descoteaux et Al. <a class=\"reference internal\" href=\"#r259\" id=\"id271\">[R259]</a>,\nTuch <a class=\"reference internal\" href=\"#r260\" id=\"id272\">[R260]</a>, Wu et al. <a class=\"reference internal\" href=\"#r261\" id=\"id273\">[R261]</a>)\nrtop = P(0)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>normalized</strong> : boolean, optional</p>\n<blockquote>\n<div><p>Whether to normalize the propagator by its sum in order to obtain a\npdf. Default: True.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rtop</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>the return to origin probability</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r259\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R259]</td><td><em>(<a class=\"fn-backref\" href=\"#id271\">1</a>, <a class=\"fn-backref\" href=\"#id274\">2</a>)</em> Descoteaux M. et. al, &#8220;Multiple q-shell diffusion propagator</td></tr>\n</tbody>\n</table>\n<p>imaging&#8221;, Medical Image Analysis, vol 15, No. 4, p. 603-621, 2011.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r260\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R260]</td><td><em>(<a class=\"fn-backref\" href=\"#id272\">1</a>, <a class=\"fn-backref\" href=\"#id275\">2</a>)</em> Tuch D.S., &#8220;Diffusion MRI of Complex Tissue Structure&#8221;,\nPhD Thesis, 2002.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r261\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R261]</td><td><em>(<a class=\"fn-backref\" href=\"#id273\">1</a>, <a class=\"fn-backref\" href=\"#id276\">2</a>)</em> Wu Y. et. al, &#8220;Computation of Diffusion Function Measures</td></tr>\n</tbody>\n</table>\n<p>in q -Space Using Magnetic Resonance Hybrid Diffusion Imaging&#8221;,\nIEEE TRANSACTIONS ON MEDICAL IMAGING, vol. 27, No. 6, p. 858-865, 2008</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal\">\n<code class=\"descname\">rtop_signal</code><span class=\"sig-paren\">(</span><em>filtering=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the return to origin probability (rtop) from the signal\nrtop equals to the sum of all signal values</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>filtering</strong> : boolean, optional</p>\n<blockquote>\n<div><p>Whether to perform Hanning filtering. Default: True</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rtop</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>the return to origin probability</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"diffusionspectrummodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumModel\" title=\"dipy.reconst.dsi.DiffusionSpectrumModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">DiffusionSpectrumModel</span></code></a><a class=\"headerlink\" href=\"#diffusionspectrummodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">DiffusionSpectrumModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>qgrid_size=17</em>, <em>r_start=2.1</em>, <em>r_end=6.0</em>, <em>r_step=0.2</em>, <em>filter_width=32</em>, <em>normalize_peaks=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfModel\" title=\"dipy.reconst.odf.OdfModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.odf.OdfModel</span></code></a>, <a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache\" title=\"dipy.reconst.cache.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.cache.Cache</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumModel.fit\" title=\"dipy.reconst.dsi.DiffusionSpectrumModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method for every voxel in data</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>qgrid_size=17</em>, <em>r_start=2.1</em>, <em>r_end=6.0</em>, <em>r_step=0.2</em>, <em>filter_width=32</em>, <em>normalize_peaks=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Diffusion Spectrum Imaging</p>\n<p>The theoretical idea underlying this method is that the diffusion\npropagator <span class=\"math\">\\(P(\\mathbf{r})\\)</span> (probability density function of the average\nspin displacements) can be estimated by applying 3D FFT to the signal\nvalues <span class=\"math\">\\(S(\\mathbf{q})\\)</span></p>\n<dl class=\"docutils\">\n<dt>..math::</dt>\n<dd><table class=\"first last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">nowrap:</th><td class=\"field-body\"><dl class=\"first docutils\">\n<dt>begin{eqnarray}</dt>\n<dd><p class=\"first last\">P(mathbf{r}) &amp; = &amp; S_{0}^{-1}int S(mathbf{q})exp(-i2pimathbf{q}cdotmathbf{r})dmathbf{r}</p>\n</dd>\n</dl>\n<p class=\"last\">end{eqnarray}</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>where <span class=\"math\">\\(\\mathbf{r}\\)</span> is the displacement vector and <span class=\"math\">\\(\\mathbf{q}\\)</span> is the\nwavector which corresponds to different gradient directions. Method\nused to calculate the ODFs. Here we implement the method proposed by\nWedeen et. al <a class=\"reference internal\" href=\"#r266\" id=\"id277\">[R266]</a>.</p>\n<p>The main assumption for this model is fast gradient switching and that\nthe acquisition gradients will sit on a keyhole Cartesian grid in\nq_space <a class=\"reference internal\" href=\"#r268\" id=\"id278\">[R268]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable,</p>\n<blockquote>\n<div><p>Gradient directions and bvalues container class</p>\n</div></blockquote>\n<p><strong>qgrid_size</strong> : int,</p>\n<blockquote>\n<div><p>has to be an odd number. Sets the size of the q_space grid.\nFor example if qgrid_size is 17 then the shape of the grid will be\n<code class=\"docutils literal\"><span class=\"pre\">(17,</span> <span class=\"pre\">17,</span> <span class=\"pre\">17)</span></code>.</p>\n</div></blockquote>\n<p><strong>r_start</strong> : float,</p>\n<blockquote>\n<div><p>ODF is sampled radially in the PDF. This parameters shows where the\nsampling should start.</p>\n</div></blockquote>\n<p><strong>r_end</strong> : float,</p>\n<blockquote>\n<div><p>Radial endpoint of ODF sampling</p>\n</div></blockquote>\n<p><strong>r_step</strong> : float,</p>\n<blockquote>\n<div><p>Step size of the ODf sampling from r_start to r_end</p>\n</div></blockquote>\n<p><strong>filter_width</strong> : float,</p>\n<blockquote class=\"last\">\n<div><p>Strength of the hanning filter</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dipy.reconst.gqi.GeneralizedQSampling</span></code></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>A. Have in mind that DSI expects gradients on both hemispheres. If your\ngradients span only one hemisphere you need to duplicate the data and\nproject them to the other hemisphere before calling this class. The\nfunction dipy.reconst.dsi.half_to_full_qspace can be used for this\npurpose.</p>\n<p>B. If you increase the size of the grid (parameter qgrid_size) you will\nmost likely also need to update the r_* parameters. This is because\nthe added zero padding from the increase of gqrid_size also introduces\na scaling of the PDF.</p>\n<ol class=\"upperalpha simple\" start=\"3\">\n<li>We assume that data only one b0 volume is provided.</li>\n</ol>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r266\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R266]</td><td><em>(<a class=\"fn-backref\" href=\"#id277\">1</a>, <a class=\"fn-backref\" href=\"#id279\">2</a>)</em> Wedeen V.J et. al, &#8220;Mapping Complex Tissue Architecture With</td></tr>\n</tbody>\n</table>\n<p>Diffusion Spectrum Magnetic Resonance Imaging&#8221;, MRM 2005.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r267\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id280\">[R267]</a></td><td>Canales-Rodriguez E.J et. al, &#8220;Deconvolution in Diffusion</td></tr>\n</tbody>\n</table>\n<p>Spectrum Imaging&#8221;, Neuroimage, 2010.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r268\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R268]</td><td><em>(<a class=\"fn-backref\" href=\"#id278\">1</a>, <a class=\"fn-backref\" href=\"#id281\">2</a>)</em> Garyfallidis E, &#8220;Towards an accurate brain tractography&#8221;, PhD</td></tr>\n</tbody>\n</table>\n<p>thesis, University of Cambridge, 2012.</p>\n<p class=\"rubric\">Examples</p>\n<p>In this example where we provide the data, a gradient table\nand a reconstruction sphere, we calculate generalized FA for the first\nvoxel in the data with the reconstruction performed using DSI.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">dsi_voxels</span><span class=\"p\">,</span> <span class=\"n\">get_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">dsi_voxels</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric724&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.dsi</span> <span class=\"k\">import</span> <span class=\"n\">DiffusionSpectrumModel</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">DiffusionSpectrumModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dsfit</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.odf</span> <span class=\"k\">import</span> <span class=\"n\">gfa</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">gfa</span><span class=\"p\">(</span><span class=\"n\">dsfit</span><span class=\"o\">.</span><span class=\"n\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">0.11</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.DiffusionSpectrumModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.DiffusionSpectrumModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method for every voxel in data</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"odffit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dsi.OdfFit\" title=\"dipy.reconst.dsi.OdfFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OdfFit</span></code></a><a class=\"headerlink\" href=\"#odffit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dsi.OdfFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">OdfFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.OdfFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstFit</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.OdfFit.odf\" title=\"dipy.reconst.dsi.OdfFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>To be implemented but specific odf models</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.OdfFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.OdfFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.OdfFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.OdfFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>To be implemented but specific odf models</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"odfmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dsi.OdfModel\" title=\"dipy.reconst.dsi.OdfModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OdfModel</span></code></a><a class=\"headerlink\" href=\"#odfmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dsi.OdfModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">OdfModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.OdfModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>An abstract class to be sub-classed by specific odf models</p>\n<p>All odf models should provide a fit method which may take data as it&#8217;s\nfirst and only argument.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dsi.OdfModel.fit\" title=\"dipy.reconst.dsi.OdfModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data)</td>\n<td>To be implemented by specific odf models</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.OdfModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.OdfModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dsi.OdfModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.OdfModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>To be implemented by specific odf models</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"lr-deconv\">\n<h3>LR_deconv<a class=\"headerlink\" href=\"#lr-deconv\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.LR_deconv\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">LR_deconv</code><span class=\"sig-paren\">(</span><em>prop</em>, <em>psf</em>, <em>numit=5</em>, <em>acc_factor=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.LR_deconv\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Perform Lucy-Richardson deconvolution algorithm on a 3D array.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>prop</strong> : 3-D ndarray of dtype float</p>\n<blockquote>\n<div><p>The 3D volume to be deconvolve</p>\n</div></blockquote>\n<p><strong>psf</strong> : 3-D ndarray of dtype float</p>\n<blockquote>\n<div><p>The filter that will be used for the deconvolution.</p>\n</div></blockquote>\n<p><strong>numit</strong> : int</p>\n<blockquote>\n<div><p>Number of Lucy-Richardson iteration to perform.</p>\n</div></blockquote>\n<p><strong>acc_factor</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Exponential acceleration factor as in <a class=\"reference internal\" href=\"#r269\" id=\"id282\">[R269]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r269\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R269]</td><td><em>(<a class=\"fn-backref\" href=\"#id282\">1</a>, <a class=\"fn-backref\" href=\"#id283\">2</a>)</em> Biggs David S.C. et. al, &#8220;Acceleration of Iterative Image\nRestoration Algorithms&#8221;, Applied Optics, vol. 36, No. 8, p. 1766-1775,\n1997.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"create-qspace\">\n<h3>create_qspace<a class=\"headerlink\" href=\"#create-qspace\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.create_qspace\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">create_qspace</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>origin</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.create_qspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>create the 3D grid which holds the signal values (q-space)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<p><strong>origin</strong> : (3,) ndarray</p>\n<blockquote>\n<div><p>center of qspace</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>qgrid</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>qspace coordinates</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"create-qtable\">\n<h3>create_qtable<a class=\"headerlink\" href=\"#create-qtable\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.create_qtable\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">create_qtable</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>origin</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.create_qtable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>create a normalized version of gradients</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<p><strong>origin</strong> : (3,) ndarray</p>\n<blockquote>\n<div><p>center of qspace</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>qtable</strong> : ndarray</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"fftn\">\n<h3>fftn<a class=\"headerlink\" href=\"#fftn\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.fftn\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">fftn</code><span class=\"sig-paren\">(</span><em>x</em>, <em>shape=None</em>, <em>axes=None</em>, <em>overwrite_x=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.fftn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return multidimensional discrete Fourier transform.</p>\n<p>The returned array contains:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">j_1</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">,</span><span class=\"n\">j_d</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">[</span><span class=\"n\">k_1</span><span class=\"o\">=</span><span class=\"mf\">0.</span><span class=\"o\">.</span><span class=\"n\">n_1</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">k_d</span><span class=\"o\">=</span><span class=\"mf\">0.</span><span class=\"o\">.</span><span class=\"n\">n_d</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n   <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">k_1</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">,</span><span class=\"n\">k_d</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">prod</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mf\">1.</span><span class=\"o\">.</span><span class=\"n\">d</span><span class=\"p\">]</span> <span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">pi</span><span class=\"o\">/</span><span class=\"n\">n_i</span> <span class=\"o\">*</span> <span class=\"n\">j_i</span> <span class=\"o\">*</span> <span class=\"n\">k_i</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>where d = len(x.shape) and n = x.shape.\nNote that <code class=\"docutils literal\"><span class=\"pre\">y[...,</span> <span class=\"pre\">-j_i,</span> <span class=\"pre\">...]</span> <span class=\"pre\">=</span> <span class=\"pre\">y[...,</span> <span class=\"pre\">n_i-j_i,</span> <span class=\"pre\">...].conjugate()</span></code>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>The (n-dimensional) array to transform.</p>\n</div></blockquote>\n<p><strong>shape</strong> : tuple of ints, optional</p>\n<blockquote>\n<div><p>The shape of the result.  If both <cite>shape</cite> and <cite>axes</cite> (see below) are\nNone, <cite>shape</cite> is <code class=\"docutils literal\"><span class=\"pre\">x.shape</span></code>; if <cite>shape</cite> is None but <cite>axes</cite> is\nnot None, then <cite>shape</cite> is <code class=\"docutils literal\"><span class=\"pre\">scipy.take(x.shape,</span> <span class=\"pre\">axes,</span> <span class=\"pre\">axis=0)</span></code>.\nIf <code class=\"docutils literal\"><span class=\"pre\">shape[i]</span> <span class=\"pre\">&gt;</span> <span class=\"pre\">x.shape[i]</span></code>, the i-th dimension is padded with zeros.\nIf <code class=\"docutils literal\"><span class=\"pre\">shape[i]</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">x.shape[i]</span></code>, the i-th dimension is truncated to\nlength <code class=\"docutils literal\"><span class=\"pre\">shape[i]</span></code>.</p>\n</div></blockquote>\n<p><strong>axes</strong> : array_like of ints, optional</p>\n<blockquote>\n<div><p>The axes of <cite>x</cite> (<cite>y</cite> if <cite>shape</cite> is not None) along which the\ntransform is applied.</p>\n</div></blockquote>\n<p><strong>overwrite_x</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, the contents of <cite>x</cite> can be destroyed.  Default is False.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y</strong> : complex-valued n-dimensional numpy array</p>\n<blockquote class=\"last\">\n<div><p>The (n-dimensional) DFT of the input array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ifftn</span></code></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>Both single and double precision routines are implemented.  Half precision\ninputs will be converted to single precision.  Non floating-point inputs\nwill be converted to double precision.  Long-double precision inputs are\nnot supported.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy.fftpack</span> <span class=\"k\">import</span> <span class=\"n\">fftn</span><span class=\"p\">,</span> <span class=\"n\">ifftn</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">),</span> <span class=\"mi\">8</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">fftn</span><span class=\"p\">(</span><span class=\"n\">ifftn</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)))</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"fftshift\">\n<h3>fftshift<a class=\"headerlink\" href=\"#fftshift\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.fftshift\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">fftshift</code><span class=\"sig-paren\">(</span><em>x</em>, <em>axes=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.fftshift\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Shift the zero-frequency component to the center of the spectrum.</p>\n<p>This function swaps half-spaces for all axes listed (defaults to all).\nNote that <code class=\"docutils literal\"><span class=\"pre\">y[0]</span></code> is the Nyquist component only if <code class=\"docutils literal\"><span class=\"pre\">len(x)</span></code> is even.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>Input array.</p>\n</div></blockquote>\n<p><strong>axes</strong> : int or shape tuple, optional</p>\n<blockquote>\n<div><p>Axes over which to shift.  Default is None, which shifts all axes.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The shifted array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><a class=\"reference internal\" href=\"#dipy.reconst.dsi.ifftshift\" title=\"dipy.reconst.dsi.ifftshift\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ifftshift</span></code></a></dt>\n<dd>The inverse of <cite>fftshift</cite>.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">freqs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">fftfreq</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">freqs</span>\n<span class=\"go\">array([ 0.,  1.,  2.,  3.,  4., -5., -4., -3., -2., -1.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">fftshift</span><span class=\"p\">(</span><span class=\"n\">freqs</span><span class=\"p\">)</span>\n<span class=\"go\">array([-5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.])</span>\n</pre></div>\n</div>\n<p>Shift the zero-frequency component only along the second axis:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">freqs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">fftfreq</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">=</span><span class=\"mf\">1.</span><span class=\"o\">/</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">freqs</span>\n<span class=\"go\">array([[ 0.,  1.,  2.],</span>\n<span class=\"go\">       [ 3.,  4., -4.],</span>\n<span class=\"go\">       [-3., -2., -1.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">fftshift</span><span class=\"p\">(</span><span class=\"n\">freqs</span><span class=\"p\">,</span> <span class=\"n\">axes</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,))</span>\n<span class=\"go\">array([[ 2.,  0.,  1.],</span>\n<span class=\"go\">       [-4.,  3.,  4.],</span>\n<span class=\"go\">       [-1., -3., -2.]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gen-psf\">\n<h3>gen_PSF<a class=\"headerlink\" href=\"#gen-psf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.gen_PSF\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">gen_PSF</code><span class=\"sig-paren\">(</span><em>qgrid_sampling</em>, <em>siz_x</em>, <em>siz_y</em>, <em>siz_z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.gen_PSF\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate a PSF for DSI Deconvolution by taking the ifft of the binary\nq-space sampling mask and truncating it to keep only the center.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"half-to-full-qspace\">\n<h3>half_to_full_qspace<a class=\"headerlink\" href=\"#half-to-full-qspace\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.half_to_full_qspace\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">half_to_full_qspace</code><span class=\"sig-paren\">(</span><em>data</em>, <em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.half_to_full_qspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Half to full Cartesian grid mapping</p>\n<p>Useful when dMRI data are provided in one qspace hemisphere as\nDiffusionSpectrum expects data to be in full qspace.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array, shape (X, Y, Z, W)</p>\n<blockquote>\n<div><p>where (X, Y, Z) volume size and W number of gradient directions</p>\n</div></blockquote>\n<p><strong>gtab</strong> : GradientTable</p>\n<blockquote>\n<div><p>container for b-values and b-vectors (gradient directions)</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>new_data</strong> : array, shape (X, Y, Z, 2 * W -1)</p>\n<p class=\"last\"><strong>new_gtab</strong> : GradientTable</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>We assume here that only on b0 is provided with the initial data. If that\nis not the case then you will need to write your own preparation function\nbefore providing the gradients and the data to the DiffusionSpectrumModel\nclass.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"hanning-filter\">\n<h3>hanning_filter<a class=\"headerlink\" href=\"#hanning-filter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.hanning_filter\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">hanning_filter</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>filter_width</em>, <em>origin</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.hanning_filter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>create a hanning window</p>\n<p>The signal is premultiplied by a Hanning window before\nFourier transform in order to ensure a smooth attenuation\nof the signal at high q values.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<p><strong>filter_width</strong> : int</p>\n<p><strong>origin</strong> : (3,) ndarray</p>\n<blockquote>\n<div><p>center of qspace</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>filter</strong> : (N,) ndarray</p>\n<blockquote class=\"last\">\n<div><p>where N is the number of non-b0 gradient directions</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"ifftshift\">\n<h3>ifftshift<a class=\"headerlink\" href=\"#ifftshift\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.ifftshift\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">ifftshift</code><span class=\"sig-paren\">(</span><em>x</em>, <em>axes=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.ifftshift\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The inverse of <cite>fftshift</cite>. Although identical for even-length <cite>x</cite>, the\nfunctions differ by one sample for odd-length <cite>x</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>Input array.</p>\n</div></blockquote>\n<p><strong>axes</strong> : int or shape tuple, optional</p>\n<blockquote>\n<div><p>Axes over which to calculate.  Defaults to None, which shifts all axes.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The shifted array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><a class=\"reference internal\" href=\"#dipy.reconst.dsi.fftshift\" title=\"dipy.reconst.dsi.fftshift\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fftshift</span></code></a></dt>\n<dd>Shift zero-frequency component to the center of the spectrum.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">freqs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">fftfreq</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">=</span><span class=\"mf\">1.</span><span class=\"o\">/</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">freqs</span>\n<span class=\"go\">array([[ 0.,  1.,  2.],</span>\n<span class=\"go\">       [ 3.,  4., -4.],</span>\n<span class=\"go\">       [-3., -2., -1.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">ifftshift</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">fftshift</span><span class=\"p\">(</span><span class=\"n\">freqs</span><span class=\"p\">))</span>\n<span class=\"go\">array([[ 0.,  1.,  2.],</span>\n<span class=\"go\">       [ 3.,  4., -4.],</span>\n<span class=\"go\">       [-3., -2., -1.]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"map-coordinates\">\n<h3>map_coordinates<a class=\"headerlink\" href=\"#map-coordinates\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.map_coordinates\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">map_coordinates</code><span class=\"sig-paren\">(</span><em>input</em>, <em>coordinates</em>, <em>output=None</em>, <em>order=3</em>, <em>mode='constant'</em>, <em>cval=0.0</em>, <em>prefilter=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.map_coordinates\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Map the input array to new coordinates by interpolation.</p>\n<p>The array of coordinates is used to find, for each point in the output,\nthe corresponding coordinates in the input. The value of the input at\nthose coordinates is determined by spline interpolation of the\nrequested order.</p>\n<p>The shape of the output is derived from that of the coordinate\narray by dropping the first axis. The values of the array along\nthe first axis are the coordinates in the input array at which the\noutput value is found.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>input</strong> : ndarray</p>\n<blockquote>\n<div><p>The input array.</p>\n</div></blockquote>\n<p><strong>coordinates</strong> : array_like</p>\n<blockquote>\n<div><p>The coordinates at which <cite>input</cite> is evaluated.</p>\n</div></blockquote>\n<p><strong>output</strong> : ndarray or dtype, optional</p>\n<blockquote>\n<div><p>The array in which to place the output, or the dtype of the returned\narray.</p>\n</div></blockquote>\n<p><strong>order</strong> : int, optional</p>\n<blockquote>\n<div><p>The order of the spline interpolation, default is 3.\nThe order has to be in the range 0-5.</p>\n</div></blockquote>\n<p><strong>mode</strong> : str, optional</p>\n<blockquote>\n<div><p>Points outside the boundaries of the input are filled according\nto the given mode (&#8216;constant&#8217;, &#8216;nearest&#8217;, &#8216;reflect&#8217;, &#8216;mirror&#8217; or &#8216;wrap&#8217;).\nDefault is &#8216;constant&#8217;.</p>\n</div></blockquote>\n<p><strong>cval</strong> : scalar, optional</p>\n<blockquote>\n<div><p>Value used for points outside the boundaries of the input if\n<code class=\"docutils literal\"><span class=\"pre\">mode='constant'</span></code>. Default is 0.0</p>\n</div></blockquote>\n<p><strong>prefilter</strong> : bool, optional</p>\n<blockquote>\n<div><p>The parameter prefilter determines if the input is pre-filtered with\n<cite>spline_filter</cite> before interpolation (necessary for spline\ninterpolation of order &gt; 1).  If False, it is assumed that the input is\nalready filtered. Default is True.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>map_coordinates</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The result of transforming the input. The shape of the output is\nderived from that of <cite>coordinates</cite> by dropping the first axis.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">spline_filter</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">geometric_transform</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">scipy.interpolate</span></code></p>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"k\">import</span> <span class=\"n\">ndimage</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mf\">12.</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span>\n<span class=\"go\">array([[  0.,   1.,   2.],</span>\n<span class=\"go\">       [  3.,   4.,   5.],</span>\n<span class=\"go\">       [  6.,   7.,   8.],</span>\n<span class=\"go\">       [  9.,  10.,  11.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">map_coordinates</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"p\">[[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 2.,  7.])</span>\n</pre></div>\n</div>\n<p>Above, the interpolated value of a[0.5, 0.5] gives output[0], while\na[2, 1] is output[1].</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">inds</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">map_coordinates</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">inds</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cval</span><span class=\"o\">=-</span><span class=\"mf\">33.3</span><span class=\"p\">)</span>\n<span class=\"go\">array([  2. , -33.3])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">map_coordinates</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">inds</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 2.,  8.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">map_coordinates</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">inds</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cval</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">)</span>\n<span class=\"go\">array([ True, False], dtype=bool)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id284\">\n<h3>multi_voxel_fit<a class=\"headerlink\" href=\"#id284\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.multi_voxel_fit\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">multi_voxel_fit</code><span class=\"sig-paren\">(</span><em>single_voxel_fit</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.multi_voxel_fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Method decorator to turn a single voxel model fit\ndefinition into a multi voxel model fit definition</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pdf-interp-coords\">\n<h3>pdf_interp_coords<a class=\"headerlink\" href=\"#pdf-interp-coords\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.pdf_interp_coords\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">pdf_interp_coords</code><span class=\"sig-paren\">(</span><em>sphere</em>, <em>rradius</em>, <em>origin</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.pdf_interp_coords\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Precompute coordinates for ODF calculation from the PDF</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : object,</p>\n<blockquote>\n<div><p>Sphere</p>\n</div></blockquote>\n<p><strong>rradius</strong> : array, shape (N,)</p>\n<blockquote>\n<div><p>line interpolation points</p>\n</div></blockquote>\n<p><strong>origin</strong> : array, shape (3,)</p>\n<blockquote class=\"last\">\n<div><p>center of the grid</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pdf-odf\">\n<h3>pdf_odf<a class=\"headerlink\" href=\"#pdf-odf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.pdf_odf\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">pdf_odf</code><span class=\"sig-paren\">(</span><em>Pr</em>, <em>rradius</em>, <em>interp_coords</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.pdf_odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the real ODF from the diffusion propagator(PDF) Pr</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>Pr</strong> : array, shape (X, X, X)</p>\n<blockquote>\n<div><p>probability density function</p>\n</div></blockquote>\n<p><strong>rradius</strong> : array, shape (N,)</p>\n<blockquote>\n<div><p>interpolation range on the radius</p>\n</div></blockquote>\n<p><strong>interp_coords</strong> : array, shape (3, M, N)</p>\n<blockquote class=\"last\">\n<div><p>coordinates in the pdf for interpolating the odf</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"project-hemisph-bvecs\">\n<h3>project_hemisph_bvecs<a class=\"headerlink\" href=\"#project-hemisph-bvecs\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.project_hemisph_bvecs\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">project_hemisph_bvecs</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.project_hemisph_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Project any near identical bvecs to the other hemisphere</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : object,</p>\n<blockquote class=\"last\">\n<div><p>GradientTable</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Useful only when working with some types of dsi data.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"threshold-propagator\">\n<h3>threshold_propagator<a class=\"headerlink\" href=\"#threshold-propagator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dsi.threshold_propagator\">\n<code class=\"descclassname\">dipy.reconst.dsi.</code><code class=\"descname\">threshold_propagator</code><span class=\"sig-paren\">(</span><em>P</em>, <em>estimated_snr=15.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dsi.threshold_propagator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies hard threshold on the propagator to remove background noise for the\ndeconvolution.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id285\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dti.ReconstModel\" title=\"dipy.reconst.dti.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstModel</span></code></a><a class=\"headerlink\" href=\"#id285\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dti.ReconstModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">ReconstModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.ReconstModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class for signal reconstruction models</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.ReconstModel.fit\" title=\"dipy.reconst.dti.ReconstModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.ReconstModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.ReconstModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialization of the abstract class for signal reconstruction models</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gtab</strong> : GradientTable class instance</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.ReconstModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.ReconstModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id286\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit\" title=\"dipy.reconst.dti.TensorFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">TensorFit</span></code></a><a class=\"headerlink\" href=\"#id286\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dti.TensorFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">TensorFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em>, <em>model_S0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.S0_hat\" title=\"dipy.reconst.dti.TensorFit.S0_hat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">S0_hat</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.directions\" title=\"dipy.reconst.dti.TensorFit.directions\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directions</span></code></a></td>\n<td>For tracking - return the primary direction in each voxel</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.evals\" title=\"dipy.reconst.dti.TensorFit.evals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evals</span></code></a></td>\n<td>Returns the eigenvalues of the tensor as an array</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.evecs\" title=\"dipy.reconst.dti.TensorFit.evecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evecs</span></code></a></td>\n<td>Returns the eigenvectors of the tensor as an array, columnwise</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.quadratic_form\" title=\"dipy.reconst.dti.TensorFit.quadratic_form\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quadratic_form</span></code></a></td>\n<td>Calculates the 3x3 diffusion tensor for each voxel</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.shape\" title=\"dipy.reconst.dti.TensorFit.shape\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.ad\" title=\"dipy.reconst.dti.TensorFit.ad\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ad</span></code></a>()</td>\n<td>Axial diffusivity (AD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.adc\" title=\"dipy.reconst.dti.TensorFit.adc\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">adc</span></code></a>(sphere)</td>\n<td>Calculate the apparent diffusion coefficient (ADC) in each direction on</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.color_fa\" title=\"dipy.reconst.dti.TensorFit.color_fa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">color_fa</span></code></a>()</td>\n<td>Color fractional anisotropy of diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.fa\" title=\"dipy.reconst.dti.TensorFit.fa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fa</span></code></a>()</td>\n<td>Fractional anisotropy (FA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.ga\" title=\"dipy.reconst.dti.TensorFit.ga\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ga</span></code></a>()</td>\n<td>Geodesic anisotropy (GA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.linearity\" title=\"dipy.reconst.dti.TensorFit.linearity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">linearity</span></code></a>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.lower_triangular\" title=\"dipy.reconst.dti.TensorFit.lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code></a>([b0])</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.md\" title=\"dipy.reconst.dti.TensorFit.md\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">md</span></code></a>()</td>\n<td>Mean diffusitivity (MD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.mode\" title=\"dipy.reconst.dti.TensorFit.mode\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mode</span></code></a>()</td>\n<td>Tensor mode calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.odf\" title=\"dipy.reconst.dti.TensorFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>The diffusion orientation distribution function (dODF).</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.planarity\" title=\"dipy.reconst.dti.TensorFit.planarity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">planarity</span></code></a>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.predict\" title=\"dipy.reconst.dti.TensorFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(gtab[,&nbsp;S0,&nbsp;step])</td>\n<td>Given a model fit, predict the signal on the vertices of a sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.rd\" title=\"dipy.reconst.dti.TensorFit.rd\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rd</span></code></a>()</td>\n<td>Radial diffusitivity (RD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.sphericity\" title=\"dipy.reconst.dti.TensorFit.sphericity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphericity</span></code></a>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit.trace\" title=\"dipy.reconst.dti.TensorFit.trace\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code></a>()</td>\n<td>Trace of the tensor calculated from cached eigenvalues.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em>, <em>model_S0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a TensorFit class instance.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dti.TensorFit.S0_hat\">\n<code class=\"descname\">S0_hat</code><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.S0_hat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.ad\">\n<code class=\"descname\">ad</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.ad\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Axial diffusivity (AD) calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ad</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated AD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[AD = \\lambda_1\\]</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.adc\">\n<code class=\"descname\">adc</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.adc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the apparent diffusion coefficient (ADC) in each direction on\nthe sphere for each voxel in the data</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere class instance</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>adc</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The estimates of the apparent diffusion coefficient in every\ndirection on the input sphere</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The calculation of ADC, relies on the following relationship:</p>\n<div class=\"math\">\n\\[ADC = \\vec{b} Q \\vec{b}^T\\]</div>\n<p>Where Q is the quadratic form of the tensor.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.color_fa\">\n<code class=\"descname\">color_fa</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.color_fa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Color fractional anisotropy of diffusion tensor</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dti.TensorFit.directions\">\n<code class=\"descname\">directions</code><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>For tracking - return the primary direction in each voxel</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dti.TensorFit.evals\">\n<code class=\"descname\">evals</code><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.evals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the eigenvalues of the tensor as an array</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dti.TensorFit.evecs\">\n<code class=\"descname\">evecs</code><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.evecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the eigenvectors of the tensor as an array, columnwise</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.fa\">\n<code class=\"descname\">fa</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.fa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fractional anisotropy (FA) calculated from cached eigenvalues.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.ga\">\n<code class=\"descname\">ga</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.ga\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Geodesic anisotropy (GA) calculated from cached eigenvalues.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.linearity\">\n<code class=\"descname\">linearity</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.linearity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>linearity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated linearity of the diffusion tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id287\">[1]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Linearity is calculated with the following equation:</p>\n<div class=\"math\">\n\\[Linearity =\n\\frac{\\lambda_1-\\lambda_2}{\\lambda_1+\\lambda_2+\\lambda_3}\\]</div>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz</dt>\n<dd>F., &#8220;Geometrical diffusion measures for MRI from tensor basis\nanalysis&#8221; in Proc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.lower_triangular\">\n<code class=\"descname\">lower_triangular</code><span class=\"sig-paren\">(</span><em>b0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.md\">\n<code class=\"descname\">md</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.md\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Mean diffusitivity (MD) calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>md</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated MD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>MD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[MD = \\frac{\\lambda_1+\\lambda_2+\\lambda_3}{3}\\]</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.mode\">\n<code class=\"descname\">mode</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.mode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Tensor mode calculated from cached eigenvalues.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The diffusion orientation distribution function (dODF). This is an\nestimate of the diffusion distance in each direction</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere class instance.</p>\n<blockquote>\n<div><p>The dODF is calculated in the vertices of this input.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>odf</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The diffusion distance in every direction of the sphere in every\nvoxel in the input data.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>This is based on equation 3 in <a class=\"reference internal\" href=\"#id360\" id=\"id288\">[Aganj2010]</a>. To re-derive it from\nscratch, follow steps in <a class=\"reference internal\" href=\"#id361\" id=\"id289\">[Descoteaux2008]</a>, Section 7.9 Equation\n7.24 but with an <span class=\"math\">\\(r^2\\)</span> term in the integral.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"id290\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Aganj2010]</td><td>Aganj, I., Lenglet, C., Sapiro, G., Yacoub, E., Ugurbil,\nK., &amp; Harel, N. (2010). Reconstruction of the orientation\ndistribution function in single- and multiple-shell q-ball imaging\nwithin constant solid angle. Magnetic Resonance in Medicine, 64(2),\n554-566. doi:DOI: 10.1002/mrm.22365</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"id291\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Descoteaux2008]</td><td>Descoteaux, M. (2008). PhD Thesis: High Angular\nResolution Diffusion MRI: from Local Estimation to Segmentation and\nTractography. <a class=\"reference external\" href=\"ftp://ftp-sop.inria.fr/athena/Publications/PhDs/descoteaux_thesis.pdf\">ftp://ftp-sop.inria.fr/athena/Publications/PhDs/descoteaux_thesis.pdf</a></td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.planarity\">\n<code class=\"descname\">planarity</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.planarity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sphericity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated sphericity of the diffusion tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id292\">[1]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz</dt>\n<dd>F., &#8220;Geometrical diffusion measures for MRI from tensor basis\nanalysis&#8221; in Proc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>S0=None</em>, <em>step=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a model fit, predict the signal on the vertices of a sphere</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>This encodes the directions for which a prediction is made</p>\n</div></blockquote>\n<p><strong>S0</strong> : float array</p>\n<blockquote>\n<div><p>The mean non-diffusion weighted signal in each voxel. Default:\nThe fitted S0 value in all voxels if it was fitted. Otherwise 1 in\nall voxels.</p>\n</div></blockquote>\n<p><strong>step</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>The chunk size as a number of voxels. Optional parameter with\ndefault value 10,000.</p>\n<p>In order to increase speed of processing, tensor fitting is done\nsimultaneously over many voxels. This parameter sets the number of\nvoxels that will be fit at once in each iteration. A larger step\nvalue should speed things up, but it will also take up more memory.\nIt is advisable to keep an eye on memory consumption as this value\nis increased.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The predicted signal is given by:</p>\n<div class=\"math\">\n\\[S(\\theta, b) = S_0 * e^{-b ADC}\\]</div>\n<p>Where:\n.. math</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ADC</span> <span class=\"o\">=</span> \\<span class=\"n\">theta</span> <span class=\"n\">Q</span> \\<span class=\"n\">theta</span><span class=\"o\">^</span><span class=\"n\">T</span>\n</pre></div>\n</div>\n<p><span class=\"math\">\\(\\theta\\)</span> is a unit vector pointing at any direction on the sphere for\nwhich a signal is to be predicted and <span class=\"math\">\\(b\\)</span> is the b value provided in\nthe GradientTable input for that direction</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dti.TensorFit.quadratic_form\">\n<code class=\"descname\">quadratic_form</code><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.quadratic_form\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the 3x3 diffusion tensor for each voxel</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.rd\">\n<code class=\"descname\">rd</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.rd\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radial diffusitivity (RD) calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rd</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated RD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[RD = \\frac{\\lambda_2 + \\lambda_3}{2}\\]</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dti.TensorFit.shape\">\n<code class=\"descname\">shape</code><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.sphericity\">\n<code class=\"descname\">sphericity</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.sphericity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sphericity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated sphericity of the diffusion tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id293\">[1]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz</dt>\n<dd>F., &#8220;Geometrical diffusion measures for MRI from tensor basis\nanalysis&#8221; in Proc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorFit.trace\">\n<code class=\"descname\">trace</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorFit.trace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Trace of the tensor calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>trace</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated trace.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The trace is calculated with the following equation:</p>\n<div class=\"math\">\n\\[trace = \\lambda_1 + \\lambda_2 + \\lambda_3\\]</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id294\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorModel\" title=\"dipy.reconst.dti.TensorModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">TensorModel</span></code></a><a class=\"headerlink\" href=\"#id294\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dti.TensorModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">TensorModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='WLS'</em>, <em>return_S0_hat=False</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>Diffusion Tensor</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorModel.fit\" title=\"dipy.reconst.dti.TensorModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method of the DTI model class</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorModel.predict\" title=\"dipy.reconst.dti.TensorModel.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(dti_params[,&nbsp;S0])</td>\n<td>Predict a signal for this TensorModel class instance given parameters.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='WLS'</em>, <em>return_S0_hat=False</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A Diffusion Tensor Model <a class=\"reference internal\" href=\"#r270\" id=\"id295\">[R270]</a>, <a class=\"reference internal\" href=\"#r271\" id=\"id296\">[R271]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable class instance</p>\n<p><strong>fit_method</strong> : str or callable</p>\n<blockquote>\n<div><p>str can be one of the following:</p>\n<dl class=\"docutils\">\n<dt>&#8216;WLS&#8217; for weighted least squares</dt>\n<dd><p class=\"first last\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">dti.wls_fit_tensor()</span></code></p>\n</dd>\n<dt>&#8216;LS&#8217; or &#8216;OLS&#8217; for ordinary least squares</dt>\n<dd><p class=\"first last\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">dti.ols_fit_tensor()</span></code></p>\n</dd>\n<dt>&#8216;NLLS&#8217; for non-linear least-squares</dt>\n<dd><p class=\"first last\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">dti.nlls_fit_tensor()</span></code></p>\n</dd>\n<dt>&#8216;RT&#8217; or &#8216;restore&#8217; or &#8216;RESTORE&#8217; for RESTORE robust tensor</dt>\n<dd><p class=\"first last\">fitting <a class=\"reference internal\" href=\"#r272\" id=\"id297\">[R272]</a>\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">dti.restore_fit_tensor()</span></code></p>\n</dd>\n<dt>callable has to have the signature:</dt>\n<dd><p class=\"first last\">fit_method(design_matrix, data, <a href=\"#id298\"><span class=\"problematic\" id=\"id299\">*</span></a>args, <a href=\"#id300\"><span class=\"problematic\" id=\"id301\">**</span></a>kwargs)</p>\n</dd>\n</dl>\n</div></blockquote>\n<p><strong>return_S0_hat</strong> : bool</p>\n<blockquote>\n<div><p>Boolean to return (True) or not (False) the S0 values for the fit.</p>\n</div></blockquote>\n<p><strong>args, kwargs</strong> : arguments and key-word arguments passed to the</p>\n<blockquote>\n<div><p>fit_method. See dti.wls_fit_tensor, dti.ols_fit_tensor for details</p>\n</div></blockquote>\n<p><strong>min_signal</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>The minimum signal value. Needs to be a strictly positive\nnumber. Default: minimal signal in the data provided to <cite>fit</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r270\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R270]</td><td><em>(<a class=\"fn-backref\" href=\"#id295\">1</a>, <a class=\"fn-backref\" href=\"#id302\">2</a>)</em> Basser, P.J., Mattiello, J., LeBihan, D., 1994. Estimation of\nthe effective self-diffusion tensor from the NMR spin echo. J Magn\nReson B 103, 247-254.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r271\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R271]</td><td><em>(<a class=\"fn-backref\" href=\"#id296\">1</a>, <a class=\"fn-backref\" href=\"#id303\">2</a>)</em> Basser, P., Pierpaoli, C., 1996. Microstructural and\nphysiological features of tissues elucidated by quantitative\ndiffusion-tensor MRI.  Journal of Magnetic Resonance 111, 209-219.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r272\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R272]</td><td><em>(<a class=\"fn-backref\" href=\"#id297\">1</a>, <a class=\"fn-backref\" href=\"#id304\">2</a>)</em> Lin-Ching C., Jones D.K., Pierpaoli, C. 2005. RESTORE: Robust\nestimation of tensors by outlier rejection. MRM 53: 1088-1095</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method of the DTI model class</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array</p>\n<blockquote>\n<div><p>The measured signal from one voxel.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>A boolean array used to mark the coordinates in the data that\nshould be analyzed that has the shape data.shape[:-1]</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.TensorModel.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>dti_params</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.TensorModel.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict a signal for this TensorModel class instance given parameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dti_params</strong> : ndarray</p>\n<blockquote>\n<div><p>The last dimension should have 12 tensor parameters: 3\neigenvalues, followed by the 3 eigenvectors</p>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray</p>\n<blockquote class=\"last\">\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id305\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.dti.range\" title=\"dipy.reconst.dti.range\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></code></a><a class=\"headerlink\" href=\"#id305\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.dti.range\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">range</code><span class=\"sig-paren\">(</span><em>stop</em><span class=\"sig-paren\">)</span> &#x2192; range object<a class=\"headerlink\" href=\"#dipy.reconst.dti.range\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>range(start, stop[, step]) -&gt; range object</p>\n<p>Return an object that produces a sequence of integers from start (inclusive)\nto stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.\nstart defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.\nThese are exactly the valid indices for a list of 4 elements.\nWhen step is given, it specifies the increment (or decrement).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.range.count\" title=\"dipy.reconst.dti.range.count\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">count</span></code></a>(...)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.dti.range.index\" title=\"dipy.reconst.dti.range.index\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">index</span></code></a>((value,&nbsp;[start,&nbsp;...)</td>\n<td>Raise ValueError if the value is not present.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.range.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.range.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.range.count\">\n<code class=\"descname\">count</code><span class=\"sig-paren\">(</span><em>value</em><span class=\"sig-paren\">)</span> &#x2192; integer -- return number of occurrences of value<a class=\"headerlink\" href=\"#dipy.reconst.dti.range.count\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.dti.range.index\">\n<code class=\"descname\">index</code><span class=\"sig-paren\">(</span><em>value</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>stop</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"sig-paren\">)</span> &#x2192; integer -- return index of value.<a class=\"headerlink\" href=\"#dipy.reconst.dti.range.index\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raise ValueError if the value is not present.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dti.range.start\">\n<code class=\"descname\">start</code><a class=\"headerlink\" href=\"#dipy.reconst.dti.range.start\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dti.range.step\">\n<code class=\"descname\">step</code><a class=\"headerlink\" href=\"#dipy.reconst.dti.range.step\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.dti.range.stop\">\n<code class=\"descname\">stop</code><a class=\"headerlink\" href=\"#dipy.reconst.dti.range.stop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"apparent-diffusion-coef\">\n<h3>apparent_diffusion_coef<a class=\"headerlink\" href=\"#apparent-diffusion-coef\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.apparent_diffusion_coef\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">apparent_diffusion_coef</code><span class=\"sig-paren\">(</span><em>q_form</em>, <em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.apparent_diffusion_coef\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the apparent diffusion coefficient (ADC) in each direction of a\nsphere.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>q_form</strong> : ndarray</p>\n<blockquote>\n<div><p>The quadratic form of a tensor, or an array with quadratic forms of\ntensors. Should be of shape (..., 3, 3)</p>\n</div></blockquote>\n<p><strong>sphere</strong> : a Sphere class instance</p>\n<blockquote class=\"last\">\n<div><p>The ADC will be calculated for each of the vertices in the sphere</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The calculation of ADC, relies on the following relationship:</p>\n<div class=\"math\">\n\\[ADC = \\vec{b} Q \\vec{b}^T\\]</div>\n<p>Where Q is the quadratic form of the tensor.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id306\">\n<h3>auto_attr<a class=\"headerlink\" href=\"#id306\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.auto_attr\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">auto_attr</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.auto_attr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator to create OneTimeProperty attributes.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>func</strong> : method</p>\n<blockquote class=\"last\">\n<div><p>The method that will be called the first time to compute a value.\nAfterwards, the method&#8217;s name will be a standard attribute holding the\nvalue of this computation.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MagicProp</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"mi\">99</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">MagicProp</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span>\n<span class=\"go\">99</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id307\">\n<h3>axial_diffusivity<a class=\"headerlink\" href=\"#id307\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.axial_diffusivity\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">axial_diffusivity</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.axial_diffusivity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Axial Diffusivity (AD) of a diffusion tensor.\nAlso called parallel diffusivity.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor, must be sorted in descending order\nalong <cite>axis</cite>.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ad</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated AD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>AD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[AD = \\lambda_1\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"color-fa\">\n<h3>color_fa<a class=\"headerlink\" href=\"#color-fa\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.color_fa\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">color_fa</code><span class=\"sig-paren\">(</span><em>fa</em>, <em>evecs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.color_fa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Color fractional anisotropy of diffusion tensor</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>fa</strong> : array-like</p>\n<blockquote>\n<div><p>Array of the fractional anisotropy (can be 1D, 2D or 3D)</p>\n</div></blockquote>\n<p><strong>evecs</strong> : array-like</p>\n<blockquote>\n<div><p>eigen vectors from the tensor model</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rgb</strong> : Array with 3 channels for each color as the last dimension.</p>\n<blockquote class=\"last\">\n<div><p>Colormap of the FA with red for the x value, y for the green\nvalue and z for the blue value.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id308\">\n<h3>decompose_tensor<a class=\"headerlink\" href=\"#id308\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.decompose_tensor\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">decompose_tensor</code><span class=\"sig-paren\">(</span><em>tensor</em>, <em>min_diffusivity=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.decompose_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns eigenvalues and eigenvectors given a diffusion tensor</p>\n<p>Computes tensor eigen decomposition to calculate eigenvalues and\neigenvectors (Basser et al., 1994a).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : array (..., 3, 3)</p>\n<blockquote>\n<div><p>Hermitian matrix representing a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>min_diffusivity</strong> : float</p>\n<blockquote>\n<div><p>Because negative eigenvalues are not physical and small eigenvalues,\nmuch smaller than the diffusion weighting, cause quite a lot of noise\nin metrics such as fa, diffusivity values smaller than\n<cite>min_diffusivity</cite> are replaced with <cite>min_diffusivity</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>eigvals</strong> : array (..., 3)</p>\n<blockquote>\n<div><p>Eigenvalues from eigen decomposition of the tensor. Negative\neigenvalues are replaced by zero. Sorted from largest to smallest.</p>\n</div></blockquote>\n<p><strong>eigvecs</strong> : array (..., 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>Associated eigenvectors from eigen decomposition of the tensor.\nEigenvectors are columnar (e.g. eigvecs[..., :, j] is associated with\neigvals[..., j])</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id309\">\n<h3>design_matrix<a class=\"headerlink\" href=\"#id309\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.design_matrix\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">design_matrix</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>dtype=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.design_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs design matrix for DTI weighted least squares or\nleast squares fitting. (Basser et al., 1994a)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : A GradientTable class instance</p>\n<p><strong>dtype</strong> : string</p>\n<blockquote>\n<div><p>Parameter to control the dtype of returned designed matrix</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array (g,7)</p>\n<blockquote class=\"last\">\n<div><p>Design matrix or B matrix assuming Gaussian distributed tensor model\ndesign_matrix[j, :] = (Bxx, Byy, Bzz, Bxy, Bxz, Byz, dummy)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"determinant\">\n<h3>determinant<a class=\"headerlink\" href=\"#determinant\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.determinant\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">determinant</code><span class=\"sig-paren\">(</span><em>q_form</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.determinant\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The determinant of a tensor, given in quadratic form</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>q_form</strong> : ndarray</p>\n<blockquote>\n<div><p>The quadratic form of a tensor, or an array with quadratic forms of\ntensors. Should be of shape (x, y, z, 3, 3) or (n, 3, 3) or (3, 3).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>det</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>The determinant of the tensor in each spatial coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"deviatoric\">\n<h3>deviatoric<a class=\"headerlink\" href=\"#deviatoric\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.deviatoric\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">deviatoric</code><span class=\"sig-paren\">(</span><em>q_form</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.deviatoric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the deviatoric (anisotropic) part of the tensor <a class=\"reference internal\" href=\"#r273\" id=\"id310\">[R273]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>q_form</strong> : ndarray</p>\n<blockquote>\n<div><p>The quadratic form of a tensor, or an array with quadratic forms of\ntensors. Should be of shape (x,y,z,3,3) or (n, 3, 3) or (3,3).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>A_squiggle</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The deviatoric part of the tensor in each spatial coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The deviatoric part of the tensor is defined as (equations 3-5 in <a class=\"reference internal\" href=\"#r273\" id=\"id311\">[R273]</a>):</p>\n<div class=\"math\">\n\\[\\widetilde{A} = A - \\bar{A}\\]</div>\n<p>Where <span class=\"math\">\\(A\\)</span> is the tensor quadratic form and <span class=\"math\">\\(\\bar{A}\\)</span> is the anisotropic\npart of the tensor.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r273\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R273]</td><td><em>(<a class=\"fn-backref\" href=\"#id310\">1</a>, <a class=\"fn-backref\" href=\"#id311\">2</a>)</em> Daniel B. Ennis and G. Kindlmann, &#8220;Orthogonal Tensor\nInvariants and the Analysis of Diffusion Tensor Magnetic Resonance\nImages&#8221;, Magnetic Resonance in Medicine, vol. 55, no. 1, pp. 136-146,\n2006.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"eig-from-lo-tri\">\n<h3>eig_from_lo_tri<a class=\"headerlink\" href=\"#eig-from-lo-tri\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.eig_from_lo_tri\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">eig_from_lo_tri</code><span class=\"sig-paren\">(</span><em>data</em>, <em>min_diffusivity=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.eig_from_lo_tri\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates tensor eigenvalues/eigenvectors from an array containing the\nlower diagonal form of the six unique tensor elements.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array_like (..., 6)</p>\n<blockquote>\n<div><p>diffusion tensors elements stored in lower triangular order</p>\n</div></blockquote>\n<p><strong>min_diffusivity</strong> : float</p>\n<blockquote>\n<div><p>See decompose_tensor()</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>dti_params</strong> : array (..., 12)</p>\n<blockquote class=\"last\">\n<div><p>Eigen-values and eigen-vectors of the same array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"eigh\">\n<h3>eigh<a class=\"headerlink\" href=\"#eigh\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.eigh\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">eigh</code><span class=\"sig-paren\">(</span><em>a</em>, <em>UPLO='L'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.eigh\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Iterate over <cite>np.linalg.eigh</cite> if it doesn&#8217;t support vectorized operation</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a</strong> : array_like (..., M, M)</p>\n<blockquote>\n<div><p>Hermitian/Symmetric matrices whose eigenvalues and\neigenvectors are to be computed.</p>\n</div></blockquote>\n<p><strong>UPLO</strong> : {&#8216;L&#8217;, &#8216;U&#8217;}, optional</p>\n<blockquote>\n<div><p>Specifies whether the calculation is done with the lower triangular\npart of <cite>a</cite> (&#8216;L&#8217;, default) or the upper triangular part (&#8216;U&#8217;).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>w</strong> : ndarray (..., M)</p>\n<blockquote>\n<div><p>The eigenvalues in ascending order, each repeated according to\nits multiplicity.</p>\n</div></blockquote>\n<p><strong>v</strong> : ndarray (..., M, M)</p>\n<blockquote>\n<div><p>The column <code class=\"docutils literal\"><span class=\"pre\">v[...,</span> <span class=\"pre\">:,</span> <span class=\"pre\">i]</span></code> is the normalized eigenvector corresponding\nto the eigenvalue <code class=\"docutils literal\"><span class=\"pre\">w[...,</span> <span class=\"pre\">i]</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>LinAlgError</strong> :</p>\n<blockquote class=\"last\">\n<div><p>If the eigenvalue computation does not converge.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">np.linalg.eigh</span></code></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id312\">\n<h3>fractional_anisotropy<a class=\"headerlink\" href=\"#id312\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.fractional_anisotropy\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">fractional_anisotropy</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.fractional_anisotropy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fractional anisotropy (FA) of a diffusion tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>fa</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated FA. Range is 0 &lt;= FA &lt;= 1.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>FA is calculated using the following equation:</p>\n<div class=\"math\">\n\\[FA = \\sqrt{\\frac{1}{2}\\frac{(\\lambda_1-\\lambda_2)^2+(\\lambda_1-\n            \\lambda_3)^2+(\\lambda_2-\\lambda_3)^2}{\\lambda_1^2+\n            \\lambda_2^2+\\lambda_3^2}}\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id313\">\n<h3>from_lower_triangular<a class=\"headerlink\" href=\"#id313\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.from_lower_triangular\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">from_lower_triangular</code><span class=\"sig-paren\">(</span><em>D</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.from_lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a tensor given the six unique tensor elements</p>\n<p>Given the six unique tensor elments (in the order: Dxx, Dxy, Dyy, Dxz, Dyz,\nDzz) returns a 3 by 3 tensor. All elements after the sixth are ignored.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>D</strong> : array_like, (..., &gt;6)</p>\n<blockquote>\n<div><p>Unique elements of the tensors</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : ndarray (..., 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>3 by 3 tensors</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"geodesic-anisotropy\">\n<h3>geodesic_anisotropy<a class=\"headerlink\" href=\"#geodesic-anisotropy\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.geodesic_anisotropy\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">geodesic_anisotropy</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.geodesic_anisotropy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Geodesic anisotropy (GA) of a diffusion tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ga</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated GA. In the range 0 to +infinity</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>GA is calculated using the following equation given in <a class=\"reference internal\" href=\"#r274\" id=\"id314\">[R274]</a>:</p>\n<div class=\"math\">\n\\[GA = \\sqrt{\\sum_{i=1}^3\n\\log^2{\\left ( \\lambda_i/&lt;\\mathbf{D}&gt; \\right )}},\n\\quad \\textrm{where} \\quad &lt;\\mathbf{D}&gt; =\n(\\lambda_1\\lambda_2\\lambda_3)^{1/3}\\]</div>\n<p>Note that the notation, <span class=\"math\">\\(&lt;D&gt;\\)</span>, is often used as the mean diffusivity (MD)\nof the diffusion tensor and can lead to confusions in the literature\n(see <a class=\"reference internal\" href=\"#r274\" id=\"id315\">[R274]</a> versus <a class=\"reference internal\" href=\"#r275\" id=\"id316\">[R275]</a> versus <a class=\"reference internal\" href=\"#r276\" id=\"id317\">[R276]</a> for example). Reference <a class=\"reference internal\" href=\"#r275\" id=\"id318\">[R275]</a> defines\ngeodesic anisotropy (GA) with <span class=\"math\">\\(&lt;D&gt;\\)</span> as the MD in the denominator of the\nsum. This is wrong. The original paper <a class=\"reference internal\" href=\"#r274\" id=\"id319\">[R274]</a> defines GA with\n<span class=\"math\">\\(&lt;D&gt; = det(D)^{1/3}\\)</span>, as the isotropic part of the distance. This might be\nan explanation for the confusion. The isotropic part of the diffusion\ntensor in Euclidean space is the MD whereas the isotropic part of the\ntensor in log-Euclidean space is <span class=\"math\">\\(det(D)^{1/3}\\)</span>. The Appendix of <a class=\"reference internal\" href=\"#r274\" id=\"id320\">[R274]</a> and\nlog-Euclidean derivations from <a class=\"reference internal\" href=\"#r276\" id=\"id321\">[R276]</a> are clear on this. Hence, all that to\nsay that <span class=\"math\">\\(&lt;D&gt; = det(D)^{1/3}\\)</span> here for the GA definition and not MD.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r274\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R274]</td><td><em>(<a class=\"fn-backref\" href=\"#id314\">1</a>, <a class=\"fn-backref\" href=\"#id315\">2</a>, <a class=\"fn-backref\" href=\"#id319\">3</a>, <a class=\"fn-backref\" href=\"#id320\">4</a>, <a class=\"fn-backref\" href=\"#id322\">5</a>)</em> P. G. Batchelor, M. Moakher, D. Atkinson, F. Calamante,\nA. Connelly, &#8220;A rigorous framework for diffusion tensor calculus&#8221;,\nMagnetic Resonance in Medicine, vol. 53, pp. 221-225, 2005.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r275\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R275]</td><td><em>(<a class=\"fn-backref\" href=\"#id316\">1</a>, <a class=\"fn-backref\" href=\"#id318\">2</a>, <a class=\"fn-backref\" href=\"#id323\">3</a>)</em> M. M. Correia, V. F. Newcombe, G.B. Williams.\n&#8220;Contrast-to-noise ratios for indices of anisotropy obtained from\ndiffusion MRI: a study with standard clinical b-values at 3T&#8221;.\nNeuroImage, vol. 57, pp. 1103-1115, 2011.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r276\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R276]</td><td><em>(<a class=\"fn-backref\" href=\"#id317\">1</a>, <a class=\"fn-backref\" href=\"#id321\">2</a>, <a class=\"fn-backref\" href=\"#id324\">3</a>)</em> A. D. Lee, etal, P. M. Thompson.\n&#8220;Comparison of fractional and geodesic anisotropy in diffusion tensor\nimages of 90 monozygotic and dizygotic twins&#8221;. 5th IEEE International\nSymposium on Biomedical Imaging (ISBI), pp. 943-946, May 2008.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r277\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id325\">[R277]</a></td><td>V. Arsigny, P. Fillard, X. Pennec, N. Ayache.\n&#8220;Log-Euclidean metrics for fast and simple calculus on diffusion\ntensors.&#8221; Magnetic Resonance in Medecine, vol 56, pp. 411-421, 2006.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id326\">\n<h3>get_sphere<a class=\"headerlink\" href=\"#id326\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.get_sphere\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">get_sphere</code><span class=\"sig-paren\">(</span><em>name='symmetric362'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.get_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>provide triangulated spheres</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>name</strong> : str</p>\n<blockquote>\n<div><p>which sphere - one of:\n* &#8216;symmetric362&#8217;\n* &#8216;symmetric642&#8217;\n* &#8216;symmetric724&#8217;\n* &#8216;repulsion724&#8217;\n* &#8216;repulsion100&#8217;\n* &#8216;repulsion200&#8217;</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>sphere</strong> : a dipy.core.sphere.Sphere class instance</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric362&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">faces</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">362</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">720</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">verts</span><span class=\"p\">,</span> <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;not a sphere name&#39;</span><span class=\"p\">)</span> \n<span class=\"gt\">Traceback (most recent call last):</span>\n    <span class=\"o\">...</span>\n<span class=\"gr\">DataError</span>: <span class=\"n\">No sphere called &quot;not a sphere name&quot;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gradient-table\">\n<h3>gradient_table<a class=\"headerlink\" href=\"#gradient-table\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.gradient_table\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">gradient_table</code><span class=\"sig-paren\">(</span><em>bvals</em>, <em>bvecs=None</em>, <em>big_delta=None</em>, <em>small_delta=None</em>, <em>b0_threshold=0</em>, <em>atol=0.01</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.gradient_table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A general function for creating diffusion MR gradients.</p>\n<p>It reads, loads and prepares scanner parameters like the b-values and\nb-vectors so that they can be useful during the reconstruction process.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>bvals</strong> : can be any of the four options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>an array of shape (N,) or (1, N) or (N, 1) with the b-values.</li>\n<li>a path for the file which contains an array like the above (1).</li>\n<li>an array of shape (N, 4) or (4, N). Then this parameter is\nconsidered to be a b-table which contains both bvals and bvecs. In\nthis case the next parameter is skipped.</li>\n<li>a path for the file which contains an array like the one at (3).</li>\n</ol>\n</div></blockquote>\n<p><strong>bvecs</strong> : can be any of two options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>an array of shape (N, 3) or (3, N) with the b-vectors.</li>\n<li>a path for the file which contains an array like the previous.</li>\n</ol>\n</div></blockquote>\n<p><strong>big_delta</strong> : float</p>\n<blockquote>\n<div><p>acquisition timing duration (default None)</p>\n</div></blockquote>\n<p><strong>small_delta</strong> : float</p>\n<blockquote>\n<div><p>acquisition timing duration (default None)</p>\n</div></blockquote>\n<p><strong>b0_threshold</strong> : float</p>\n<blockquote>\n<div><p>All b-values with values less than or equal to <cite>bo_threshold</cite> are\nconsidered as b0s i.e. without diffusion weighting.</p>\n</div></blockquote>\n<p><strong>atol</strong> : float</p>\n<blockquote>\n<div><p>All b-vectors need to be unit vectors up to a tolerance.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>gradients</strong> : GradientTable</p>\n<blockquote class=\"last\">\n<div><p>A GradientTable with all the gradient information.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<ol class=\"arabic simple\">\n<li>Often b0s (b-values which correspond to images without diffusion\nweighting) have 0 values however in some cases the scanner cannot\nprovide b0s of an exact 0 value and it gives a bit higher values\ne.g. 6 or 12. This is the purpose of the b0_threshold in the __init__.</li>\n<li>We assume that the minimum number of b-values is 7.</li>\n<li>B-vectors should be unit vectors.</li>\n</ol>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"k\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"o\">=</span><span class=\"mi\">1500</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sq2</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"isotropic\">\n<h3>isotropic<a class=\"headerlink\" href=\"#isotropic\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.isotropic\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">isotropic</code><span class=\"sig-paren\">(</span><em>q_form</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.isotropic\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the isotropic part of the tensor <a class=\"reference internal\" href=\"#r278\" id=\"id327\">[R278]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>q_form</strong> : ndarray</p>\n<blockquote>\n<div><p>The quadratic form of a tensor, or an array with quadratic forms of\ntensors. Should be of shape (x,y,z,3,3) or (n, 3, 3) or (3,3).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>A_hat: ndarray</strong> :</p>\n<blockquote class=\"last\">\n<div><p>The isotropic part of the tensor in each spatial coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The isotropic part of a tensor is defined as (equations 3-5 of <a class=\"reference internal\" href=\"#r278\" id=\"id328\">[R278]</a>):</p>\n<div class=\"math\">\n\\[\\bar{A} = \\frac{1}{2} tr(A) I\\]</div>\n<table class=\"docutils citation\" frame=\"void\" id=\"r278\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R278]</td><td><em>(<a class=\"fn-backref\" href=\"#id327\">1</a>, <a class=\"fn-backref\" href=\"#id328\">2</a>)</em> Daniel B. Ennis and G. Kindlmann, &#8220;Orthogonal Tensor\nInvariants and the Analysis of Diffusion Tensor Magnetic Resonance\nImages&#8221;, Magnetic Resonance in Medicine, vol. 55, no. 1, pp. 136-146,\n2006.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"iter-fit-tensor\">\n<h3>iter_fit_tensor<a class=\"headerlink\" href=\"#iter-fit-tensor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.iter_fit_tensor\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">iter_fit_tensor</code><span class=\"sig-paren\">(</span><em>step=10000.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.iter_fit_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wrap a fit_tensor func and iterate over chunks of data with given length</p>\n<p>Splits data into a number of chunks of specified size and iterates the\ndecorated fit_tensor function over them. This is useful to counteract the\ntemporary but significant memory usage increase in fit_tensor functions\nthat use vectorized operations and need to store large temporary arrays for\ntheir vectorized operations.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>step</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>The chunk size as a number of voxels. Optional parameter with default\nvalue 10,000.</p>\n<p>In order to increase speed of processing, tensor fitting is done\nsimultaneously over many voxels. This parameter sets the number of\nvoxels that will be fit at once in each iteration. A larger step value\nshould speed things up, but it will also take up more memory. It is\nadvisable to keep an eye on memory consumption as this value is\nincreased.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"linearity\">\n<h3>linearity<a class=\"headerlink\" href=\"#linearity\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.linearity\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">linearity</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.linearity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The linearity of the tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id329\">[1]</a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>linearity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated linearity of the diffusion tensor.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz F.,</dt>\n<dd>&#8220;Geometrical diffusion measures for MRI from tensor basis analysis&#8221; in\nProc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id330\">\n<h3>lower_triangular<a class=\"headerlink\" href=\"#id330\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.lower_triangular\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">lower_triangular</code><span class=\"sig-paren\">(</span><em>tensor</em>, <em>b0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the six lower triangular values of the tensor and a dummy variable\nif b0 is not None</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : array_like (..., 3, 3)</p>\n<blockquote>\n<div><p>a collection of 3, 3 diffusion tensors</p>\n</div></blockquote>\n<p><strong>b0</strong> : float</p>\n<blockquote>\n<div><p>if b0 is not none log(b0) is returned as the dummy variable</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>D</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>If b0 is none, then the shape will be (..., 6) otherwise (..., 7)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id331\">\n<h3>mean_diffusivity<a class=\"headerlink\" href=\"#id331\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.mean_diffusivity\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">mean_diffusivity</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.mean_diffusivity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Mean Diffusivity (MD) of a diffusion tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>md</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated MD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>MD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[MD = \\frac{\\lambda_1 + \\lambda_2 + \\lambda_3}{3}\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mode\">\n<h3>mode<a class=\"headerlink\" href=\"#mode\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.mode\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">mode</code><span class=\"sig-paren\">(</span><em>q_form</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.mode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Mode (MO) of a diffusion tensor <a class=\"reference internal\" href=\"#r279\" id=\"id332\">[R279]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>q_form</strong> : ndarray</p>\n<blockquote>\n<div><p>The quadratic form of a tensor, or an array with quadratic forms of\ntensors. Should be of shape (x, y, z, 3, 3) or (n, 3, 3) or (3, 3).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>mode</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated tensor mode in each spatial coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Mode ranges between -1 (linear anisotropy) and +1 (planar anisotropy)\nwith 0 representing orthotropy. Mode is calculated with the\nfollowing equation (equation 9 in <a class=\"reference internal\" href=\"#r279\" id=\"id333\">[R279]</a>):</p>\n<div class=\"math\">\n\\[Mode = 3*\\sqrt{6}*det(\\widetilde{A}/norm(\\widetilde{A}))\\]</div>\n<p>Where <span class=\"math\">\\(\\widetilde{A}\\)</span> is the deviatoric part of the tensor quadratic form.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r279\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R279]</td><td><em>(<a class=\"fn-backref\" href=\"#id332\">1</a>, <a class=\"fn-backref\" href=\"#id333\">2</a>, <a class=\"fn-backref\" href=\"#id334\">3</a>)</em> Daniel B. Ennis and G. Kindlmann, &#8220;Orthogonal Tensor\nInvariants and the Analysis of Diffusion Tensor Magnetic Resonance\nImages&#8221;, Magnetic Resonance in Medicine, vol. 55, no. 1, pp. 136-146,\n2006.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"nlls-fit-tensor\">\n<h3>nlls_fit_tensor<a class=\"headerlink\" href=\"#nlls-fit-tensor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.nlls_fit_tensor\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">nlls_fit_tensor</code><span class=\"sig-paren\">(</span><em>design_matrix</em>, <em>data</em>, <em>weighting=None</em>, <em>sigma=None</em>, <em>jac=True</em>, <em>return_S0_hat=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.nlls_fit_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit the tensor params using non-linear least-squares.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array (g, 7)</p>\n<blockquote>\n<div><p>Design matrix holding the covariants used to solve for the regression\ncoefficients.</p>\n</div></blockquote>\n<p><strong>data</strong> : array ([X, Y, Z, ...], g)</p>\n<blockquote>\n<div><p>Data or response variables holding the data. Note that the last\ndimension should contain the data. It makes no copies of data.</p>\n</div></blockquote>\n<p><strong>weighting: str</strong> :</p>\n<blockquote>\n<div><p>the weighting scheme to use in considering the\nsquared-error. Default behavior is to use uniform weighting. Other\noptions: &#8216;sigma&#8217; &#8216;gmm&#8217;</p>\n</div></blockquote>\n<p><strong>sigma: float</strong> :</p>\n<blockquote>\n<div><p>If the &#8216;sigma&#8217; weighting scheme is used, a value of sigma needs to be\nprovided here. According to [Chang2005], a good value to use is\n1.5267 * std(background_noise), where background_noise is estimated\nfrom some part of the image known to contain no signal (only noise).</p>\n</div></blockquote>\n<p><strong>jac</strong> : bool</p>\n<blockquote>\n<div><p>Use the Jacobian? Default: True</p>\n</div></blockquote>\n<p><strong>return_S0_hat</strong> : bool</p>\n<blockquote>\n<div><p>Boolean to return (True) or not (False) the S0 values for the fit.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>nlls_params: the eigen-values and eigen-vectors of the tensor in each</strong> :</p>\n<blockquote class=\"last\">\n<div><p>voxel.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"norm\">\n<h3>norm<a class=\"headerlink\" href=\"#norm\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.norm\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">norm</code><span class=\"sig-paren\">(</span><em>q_form</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.norm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the Frobenius norm of a tensor quadratic form</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>q_form: ndarray</strong> :</p>\n<blockquote>\n<div><p>The quadratic form of a tensor, or an array with quadratic forms of\ntensors. Should be of shape (x,y,z,3,3) or (n, 3, 3) or (3,3).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>norm</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The Frobenius norm of the 3,3 tensor q_form in each spatial\ncoordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">np.linalg.norm</span></code></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>The Frobenius norm is defined as:</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Math:</th><td class=\"field-body\">||A||_F = [sum_{i,j} abs(a_{i,j})^2]^{1/2}</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"ols-fit-tensor\">\n<h3>ols_fit_tensor<a class=\"headerlink\" href=\"#ols-fit-tensor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.ols_fit_tensor\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">ols_fit_tensor</code><span class=\"sig-paren\">(</span><em>design_matrix</em>, <em>data</em>, <em>return_S0_hat=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.ols_fit_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes ordinary least squares (OLS) fit to calculate self-diffusion\ntensor using a linear regression model <a class=\"footnote-reference\" href=\"#id337\" id=\"id336\">[1]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array (g, 7)</p>\n<blockquote>\n<div><p>Design matrix holding the covariants used to solve for the regression\ncoefficients.</p>\n</div></blockquote>\n<p><strong>data</strong> : array ([X, Y, Z, ...], g)</p>\n<blockquote>\n<div><p>Data or response variables holding the data. Note that the last\ndimension should contain the data. It makes no copies of data.</p>\n</div></blockquote>\n<p><strong>return_S0_hat</strong> : bool</p>\n<blockquote>\n<div><p>Boolean to return (True) or not (False) the S0 values for the fit.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>eigvals</strong> : array (..., 3)</p>\n<blockquote>\n<div><p>Eigenvalues from eigen decomposition of the tensor.</p>\n</div></blockquote>\n<p><strong>eigvecs</strong> : array (..., 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>Associated eigenvectors from eigen decomposition of the tensor.\nEigenvectors are columnar (e.g. eigvecs[:,j] is associated with\neigvals[j])</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">WLS_fit_tensor</span></code>, <a class=\"reference internal\" href=\"#dipy.reconst.dti.decompose_tensor\" title=\"dipy.reconst.dti.decompose_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">decompose_tensor</span></code></a>, <a class=\"reference internal\" href=\"#dipy.reconst.dti.design_matrix\" title=\"dipy.reconst.dti.design_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">design_matrix</span></code></a></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<div class=\"math\">\n\\[ \\begin{align}\\begin{aligned}\\begin{split}y = \\mathrm{data} \\\\\nX = \\mathrm{design matrix} \\\\\\end{split}\\\\\\hat{\\beta}_\\mathrm{OLS} = (X^T X)^{-1} X^T y\\end{aligned}\\end{align} \\]</div>\n<p class=\"rubric\">References</p>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id337\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[1]</td><td><em>(<a class=\"fn-backref\" href=\"#id10\">1</a>, <a class=\"fn-backref\" href=\"#id12\">2</a>, <a class=\"fn-backref\" href=\"#id19\">3</a>, <a class=\"fn-backref\" href=\"#id21\">4</a>, <a class=\"fn-backref\" href=\"#id22\">5</a>, <a class=\"fn-backref\" href=\"#id24\">6</a>, <a class=\"fn-backref\" href=\"#id31\">7</a>, <a class=\"fn-backref\" href=\"#id155\">8</a>, <a class=\"fn-backref\" href=\"#id157\">9</a>, <a class=\"fn-backref\" href=\"#id160\">10</a>, <a class=\"fn-backref\" href=\"#id161\">11</a>, <a class=\"fn-backref\" href=\"#id189\">12</a>, <a class=\"fn-backref\" href=\"#id190\">13</a>, <a class=\"fn-backref\" href=\"#id197\">14</a>, <a class=\"fn-backref\" href=\"#id198\">15</a>, <a class=\"fn-backref\" href=\"#id219\">16</a>, <a class=\"fn-backref\" href=\"#id256\">17</a>, <a class=\"fn-backref\" href=\"#id287\">18</a>, <a class=\"fn-backref\" href=\"#id292\">19</a>, <a class=\"fn-backref\" href=\"#id293\">20</a>, <a class=\"fn-backref\" href=\"#id329\">21</a>, <a class=\"fn-backref\" href=\"#id336\">22</a>, <a class=\"fn-backref\" href=\"#id338\">23</a>, <a class=\"fn-backref\" href=\"#id342\">24</a>, <a class=\"fn-backref\" href=\"#id357\">25</a>, <a class=\"fn-backref\" href=\"#id362\">26</a>, <a class=\"fn-backref\" href=\"#id363\">27</a>, <a class=\"fn-backref\" href=\"#id504\">28</a>)</em> Chung, SW., Lu, Y., Henry, R.G., 2006. Comparison of bootstrap\napproaches for estimation of uncertainties of DTI parameters.\nNeuroImage 33, 531-541.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pinv\">\n<h3>pinv<a class=\"headerlink\" href=\"#pinv\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.pinv\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">pinv</code><span class=\"sig-paren\">(</span><em>a</em>, <em>rcond=1e-15</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.pinv\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Vectorized version of <cite>numpy.linalg.pinv</cite></p>\n<p>If numpy version is less than 1.8, it falls back to iterating over\n<cite>np.linalg.pinv</cite> since there isn&#8217;t a vectorized version of <cite>np.linalg.svd</cite>\navailable.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a</strong> : array_like (..., M, N)</p>\n<blockquote>\n<div><p>Matrix to be pseudo-inverted.</p>\n</div></blockquote>\n<p><strong>rcond</strong> : float</p>\n<blockquote>\n<div><p>Cutoff for small singular values.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>B</strong> : ndarray (..., N, M)</p>\n<blockquote>\n<div><p>The pseudo-inverse of <cite>a</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>LinAlgError</strong> :</p>\n<blockquote class=\"last\">\n<div><p>If the SVD computation does not converge.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">np.linalg.pinv</span></code></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"planarity\">\n<h3>planarity<a class=\"headerlink\" href=\"#planarity\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.planarity\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">planarity</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.planarity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The planarity of the tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id338\">[1]</a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>linearity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated linearity of the diffusion tensor.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz F.,</dt>\n<dd>&#8220;Geometrical diffusion measures for MRI from tensor basis analysis&#8221; in\nProc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"quantize-evecs\">\n<h3>quantize_evecs<a class=\"headerlink\" href=\"#quantize-evecs\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.quantize_evecs\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">quantize_evecs</code><span class=\"sig-paren\">(</span><em>evecs</em>, <em>odf_vertices=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.quantize_evecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the closest orientation of an evenly distributed sphere</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evecs</strong> : ndarray</p>\n<p><strong>odf_vertices</strong> : None or ndarray</p>\n<blockquote>\n<div><p>If None, then set vertices from symmetric362 sphere.  Otherwise use\npassed ndarray as vertices</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>IN</strong> : ndarray</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id339\">\n<h3>radial_diffusivity<a class=\"headerlink\" href=\"#id339\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.radial_diffusivity\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">radial_diffusivity</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.radial_diffusivity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radial Diffusivity (RD) of a diffusion tensor.\nAlso called perpendicular diffusivity.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor, must be sorted in descending order\nalong <cite>axis</cite>.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rd</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated RD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[RD = \\frac{\\lambda_2 + \\lambda_3}{2}\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"restore-fit-tensor\">\n<h3>restore_fit_tensor<a class=\"headerlink\" href=\"#restore-fit-tensor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.restore_fit_tensor\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">restore_fit_tensor</code><span class=\"sig-paren\">(</span><em>design_matrix</em>, <em>data</em>, <em>sigma=None</em>, <em>jac=True</em>, <em>return_S0_hat=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.restore_fit_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use the RESTORE algorithm [Chang2005] to calculate a robust tensor fit</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array of shape (g, 7)</p>\n<blockquote>\n<div><p>Design matrix holding the covariants used to solve for the regression\ncoefficients.</p>\n</div></blockquote>\n<p><strong>data</strong> : array of shape ([X, Y, Z, n_directions], g)</p>\n<blockquote>\n<div><p>Data or response variables holding the data. Note that the last\ndimension should contain the data. It makes no copies of data.</p>\n</div></blockquote>\n<p><strong>sigma</strong> : float</p>\n<blockquote>\n<div><p>An estimate of the variance. [Chang2005] recommend to use\n1.5267 * std(background_noise), where background_noise is estimated\nfrom some part of the image known to contain no signal (only noise).</p>\n</div></blockquote>\n<p><strong>jac</strong> : bool, optional</p>\n<blockquote>\n<div><p>Whether to use the Jacobian of the tensor to speed the non-linear\noptimization procedure used to fit the tensor paramters (see also\n<a class=\"reference internal\" href=\"#dipy.reconst.dti.nlls_fit_tensor\" title=\"dipy.reconst.dti.nlls_fit_tensor\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">nlls_fit_tensor()</span></code></a>). Default: True</p>\n</div></blockquote>\n<p><strong>return_S0_hat</strong> : bool</p>\n<blockquote>\n<div><p>Boolean to return (True) or not (False) the S0 values for the fit.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>restore_params</strong> : an estimate of the tensor parameters in each voxel.</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sphericity\">\n<h3>sphericity<a class=\"headerlink\" href=\"#sphericity\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.sphericity\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">sphericity</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.sphericity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The sphericity of the tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id342\">[1]</a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sphericity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated sphericity of the diffusion tensor.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz F.,</dt>\n<dd>&#8220;Geometrical diffusion measures for MRI from tensor basis analysis&#8221; in\nProc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"tensor-prediction\">\n<h3>tensor_prediction<a class=\"headerlink\" href=\"#tensor-prediction\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.tensor_prediction\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">tensor_prediction</code><span class=\"sig-paren\">(</span><em>dti_params</em>, <em>gtab</em>, <em>S0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.tensor_prediction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict a signal given tensor parameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>dti_params</strong> : ndarray</p>\n<blockquote>\n<div><p>Tensor parameters. The last dimension should have 12 tensor\nparameters: 3 eigenvalues, followed by the 3 corresponding\neigenvectors.</p>\n</div></blockquote>\n<p><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>The gradient table for this prediction</p>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray</p>\n<blockquote class=\"last\">\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The predicted signal is given by: <span class=\"math\">\\(S(       heta, b) = S_0 * e^{-b ADC}\\)</span>, where\n<span class=\"math\">\\(ADC =      heta Q  heta^T\\)</span>, :math:`      heta` is a unit vector pointing at any\ndirection on the sphere for which a signal is to be predicted, <span class=\"math\">\\(b\\)</span> is the b\nvalue provided in the GradientTable input for that direction, <span class=\"math\">\\(Q\\)</span> is the\nquadratic form of the tensor determined by the input parameters.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id343\">\n<h3>trace<a class=\"headerlink\" href=\"#id343\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.trace\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">trace</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.trace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Trace of a diffusion tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>trace</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated trace of the diffusion tensor.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Trace is calculated with the following equation:</p>\n<div class=\"math\">\n\\[Trace = \\lambda_1 + \\lambda_2 + \\lambda_3\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id344\">\n<h3>vec_val_vect<a class=\"headerlink\" href=\"#id344\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.vec_val_vect\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">vec_val_vect</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.vec_val_vect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Vectorize <cite>vecs</cite>.diag(<cite>vals</cite>).`vecs`.T for last 2 dimensions of <cite>vecs</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vecs</strong> : shape (..., M, N) array</p>\n<blockquote>\n<div><p>containing tensor in last two dimensions; M, N usually equal to (3, 3)</p>\n</div></blockquote>\n<p><strong>vals</strong> : shape (..., N) array</p>\n<blockquote>\n<div><p>diagonal values carried in last dimension, <code class=\"docutils literal\"><span class=\"pre\">...</span></code> shape above must\nmatch that for <cite>vecs</cite></p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>res</strong> : shape (..., M, M) array</p>\n<blockquote>\n<div><p>For all the dimensions ellided by <code class=\"docutils literal\"><span class=\"pre\">...</span></code>, loops to get (M, N) <code class=\"docutils literal\"><span class=\"pre\">vec</span></code>\nmatrix, and (N,) <code class=\"docutils literal\"><span class=\"pre\">vals</span></code> vector, and calculates\n<code class=\"docutils literal\"><span class=\"pre\">vec.dot(np.diag(val).dot(vec.T)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>ValueError</strong> : non-matching <code class=\"docutils literal\"><span class=\"pre\">...</span></code> dimensions of <cite>vecs</cite>, <cite>vals</cite></p>\n<p class=\"last\"><strong>ValueError</strong> : non-matching <code class=\"docutils literal\"><span class=\"pre\">N</span></code> dimensions of <cite>vecs</cite>, <cite>vals</cite></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<p>Make a 3D array where the first dimension is only 1</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec_val_vect</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">vals</span><span class=\"p\">)</span>\n<span class=\"go\">array([[[   9.,   24.,   39.],</span>\n<span class=\"go\">        [  24.,   66.,  108.],</span>\n<span class=\"go\">        [  39.,  108.,  177.]]])</span>\n</pre></div>\n</div>\n<p>That&#8217;s the same as the 2D case (apart from the float casting):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">vals</span><span class=\"p\">),</span> <span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">array([[  9,  24,  39],</span>\n<span class=\"go\">       [ 24,  66, 108],</span>\n<span class=\"go\">       [ 39, 108, 177]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"vector-norm\">\n<h3>vector_norm<a class=\"headerlink\" href=\"#vector-norm\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.vector_norm\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">vector_norm</code><span class=\"sig-paren\">(</span><em>vec</em>, <em>axis=-1</em>, <em>keepdims=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.vector_norm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return vector Euclidean (L2) norm</p>\n<p>See <a class=\"reference internal\" href=\"../../glossary/#term-unit-vector\"><span class=\"xref std std-term\">unit vector</span></a> and <a class=\"reference internal\" href=\"../../glossary/#term-euclidean-norm\"><span class=\"xref std std-term\">Euclidean norm</span></a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vec</strong> : array_like</p>\n<blockquote>\n<div><p>Vectors to norm.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis over which to norm. By default norm over last axis. If <cite>axis</cite> is\nNone, <cite>vec</cite> is flattened then normed.</p>\n</div></blockquote>\n<p><strong>keepdims</strong> : bool</p>\n<blockquote>\n<div><p>If True, the output will have the same number of dimensions as <cite>vec</cite>,\nwith shape 1 on <cite>axis</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>norm</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Euclidean norms of vectors.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">77</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 17.,  85.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 17.],</span>\n<span class=\"go\">       [ 85.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">array([  8.,  39.,  77.])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"wls-fit-tensor\">\n<h3>wls_fit_tensor<a class=\"headerlink\" href=\"#wls-fit-tensor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.dti.wls_fit_tensor\">\n<code class=\"descclassname\">dipy.reconst.dti.</code><code class=\"descname\">wls_fit_tensor</code><span class=\"sig-paren\">(</span><em>design_matrix</em>, <em>data</em>, <em>return_S0_hat=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.dti.wls_fit_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes weighted least squares (WLS) fit to calculate self-diffusion\ntensor using a linear regression model <a class=\"reference internal\" href=\"#r280\" id=\"id345\">[R280]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array (g, 7)</p>\n<blockquote>\n<div><p>Design matrix holding the covariants used to solve for the regression\ncoefficients.</p>\n</div></blockquote>\n<p><strong>data</strong> : array ([X, Y, Z, ...], g)</p>\n<blockquote>\n<div><p>Data or response variables holding the data. Note that the last\ndimension should contain the data. It makes no copies of data.</p>\n</div></blockquote>\n<p><strong>return_S0_hat</strong> : bool</p>\n<blockquote>\n<div><p>Boolean to return (True) or not (False) the S0 values for the fit.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>eigvals</strong> : array (..., 3)</p>\n<blockquote>\n<div><p>Eigenvalues from eigen decomposition of the tensor.</p>\n</div></blockquote>\n<p><strong>eigvecs</strong> : array (..., 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>Associated eigenvectors from eigen decomposition of the tensor.\nEigenvectors are columnar (e.g. eigvecs[:,j] is associated with\neigvals[j])</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.dti.decompose_tensor\" title=\"dipy.reconst.dti.decompose_tensor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">decompose_tensor</span></code></a></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>In Chung, et al. 2006, the regression of the WLS fit needed an unbiased\npreliminary estimate of the weights and therefore the ordinary least\nsquares (OLS) estimates were used. A &#8220;two pass&#8221; method was implemented:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>calculate OLS estimates of the data</li>\n<li>apply the OLS estimates as weights to the WLS fit of the data</li>\n</ol>\n</div></blockquote>\n<p>This ensured heteroscadasticity could be properly modeled for various\ntypes of bootstrap resampling (namely residual bootstrap).</p>\n<div class=\"math\">\n\\[\\begin{split}y = \\mathrm{data} \\\\\nX = \\mathrm{design matrix} \\\\\n\\hat{\\beta}_\\mathrm{WLS} =\n\\mathrm{desired regression coefficients (e.g. tensor)}\\\\\n\\\\\n\\hat{\\beta}_\\mathrm{WLS} = (X^T W X)^{-1} X^T W y \\\\\n\\\\\nW = \\mathrm{diag}((X \\hat{\\beta}_\\mathrm{OLS})^2),\n\\mathrm{where} \\hat{\\beta}_\\mathrm{OLS} = (X^T X)^{-1} X^T y\\end{split}\\]</div>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r280\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R280]</td><td><em>(<a class=\"fn-backref\" href=\"#id345\">1</a>, <a class=\"fn-backref\" href=\"#id346\">2</a>)</em> Chung, SW., Lu, Y., Henry, R.G., 2006. Comparison of bootstrap\napproaches for estimation of uncertainties of DTI parameters.\nNeuroImage 33, 531-541.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"freewatertensorfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.FreeWaterTensorFit\" title=\"dipy.reconst.fwdti.FreeWaterTensorFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">FreeWaterTensorFit</span></code></a><a class=\"headerlink\" href=\"#freewatertensorfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.fwdti.FreeWaterTensorFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">FreeWaterTensorFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.FreeWaterTensorFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.dti.TensorFit\" title=\"dipy.reconst.dti.TensorFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.dti.TensorFit</span></code></a></p>\n<p>Class for fitting the Free Water Tensor Model</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">S0_hat</span></code></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directions</span></code></td>\n<td>For tracking - return the primary direction in each voxel</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evals</span></code></td>\n<td>Returns the eigenvalues of the tensor as an array</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evecs</span></code></td>\n<td>Returns the eigenvectors of the tensor as an array, columnwise</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.FreeWaterTensorFit.f\" title=\"dipy.reconst.fwdti.FreeWaterTensorFit.f\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">f</span></code></a></td>\n<td>Returns the free water diffusion volume fraction f</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quadratic_form</span></code></td>\n<td>Calculates the 3x3 diffusion tensor for each voxel</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ad</span></code>()</td>\n<td>Axial diffusivity (AD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">adc</span></code>(sphere)</td>\n<td>Calculate the apparent diffusion coefficient (ADC) in each direction on</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">color_fa</span></code>()</td>\n<td>Color fractional anisotropy of diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fa</span></code>()</td>\n<td>Fractional anisotropy (FA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ga</span></code>()</td>\n<td>Geodesic anisotropy (GA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">linearity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code>([b0])</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">md</span></code>()</td>\n<td>Mean diffusitivity (MD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mode</span></code>()</td>\n<td>Tensor mode calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code>(sphere)</td>\n<td>The diffusion orientation distribution function (dODF).</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">planarity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.FreeWaterTensorFit.predict\" title=\"dipy.reconst.fwdti.FreeWaterTensorFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(gtab[,&nbsp;S0])</td>\n<td>Given a free water tensor model fit, predict the signal on the</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rd</span></code>()</td>\n<td>Radial diffusitivity (RD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphericity</span></code>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code>()</td>\n<td>Trace of the tensor calculated from cached eigenvalues.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.FreeWaterTensorFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.FreeWaterTensorFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a FreeWaterTensorFit class instance.\nSince the free water tensor model is an extension of DTI, class\ninstance is defined as subclass of the TensorFit from dti.py</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : FreeWaterTensorModel Class instance</p>\n<blockquote>\n<div><p>Class instance containing the free water tensor model for the fit</p>\n</div></blockquote>\n<p><strong>model_params</strong> : ndarray (x, y, z, 13) or (n, 13)</p>\n<blockquote class=\"last\">\n<div><p>All parameters estimated from the free water tensor model.\nParameters are ordered as follows:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>The volume fraction of the free water compartment</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.fwdti.FreeWaterTensorFit.f\">\n<code class=\"descname\">f</code><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.FreeWaterTensorFit.f\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the free water diffusion volume fraction f</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.FreeWaterTensorFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>S0=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.FreeWaterTensorFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a free water tensor model fit, predict the signal on the\nvertices of a gradient table</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>The gradient table for this prediction</p>\n</div></blockquote>\n<p><strong>S0</strong> : float array</p>\n<blockquote>\n<div><p>The mean non-diffusion weighted signal in each voxel. Default: 1 in\nall voxels.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : (..., N) ndarray</p>\n<blockquote class=\"last\">\n<div><p>Simulated signal based on the free water DTI model</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"freewatertensormodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.FreeWaterTensorModel\" title=\"dipy.reconst.fwdti.FreeWaterTensorModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">FreeWaterTensorModel</span></code></a><a class=\"headerlink\" href=\"#freewatertensormodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.fwdti.FreeWaterTensorModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">FreeWaterTensorModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='NLS'</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.FreeWaterTensorModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>Class for the Free Water Elimination Diffusion Tensor Model</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.FreeWaterTensorModel.fit\" title=\"dipy.reconst.fwdti.FreeWaterTensorModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method for every voxel in data</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.FreeWaterTensorModel.predict\" title=\"dipy.reconst.fwdti.FreeWaterTensorModel.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(fwdti_params[,&nbsp;S0])</td>\n<td>Predict a signal for this TensorModel class instance given parameters.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.FreeWaterTensorModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>fit_method='NLS'</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.FreeWaterTensorModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Free Water Diffusion Tensor Model <a class=\"reference internal\" href=\"#r281\" id=\"id347\">[R281]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable class instance</p>\n<p><strong>fit_method</strong> : str or callable</p>\n<blockquote>\n<div><p>str can be one of the following:</p>\n<dl class=\"docutils\">\n<dt>&#8216;WLS&#8217; for weighted linear least square fit according to <a class=\"reference internal\" href=\"#r281\" id=\"id348\">[R281]</a></dt>\n<dd><p class=\"first last\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">fwdti.wls_iter()</span></code></p>\n</dd>\n<dt>&#8216;NLS&#8217; for non-linear least square fit according to <a class=\"reference internal\" href=\"#r281\" id=\"id349\">[R281]</a></dt>\n<dd><p class=\"first last\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">fwdti.nls_iter()</span></code></p>\n</dd>\n<dt>callable has to have the signature:</dt>\n<dd><p class=\"first last\">fit_method(design_matrix, data, <a href=\"#id350\"><span class=\"problematic\" id=\"id351\">*</span></a>args, <a href=\"#id352\"><span class=\"problematic\" id=\"id353\">**</span></a>kwargs)</p>\n</dd>\n</dl>\n</div></blockquote>\n<p><strong>args, kwargs</strong> : arguments and key-word arguments passed to the</p>\n<blockquote class=\"last\">\n<div><p>fit_method. See fwdti.wls_iter, fwdti.nls_iter for\ndetails</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r281\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R281]</td><td><em>(<a class=\"fn-backref\" href=\"#id347\">1</a>, <a class=\"fn-backref\" href=\"#id348\">2</a>, <a class=\"fn-backref\" href=\"#id349\">3</a>, <a class=\"fn-backref\" href=\"#id354\">4</a>)</em> Hoy, A.R., Koay, C.G., Kecskemeti, S.R., Alexander, A.L., 2014.\nOptimization of a free water elimination two-compartmental model\nfor diffusion tensor imaging. NeuroImage 103, 323-333.\ndoi: 10.1016/j.neuroimage.2014.09.053</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.FreeWaterTensorModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.FreeWaterTensorModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method for every voxel in data</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.FreeWaterTensorModel.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>fwdti_params</em>, <em>S0=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.FreeWaterTensorModel.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict a signal for this TensorModel class instance given\nparameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>fwdti_params</strong> : (..., 13) ndarray</p>\n<blockquote>\n<div><p>The last dimension should have 13 parameters: the 12 tensor\nparameters (3 eigenvalues, followed by the 3 corresponding\neigenvectors) and the free water volume fraction.</p>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray</p>\n<blockquote>\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : (..., N) ndarray</p>\n<blockquote class=\"last\">\n<div><p>Simulated signal based on the free water DTI model</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id355\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.ReconstModel\" title=\"dipy.reconst.fwdti.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstModel</span></code></a><a class=\"headerlink\" href=\"#id355\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.fwdti.ReconstModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">ReconstModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.ReconstModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class for signal reconstruction models</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.ReconstModel.fit\" title=\"dipy.reconst.fwdti.ReconstModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.ReconstModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.ReconstModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialization of the abstract class for signal reconstruction models</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gtab</strong> : GradientTable class instance</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.ReconstModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.ReconstModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id356\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit\" title=\"dipy.reconst.fwdti.TensorFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">TensorFit</span></code></a><a class=\"headerlink\" href=\"#id356\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.fwdti.TensorFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">TensorFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em>, <em>model_S0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.S0_hat\" title=\"dipy.reconst.fwdti.TensorFit.S0_hat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">S0_hat</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.directions\" title=\"dipy.reconst.fwdti.TensorFit.directions\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">directions</span></code></a></td>\n<td>For tracking - return the primary direction in each voxel</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.evals\" title=\"dipy.reconst.fwdti.TensorFit.evals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evals</span></code></a></td>\n<td>Returns the eigenvalues of the tensor as an array</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.evecs\" title=\"dipy.reconst.fwdti.TensorFit.evecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evecs</span></code></a></td>\n<td>Returns the eigenvectors of the tensor as an array, columnwise</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.quadratic_form\" title=\"dipy.reconst.fwdti.TensorFit.quadratic_form\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">quadratic_form</span></code></a></td>\n<td>Calculates the 3x3 diffusion tensor for each voxel</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.shape\" title=\"dipy.reconst.fwdti.TensorFit.shape\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.ad\" title=\"dipy.reconst.fwdti.TensorFit.ad\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ad</span></code></a>()</td>\n<td>Axial diffusivity (AD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.adc\" title=\"dipy.reconst.fwdti.TensorFit.adc\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">adc</span></code></a>(sphere)</td>\n<td>Calculate the apparent diffusion coefficient (ADC) in each direction on</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.color_fa\" title=\"dipy.reconst.fwdti.TensorFit.color_fa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">color_fa</span></code></a>()</td>\n<td>Color fractional anisotropy of diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.fa\" title=\"dipy.reconst.fwdti.TensorFit.fa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fa</span></code></a>()</td>\n<td>Fractional anisotropy (FA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.ga\" title=\"dipy.reconst.fwdti.TensorFit.ga\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ga</span></code></a>()</td>\n<td>Geodesic anisotropy (GA) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.linearity\" title=\"dipy.reconst.fwdti.TensorFit.linearity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">linearity</span></code></a>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.lower_triangular\" title=\"dipy.reconst.fwdti.TensorFit.lower_triangular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lower_triangular</span></code></a>([b0])</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.md\" title=\"dipy.reconst.fwdti.TensorFit.md\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">md</span></code></a>()</td>\n<td>Mean diffusitivity (MD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.mode\" title=\"dipy.reconst.fwdti.TensorFit.mode\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mode</span></code></a>()</td>\n<td>Tensor mode calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.odf\" title=\"dipy.reconst.fwdti.TensorFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>The diffusion orientation distribution function (dODF).</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.planarity\" title=\"dipy.reconst.fwdti.TensorFit.planarity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">planarity</span></code></a>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.predict\" title=\"dipy.reconst.fwdti.TensorFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(gtab[,&nbsp;S0,&nbsp;step])</td>\n<td>Given a model fit, predict the signal on the vertices of a sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.rd\" title=\"dipy.reconst.fwdti.TensorFit.rd\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rd</span></code></a>()</td>\n<td>Radial diffusitivity (RD) calculated from cached eigenvalues.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.sphericity\" title=\"dipy.reconst.fwdti.TensorFit.sphericity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphericity</span></code></a>()</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.fwdti.TensorFit.trace\" title=\"dipy.reconst.fwdti.TensorFit.trace\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code></a>()</td>\n<td>Trace of the tensor calculated from cached eigenvalues.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em>, <em>model_S0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a TensorFit class instance.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.S0_hat\">\n<code class=\"descname\">S0_hat</code><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.S0_hat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.ad\">\n<code class=\"descname\">ad</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.ad\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Axial diffusivity (AD) calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ad</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated AD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[AD = \\lambda_1\\]</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.adc\">\n<code class=\"descname\">adc</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.adc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the apparent diffusion coefficient (ADC) in each direction on\nthe sphere for each voxel in the data</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere class instance</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>adc</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The estimates of the apparent diffusion coefficient in every\ndirection on the input sphere</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The calculation of ADC, relies on the following relationship:</p>\n<div class=\"math\">\n\\[ADC = \\vec{b} Q \\vec{b}^T\\]</div>\n<p>Where Q is the quadratic form of the tensor.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.color_fa\">\n<code class=\"descname\">color_fa</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.color_fa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Color fractional anisotropy of diffusion tensor</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.directions\">\n<code class=\"descname\">directions</code><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>For tracking - return the primary direction in each voxel</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.evals\">\n<code class=\"descname\">evals</code><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.evals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the eigenvalues of the tensor as an array</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.evecs\">\n<code class=\"descname\">evecs</code><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.evecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the eigenvectors of the tensor as an array, columnwise</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.fa\">\n<code class=\"descname\">fa</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.fa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fractional anisotropy (FA) calculated from cached eigenvalues.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.ga\">\n<code class=\"descname\">ga</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.ga\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Geodesic anisotropy (GA) calculated from cached eigenvalues.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.linearity\">\n<code class=\"descname\">linearity</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.linearity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>linearity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated linearity of the diffusion tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id357\">[1]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Linearity is calculated with the following equation:</p>\n<div class=\"math\">\n\\[Linearity =\n\\frac{\\lambda_1-\\lambda_2}{\\lambda_1+\\lambda_2+\\lambda_3}\\]</div>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz</dt>\n<dd>F., &#8220;Geometrical diffusion measures for MRI from tensor basis\nanalysis&#8221; in Proc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.lower_triangular\">\n<code class=\"descname\">lower_triangular</code><span class=\"sig-paren\">(</span><em>b0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.md\">\n<code class=\"descname\">md</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.md\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Mean diffusitivity (MD) calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>md</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated MD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>MD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[MD = \\frac{\\lambda_1+\\lambda_2+\\lambda_3}{3}\\]</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.mode\">\n<code class=\"descname\">mode</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.mode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Tensor mode calculated from cached eigenvalues.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The diffusion orientation distribution function (dODF). This is an\nestimate of the diffusion distance in each direction</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere class instance.</p>\n<blockquote>\n<div><p>The dODF is calculated in the vertices of this input.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>odf</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The diffusion distance in every direction of the sphere in every\nvoxel in the input data.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>This is based on equation 3 in <a class=\"reference internal\" href=\"#id360\" id=\"id358\">[Aganj2010]</a>. To re-derive it from\nscratch, follow steps in <a class=\"reference internal\" href=\"#id361\" id=\"id359\">[Descoteaux2008]</a>, Section 7.9 Equation\n7.24 but with an <span class=\"math\">\\(r^2\\)</span> term in the integral.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"id360\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Aganj2010]</td><td>Aganj, I., Lenglet, C., Sapiro, G., Yacoub, E., Ugurbil,\nK., &amp; Harel, N. (2010). Reconstruction of the orientation\ndistribution function in single- and multiple-shell q-ball imaging\nwithin constant solid angle. Magnetic Resonance in Medicine, 64(2),\n554-566. doi:DOI: 10.1002/mrm.22365</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"id361\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Descoteaux2008]</td><td>Descoteaux, M. (2008). PhD Thesis: High Angular\nResolution Diffusion MRI: from Local Estimation to Segmentation and\nTractography. <a class=\"reference external\" href=\"ftp://ftp-sop.inria.fr/athena/Publications/PhDs/descoteaux_thesis.pdf\">ftp://ftp-sop.inria.fr/athena/Publications/PhDs/descoteaux_thesis.pdf</a></td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.planarity\">\n<code class=\"descname\">planarity</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.planarity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sphericity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated sphericity of the diffusion tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id362\">[1]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz</dt>\n<dd>F., &#8220;Geometrical diffusion measures for MRI from tensor basis\nanalysis&#8221; in Proc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>S0=None</em>, <em>step=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a model fit, predict the signal on the vertices of a sphere</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>This encodes the directions for which a prediction is made</p>\n</div></blockquote>\n<p><strong>S0</strong> : float array</p>\n<blockquote>\n<div><p>The mean non-diffusion weighted signal in each voxel. Default:\nThe fitted S0 value in all voxels if it was fitted. Otherwise 1 in\nall voxels.</p>\n</div></blockquote>\n<p><strong>step</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>The chunk size as a number of voxels. Optional parameter with\ndefault value 10,000.</p>\n<p>In order to increase speed of processing, tensor fitting is done\nsimultaneously over many voxels. This parameter sets the number of\nvoxels that will be fit at once in each iteration. A larger step\nvalue should speed things up, but it will also take up more memory.\nIt is advisable to keep an eye on memory consumption as this value\nis increased.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The predicted signal is given by:</p>\n<div class=\"math\">\n\\[S(\\theta, b) = S_0 * e^{-b ADC}\\]</div>\n<p>Where:\n.. math</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ADC</span> <span class=\"o\">=</span> \\<span class=\"n\">theta</span> <span class=\"n\">Q</span> \\<span class=\"n\">theta</span><span class=\"o\">^</span><span class=\"n\">T</span>\n</pre></div>\n</div>\n<p><span class=\"math\">\\(\\theta\\)</span> is a unit vector pointing at any direction on the sphere for\nwhich a signal is to be predicted and <span class=\"math\">\\(b\\)</span> is the b value provided in\nthe GradientTable input for that direction</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.quadratic_form\">\n<code class=\"descname\">quadratic_form</code><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.quadratic_form\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the 3x3 diffusion tensor for each voxel</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.rd\">\n<code class=\"descname\">rd</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.rd\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radial diffusitivity (RD) calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rd</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated RD.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>RD is calculated with the following equation:</p>\n<div class=\"math\">\n\\[RD = \\frac{\\lambda_2 + \\lambda_3}{2}\\]</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.shape\">\n<code class=\"descname\">shape</code><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.sphericity\">\n<code class=\"descname\">sphericity</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.sphericity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sphericity</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated sphericity of the diffusion tensor <a class=\"footnote-reference\" href=\"#id337\" id=\"id363\">[1]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<dl class=\"docutils\">\n<dt>[1] Westin C.-F., Peled S., Gubjartsson H., Kikinis R., Jolesz</dt>\n<dd>F., &#8220;Geometrical diffusion measures for MRI from tensor basis\nanalysis&#8221; in Proc. 5th Annual ISMRM, 1997.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.fwdti.TensorFit.trace\">\n<code class=\"descname\">trace</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.TensorFit.trace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Trace of the tensor calculated from cached eigenvalues.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>trace</strong> : array (V, 1)</p>\n<blockquote class=\"last\">\n<div><p>Calculated trace.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The trace is calculated with the following equation:</p>\n<div class=\"math\">\n\\[trace = \\lambda_1 + \\lambda_2 + \\lambda_3\\]</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cholesky-to-lower-triangular\">\n<h3>cholesky_to_lower_triangular<a class=\"headerlink\" href=\"#cholesky-to-lower-triangular\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.cholesky_to_lower_triangular\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">cholesky_to_lower_triangular</code><span class=\"sig-paren\">(</span><em>R</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.cholesky_to_lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Convert Cholesky decompostion elements to the diffusion tensor elements</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>R</strong> : array (6,)</p>\n<blockquote>\n<div><p>Array containing the six Cholesky&#8217;s decomposition elements\n(R0, R1, R2, R3, R4, R5) <a class=\"reference internal\" href=\"#r282\" id=\"id364\">[R282]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor_elements</strong> : array (6,)</p>\n<blockquote class=\"last\">\n<div><p>Array containing the six elements of diffusion tensor&#8217;s lower\ntriangular.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r282\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R282]</td><td><em>(<a class=\"fn-backref\" href=\"#id364\">1</a>, <a class=\"fn-backref\" href=\"#id365\">2</a>)</em> Koay, C.G., Carew, J.D., Alexander, A.L., Basser, P.J.,\nMeyerand, M.E., 2006. Investigation of anomalous estimates of\ntensor-derived quantities in diffusion tensor imaging. Magnetic\nResonance in Medicine, 55(4), 930-936. doi:10.1002/mrm.20832</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id366\">\n<h3>decompose_tensor<a class=\"headerlink\" href=\"#id366\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.decompose_tensor\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">decompose_tensor</code><span class=\"sig-paren\">(</span><em>tensor</em>, <em>min_diffusivity=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.decompose_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns eigenvalues and eigenvectors given a diffusion tensor</p>\n<p>Computes tensor eigen decomposition to calculate eigenvalues and\neigenvectors (Basser et al., 1994a).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : array (..., 3, 3)</p>\n<blockquote>\n<div><p>Hermitian matrix representing a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>min_diffusivity</strong> : float</p>\n<blockquote>\n<div><p>Because negative eigenvalues are not physical and small eigenvalues,\nmuch smaller than the diffusion weighting, cause quite a lot of noise\nin metrics such as fa, diffusivity values smaller than\n<cite>min_diffusivity</cite> are replaced with <cite>min_diffusivity</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>eigvals</strong> : array (..., 3)</p>\n<blockquote>\n<div><p>Eigenvalues from eigen decomposition of the tensor. Negative\neigenvalues are replaced by zero. Sorted from largest to smallest.</p>\n</div></blockquote>\n<p><strong>eigvecs</strong> : array (..., 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>Associated eigenvectors from eigen decomposition of the tensor.\nEigenvectors are columnar (e.g. eigvecs[..., :, j] is associated with\neigvals[..., j])</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id367\">\n<h3>design_matrix<a class=\"headerlink\" href=\"#id367\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.design_matrix\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">design_matrix</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>dtype=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.design_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs design matrix for DTI weighted least squares or\nleast squares fitting. (Basser et al., 1994a)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : A GradientTable class instance</p>\n<p><strong>dtype</strong> : string</p>\n<blockquote>\n<div><p>Parameter to control the dtype of returned designed matrix</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array (g,7)</p>\n<blockquote class=\"last\">\n<div><p>Design matrix or B matrix assuming Gaussian distributed tensor model\ndesign_matrix[j, :] = (Bxx, Byy, Bzz, Bxy, Bxz, Byz, dummy)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id368\">\n<h3>from_lower_triangular<a class=\"headerlink\" href=\"#id368\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.from_lower_triangular\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">from_lower_triangular</code><span class=\"sig-paren\">(</span><em>D</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.from_lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a tensor given the six unique tensor elements</p>\n<p>Given the six unique tensor elments (in the order: Dxx, Dxy, Dyy, Dxz, Dyz,\nDzz) returns a 3 by 3 tensor. All elements after the sixth are ignored.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>D</strong> : array_like, (..., &gt;6)</p>\n<blockquote>\n<div><p>Unique elements of the tensors</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : ndarray (..., 3, 3)</p>\n<blockquote class=\"last\">\n<div><p>3 by 3 tensors</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"fwdti-prediction\">\n<h3>fwdti_prediction<a class=\"headerlink\" href=\"#fwdti-prediction\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.fwdti_prediction\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">fwdti_prediction</code><span class=\"sig-paren\">(</span><em>params</em>, <em>gtab</em>, <em>S0=1</em>, <em>Diso=0.003</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.fwdti_prediction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Signal prediction given the free water DTI model parameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>params</strong> : (..., 13) ndarray</p>\n<blockquote>\n<div><p>Model parameters. The last dimension should have the 12 tensor\nparameters (3 eigenvalues, followed by the 3 corresponding\neigenvectors) and the volume fraction of the free water compartment.</p>\n</div></blockquote>\n<p><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>The gradient table for this prediction</p>\n</div></blockquote>\n<p><strong>S0</strong> : float or ndarray</p>\n<blockquote>\n<div><p>The non diffusion-weighted signal in every voxel, or across all\nvoxels. Default: 1</p>\n</div></blockquote>\n<p><strong>Diso</strong> : float, optional</p>\n<blockquote>\n<div><p>Value of the free water isotropic diffusion. Default is set to 3e-3\n<span class=\"math\">\\(mm^{2}.s^{-1}\\)</span>. Please adjust this value if you are assuming different\nunits of diffusion.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : (..., N) ndarray</p>\n<blockquote class=\"last\">\n<div><p>Simulated signal based on the free water DTI model</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The predicted signal is given by:\n<span class=\"math\">\\(S(\\theta, b) = S_0 * [(1-f) * e^{-b ADC} + f * e^{-b D_{iso}]\\)</span>, where\n<span class=\"math\">\\(ADC = \\theta Q \\theta^T\\)</span>, <span class=\"math\">\\(\\theta\\)</span> is a unit vector pointing at any\ndirection on the sphere for which a signal is to be predicted, <span class=\"math\">\\(b\\)</span> is the b\nvalue provided in the GradientTable input for that direction, <span class=\"math\">\\(Q\\)</span> is the\nquadratic form of the tensor determined by the input parameters, <span class=\"math\">\\(f\\)</span> is the\nfree water diffusion compartment, <span class=\"math\">\\(D_{iso}\\)</span> is the free water diffusivity\nwhich is equal to $3 * 10^{-3} mm^{2}s^{-1} <a class=\"reference internal\" href=\"#r283\" id=\"id369\">[R283]</a>.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r283\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R283]</td><td><em>(<a class=\"fn-backref\" href=\"#id369\">1</a>, <a class=\"fn-backref\" href=\"#id370\">2</a>)</em> Hoy, A.R., Koay, C.G., Kecskemeti, S.R., Alexander, A.L., 2014.\nOptimization of a free water elimination two-compartmental model\nfor diffusion tensor imaging. NeuroImage 103, 323-333.\ndoi: 10.1016/j.neuroimage.2014.09.053</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id371\">\n<h3>lower_triangular<a class=\"headerlink\" href=\"#id371\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.lower_triangular\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">lower_triangular</code><span class=\"sig-paren\">(</span><em>tensor</em>, <em>b0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.lower_triangular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the six lower triangular values of the tensor and a dummy variable\nif b0 is not None</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor</strong> : array_like (..., 3, 3)</p>\n<blockquote>\n<div><p>a collection of 3, 3 diffusion tensors</p>\n</div></blockquote>\n<p><strong>b0</strong> : float</p>\n<blockquote>\n<div><p>if b0 is not none log(b0) is returned as the dummy variable</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>D</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>If b0 is none, then the shape will be (..., 6) otherwise (..., 7)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"lower-triangular-to-cholesky\">\n<h3>lower_triangular_to_cholesky<a class=\"headerlink\" href=\"#lower-triangular-to-cholesky\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.lower_triangular_to_cholesky\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">lower_triangular_to_cholesky</code><span class=\"sig-paren\">(</span><em>tensor_elements</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.lower_triangular_to_cholesky\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Perfoms Cholesky decomposition of the diffusion tensor</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor_elements</strong> : array (6,)</p>\n<blockquote>\n<div><p>Array containing the six elements of diffusion tensor&#8217;s lower\ntriangular.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>cholesky_elements</strong> : array (6,)</p>\n<blockquote class=\"last\">\n<div><p>Array containing the six Cholesky&#8217;s decomposition elements\n(R0, R1, R2, R3, R4, R5) <a class=\"reference internal\" href=\"#r284\" id=\"id372\">[R284]</a>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r284\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R284]</td><td><em>(<a class=\"fn-backref\" href=\"#id372\">1</a>, <a class=\"fn-backref\" href=\"#id373\">2</a>)</em> Koay, C.G., Carew, J.D., Alexander, A.L., Basser, P.J.,\nMeyerand, M.E., 2006. Investigation of anomalous estimates of\ntensor-derived quantities in diffusion tensor imaging. Magnetic\nResonance in Medicine, 55(4), 930-936. doi:10.1002/mrm.20832</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id374\">\n<h3>multi_voxel_fit<a class=\"headerlink\" href=\"#id374\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.multi_voxel_fit\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">multi_voxel_fit</code><span class=\"sig-paren\">(</span><em>single_voxel_fit</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.multi_voxel_fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Method decorator to turn a single voxel model fit\ndefinition into a multi voxel model fit definition</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id375\">\n<h3>ndindex<a class=\"headerlink\" href=\"#id375\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.ndindex\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">ndindex</code><span class=\"sig-paren\">(</span><em>shape</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape</strong> : tuple of ints</p>\n<blockquote class=\"last\">\n<div><p>The dimensions of the array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"k\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"nls-fit-tensor\">\n<h3>nls_fit_tensor<a class=\"headerlink\" href=\"#nls-fit-tensor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.nls_fit_tensor\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">nls_fit_tensor</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>data</em>, <em>mask=None</em>, <em>Diso=0.003</em>, <em>mdreg=0.0027</em>, <em>min_signal=1e-06</em>, <em>f_transform=True</em>, <em>cholesky=False</em>, <em>jac=False</em>, <em>weighting=None</em>, <em>sigma=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.nls_fit_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit the water elimination tensor model using the non-linear least-squares.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>The gradient table containing diffusion acquisition parameters.</p>\n</div></blockquote>\n<p><strong>data</strong> : ndarray ([X, Y, Z, ...], g)</p>\n<blockquote>\n<div><p>Data or response variables holding the data. Note that the last\ndimension should contain the data. It makes no copies of data.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array, optional</p>\n<blockquote>\n<div><p>A boolean array used to mark the coordinates in the data that should\nbe analyzed that has the shape data.shape[:-1]</p>\n</div></blockquote>\n<p><strong>Diso</strong> : float, optional</p>\n<blockquote>\n<div><p>Value of the free water isotropic diffusion. Default is set to 3e-3\n<span class=\"math\">\\(mm^{2}.s^{-1}\\)</span>. Please ajust this value if you are assuming different\nunits of diffusion.</p>\n</div></blockquote>\n<p><strong>mdreg</strong> : float, optimal</p>\n<blockquote>\n<div><p>DTI&#8217;s mean diffusivity regularization threshold. If standard DTI\ndiffusion tensor&#8217;s mean diffusivity is almost near the free water\ndiffusion value, the diffusion signal is assumed to be only free water\ndiffusion (i.e. volume fraction will be set to 1 and tissue&#8217;s diffusion\nparameters are set to zero). Default md_reg is 2.7e-3 <span class=\"math\">\\(mm^{2}.s^{-1}\\)</span>\n(corresponding to 90% of the free water diffusion value).</p>\n</div></blockquote>\n<p><strong>min_signal</strong> : float</p>\n<blockquote>\n<div><p>The minimum signal value. Needs to be a strictly positive\nnumber. Default: 1.0e-6.</p>\n</div></blockquote>\n<p><strong>f_transform</strong> : bool, optional</p>\n<blockquote>\n<div><p>If true, the water volume fractions is converted during the convergence\nprocedure to ft = arcsin(2*f - 1) + pi/2, insuring f estimates between\n0 and 1.\nDefault: True</p>\n</div></blockquote>\n<p><strong>cholesky</strong> : bool, optional</p>\n<blockquote>\n<div><p>If true it uses cholesky decomposition to insure that diffusion tensor\nis positive define.\nDefault: False</p>\n</div></blockquote>\n<p><strong>jac</strong> : bool</p>\n<blockquote>\n<div><p>Use the Jacobian? Default: False</p>\n</div></blockquote>\n<p><strong>weighting: str, optional</strong> :</p>\n<blockquote>\n<div><p>the weighting scheme to use in considering the\nsquared-error. Default behavior is to use uniform weighting. Other\noptions: &#8216;sigma&#8217; &#8216;gmm&#8217;</p>\n</div></blockquote>\n<p><strong>sigma: float, optional</strong> :</p>\n<blockquote>\n<div><p>If the &#8216;sigma&#8217; weighting scheme is used, a value of sigma needs to be\nprovided here. According to [Chang2005], a good value to use is\n1.5267 * std(background_noise), where background_noise is estimated\nfrom some part of the image known to contain no signal (only noise).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>fw_params</strong> : ndarray (x, y, z, 13)</p>\n<blockquote class=\"last\">\n<div><p>Matrix containing in the dimention the free water model parameters in\nthe following order:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>The volume fraction of the free water compartment</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"nls-iter\">\n<h3>nls_iter<a class=\"headerlink\" href=\"#nls-iter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.nls_iter\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">nls_iter</code><span class=\"sig-paren\">(</span><em>design_matrix</em>, <em>sig</em>, <em>S0</em>, <em>Diso=0.003</em>, <em>mdreg=0.0027</em>, <em>min_signal=1e-06</em>, <em>cholesky=False</em>, <em>f_transform=True</em>, <em>jac=False</em>, <em>weighting=None</em>, <em>sigma=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.nls_iter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies non linear least squares fit of the water free elimination\nmodel to single voxel signals.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array (g, 7)</p>\n<blockquote>\n<div><p>Design matrix holding the covariants used to solve for the regression\ncoefficients.</p>\n</div></blockquote>\n<p><strong>sig</strong> : array (g, )</p>\n<blockquote>\n<div><p>Diffusion-weighted signal for a single voxel data.</p>\n</div></blockquote>\n<p><strong>S0</strong> : float</p>\n<blockquote>\n<div><p>Non diffusion weighted signal (i.e. signal for b-value=0).</p>\n</div></blockquote>\n<p><strong>Diso</strong> : float, optional</p>\n<blockquote>\n<div><p>Value of the free water isotropic diffusion. Default is set to 3e-3\n<span class=\"math\">\\(mm^{2}.s^{-1}\\)</span>. Please ajust this value if you are assuming different\nunits of diffusion.</p>\n</div></blockquote>\n<p><strong>mdreg</strong> : float, optimal</p>\n<blockquote>\n<div><p>DTI&#8217;s mean diffusivity regularization threshold. If standard DTI\ndiffusion tensor&#8217;s mean diffusivity is almost near the free water\ndiffusion value, the diffusion signal is assumed to be only free water\ndiffusion (i.e. volume fraction will be set to 1 and tissue&#8217;s diffusion\nparameters are set to zero). Default md_reg is 2.7e-3 <span class=\"math\">\\(mm^{2}.s^{-1}\\)</span>\n(corresponding to 90% of the free water diffusion value).</p>\n</div></blockquote>\n<p><strong>min_signal</strong> : float</p>\n<blockquote>\n<div><p>The minimum signal value. Needs to be a strictly positive\nnumber.</p>\n</div></blockquote>\n<p><strong>cholesky</strong> : bool, optional</p>\n<blockquote>\n<div><p>If true it uses cholesky decomposition to insure that diffusion tensor\nis positive define.\nDefault: False</p>\n</div></blockquote>\n<p><strong>f_transform</strong> : bool, optional</p>\n<blockquote>\n<div><p>If true, the water volume fractions is converted during the convergence\nprocedure to ft = arcsin(2*f - 1) + pi/2, insuring f estimates between\n0 and 1.\nDefault: True</p>\n</div></blockquote>\n<p><strong>jac</strong> : bool</p>\n<blockquote>\n<div><p>Use the Jacobian? Default: False</p>\n</div></blockquote>\n<p><strong>weighting: str, optional</strong> :</p>\n<blockquote>\n<div><p>the weighting scheme to use in considering the\nsquared-error. Default behavior is to use uniform weighting. Other\noptions: &#8216;sigma&#8217; &#8216;gmm&#8217;</p>\n</div></blockquote>\n<p><strong>sigma: float, optional</strong> :</p>\n<blockquote>\n<div><p>If the &#8216;sigma&#8217; weighting scheme is used, a value of sigma needs to be\nprovided here. According to [Chang2005], a good value to use is\n1.5267 * std(background_noise), where background_noise is estimated\nfrom some part of the image known to contain no signal (only noise).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>All parameters estimated from the free water tensor model.</strong> :</p>\n<p><strong>Parameters are ordered as follows:</strong> :</p>\n<blockquote class=\"last\">\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>The volume fraction of the free water compartment.</li>\n</ol>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id378\">\n<h3>vec_val_vect<a class=\"headerlink\" href=\"#id378\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.vec_val_vect\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">vec_val_vect</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.vec_val_vect\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Vectorize <cite>vecs</cite>.diag(<cite>vals</cite>).`vecs`.T for last 2 dimensions of <cite>vecs</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vecs</strong> : shape (..., M, N) array</p>\n<blockquote>\n<div><p>containing tensor in last two dimensions; M, N usually equal to (3, 3)</p>\n</div></blockquote>\n<p><strong>vals</strong> : shape (..., N) array</p>\n<blockquote>\n<div><p>diagonal values carried in last dimension, <code class=\"docutils literal\"><span class=\"pre\">...</span></code> shape above must\nmatch that for <cite>vecs</cite></p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>res</strong> : shape (..., M, M) array</p>\n<blockquote>\n<div><p>For all the dimensions ellided by <code class=\"docutils literal\"><span class=\"pre\">...</span></code>, loops to get (M, N) <code class=\"docutils literal\"><span class=\"pre\">vec</span></code>\nmatrix, and (N,) <code class=\"docutils literal\"><span class=\"pre\">vals</span></code> vector, and calculates\n<code class=\"docutils literal\"><span class=\"pre\">vec.dot(np.diag(val).dot(vec.T)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>ValueError</strong> : non-matching <code class=\"docutils literal\"><span class=\"pre\">...</span></code> dimensions of <cite>vecs</cite>, <cite>vals</cite></p>\n<p class=\"last\"><strong>ValueError</strong> : non-matching <code class=\"docutils literal\"><span class=\"pre\">N</span></code> dimensions of <cite>vecs</cite>, <cite>vals</cite></p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<p>Make a 3D array where the first dimension is only 1</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec_val_vect</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">vals</span><span class=\"p\">)</span>\n<span class=\"go\">array([[[   9.,   24.,   39.],</span>\n<span class=\"go\">        [  24.,   66.,  108.],</span>\n<span class=\"go\">        [  39.,  108.,  177.]]])</span>\n</pre></div>\n</div>\n<p>That&#8217;s the same as the 2D case (apart from the float casting):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vecs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">vecs</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">vals</span><span class=\"p\">),</span> <span class=\"n\">vecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">array([[  9,  24,  39],</span>\n<span class=\"go\">       [ 24,  66, 108],</span>\n<span class=\"go\">       [ 39, 108, 177]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id379\">\n<h3>wls_fit_tensor<a class=\"headerlink\" href=\"#id379\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.wls_fit_tensor\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">wls_fit_tensor</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>data</em>, <em>Diso=0.003</em>, <em>mask=None</em>, <em>min_signal=1e-06</em>, <em>piterations=3</em>, <em>mdreg=0.0027</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.wls_fit_tensor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes weighted least squares (WLS) fit to calculate self-diffusion\ntensor using a linear regression model <a class=\"reference internal\" href=\"#r285\" id=\"id380\">[R285]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>The gradient table containing diffusion acquisition parameters.</p>\n</div></blockquote>\n<p><strong>data</strong> : ndarray ([X, Y, Z, ...], g)</p>\n<blockquote>\n<div><p>Data or response variables holding the data. Note that the last\ndimension should contain the data. It makes no copies of data.</p>\n</div></blockquote>\n<p><strong>Diso</strong> : float, optional</p>\n<blockquote>\n<div><p>Value of the free water isotropic diffusion. Default is set to 3e-3\n<span class=\"math\">\\(mm^{2}.s^{-1}\\)</span>. Please ajust this value if you are assuming different\nunits of diffusion.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array, optional</p>\n<blockquote>\n<div><p>A boolean array used to mark the coordinates in the data that should\nbe analyzed that has the shape data.shape[:-1]</p>\n</div></blockquote>\n<p><strong>min_signal</strong> : float</p>\n<blockquote>\n<div><p>The minimum signal value. Needs to be a strictly positive\nnumber. Default: 1.0e-6.</p>\n</div></blockquote>\n<p><strong>piterations</strong> : inter, optional</p>\n<blockquote>\n<div><p>Number of iterations used to refine the precision of f. Default is set\nto 3 corresponding to a precision of 0.01.</p>\n</div></blockquote>\n<p><strong>mdreg</strong> : float, optimal</p>\n<blockquote>\n<div><p>DTI&#8217;s mean diffusivity regularization threshold. If standard DTI\ndiffusion tensor&#8217;s mean diffusivity is almost near the free water\ndiffusion value, the diffusion signal is assumed to be only free water\ndiffusion (i.e. volume fraction will be set to 1 and tissue&#8217;s diffusion\nparameters are set to zero). Default md_reg is 2.7e-3 <span class=\"math\">\\(mm^{2}.s^{-1}\\)</span>\n(corresponding to 90% of the free water diffusion value).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>fw_params</strong> : ndarray (x, y, z, 13)</p>\n<blockquote class=\"last\">\n<div><p>Matrix containing in the last dimention the free water model parameters\nin the following order:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>The volume fraction of the free water compartment.</li>\n</ol>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r285\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R285]</td><td><em>(<a class=\"fn-backref\" href=\"#id380\">1</a>, <a class=\"fn-backref\" href=\"#id381\">2</a>)</em> Hoy, A.R., Koay, C.G., Kecskemeti, S.R., Alexander, A.L., 2014.\nOptimization of a free water elimination two-compartmental model\nfor diffusion tensor imaging. NeuroImage 103, 323-333.\ndoi: 10.1016/j.neuroimage.2014.09.053</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"wls-iter\">\n<h3>wls_iter<a class=\"headerlink\" href=\"#wls-iter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.fwdti.wls_iter\">\n<code class=\"descclassname\">dipy.reconst.fwdti.</code><code class=\"descname\">wls_iter</code><span class=\"sig-paren\">(</span><em>design_matrix</em>, <em>sig</em>, <em>S0</em>, <em>Diso=0.003</em>, <em>mdreg=0.0027</em>, <em>min_signal=1e-06</em>, <em>piterations=3</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.fwdti.wls_iter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies weighted linear least squares fit of the water free elimination\nmodel to single voxel signals.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>design_matrix</strong> : array (g, 7)</p>\n<blockquote>\n<div><p>Design matrix holding the covariants used to solve for the regression\ncoefficients.</p>\n</div></blockquote>\n<p><strong>sig</strong> : array (g, )</p>\n<blockquote>\n<div><p>Diffusion-weighted signal for a single voxel data.</p>\n</div></blockquote>\n<p><strong>S0</strong> : float</p>\n<blockquote>\n<div><p>Non diffusion weighted signal (i.e. signal for b-value=0).</p>\n</div></blockquote>\n<p><strong>Diso</strong> : float, optional</p>\n<blockquote>\n<div><blockquote>\n<div><p>Value of the free water isotropic diffusion. Default is set to 3e-3\n<span class=\"math\">\\(mm^{2}.s^{-1}\\)</span>. Please ajust this value if you are assuming different\nunits of diffusion.</p>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>mdreg <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">float, optimal</span></dt>\n<dd><p class=\"first last\">DTI&#8217;s mean diffusivity regularization threshold. If standard DTI\ndiffusion tensor&#8217;s mean diffusivity is almost near the free water\ndiffusion value, the diffusion signal is assumed to be only free water\ndiffusion (i.e. volume fraction will be set to 1 and tissue&#8217;s diffusion\nparameters are set to zero). Default md_reg is 2.7e-3 <span class=\"math\">\\(mm^{2}.s^{-1}\\)</span>\n(corresponding to 90% of the free water diffusion value).</p>\n</dd>\n</dl>\n</div></blockquote>\n<p><strong>min_signal</strong> : float</p>\n<blockquote>\n<div><p>The minimum signal value. Needs to be a strictly positive\nnumber. Default: minimal signal in the data provided to <cite>fit</cite>.</p>\n</div></blockquote>\n<p><strong>piterations</strong> : inter, optional</p>\n<blockquote>\n<div><p>Number of iterations used to refine the precision of f. Default is set\nto 3 corresponding to a precision of 0.01.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>All parameters estimated from the free water tensor model.</strong> :</p>\n<p><strong>Parameters are ordered as follows:</strong> :</p>\n<blockquote class=\"last\">\n<div><ol class=\"arabic simple\">\n<li>Three diffusion tensor&#8217;s eigenvalues</li>\n<li>Three lines of the eigenvector matrix each containing the\nfirst, second and third coordinates of the eigenvector</li>\n<li>The volume fraction of the free water compartment</li>\n</ol>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id382\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.gqi.Cache\" title=\"dipy.reconst.gqi.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Cache</span></code></a><a class=\"headerlink\" href=\"#id382\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.gqi.Cache\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">Cache</code><a class=\"headerlink\" href=\"#dipy.reconst.gqi.Cache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Cache values based on a key object (such as a sphere or gradient table).</p>\n<p class=\"rubric\">Notes</p>\n<p>This class is meant to be used as a mix-in:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Cache</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelFit</span><span class=\"p\">(</span><span class=\"n\">Fit</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Inside a method on the fit, typical usage would be:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">):</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">M</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_basis_matrix</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">M</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.Cache.cache_clear\" title=\"dipy.reconst.gqi.Cache.cache_clear\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code></a>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.Cache.cache_get\" title=\"dipy.reconst.gqi.Cache.cache_get\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code></a>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.Cache.cache_set\" title=\"dipy.reconst.gqi.Cache.cache_set\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code></a>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.Cache.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.Cache.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.Cache.cache_clear\">\n<code class=\"descname\">cache_clear</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.Cache.cache_clear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clear the cache.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.Cache.cache_get\">\n<code class=\"descname\">cache_get</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>default=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.Cache.cache_get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieve a value from the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>default</strong> : object</p>\n<blockquote>\n<div><p>Value to be returned if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>v</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value from the cache associated with <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.  Returns\n<cite>default</cite> if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.Cache.cache_set\">\n<code class=\"descname\">cache_set</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>value</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.Cache.cache_set\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Store a value in the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>value</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value stored in the cache for each unique combination\nof <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># Imagine the following computation is very expensive</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"o\">=</span> <span class=\"n\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">X1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"ow\">is</span> <span class=\"n\">X2</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"generalizedqsamplingfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingFit\" title=\"dipy.reconst.gqi.GeneralizedQSamplingFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">GeneralizedQSamplingFit</span></code></a><a class=\"headerlink\" href=\"#generalizedqsamplingfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.gqi.GeneralizedQSamplingFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">GeneralizedQSamplingFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfFit\" title=\"dipy.reconst.odf.OdfFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.odf.OdfFit</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingFit.odf\" title=\"dipy.reconst.gqi.GeneralizedQSamplingFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>Calculates the discrete ODF for a given discrete sphere.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.GeneralizedQSamplingFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates PDF and ODF for a single voxel</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : object,</p>\n<blockquote>\n<div><p>DiffusionSpectrumModel</p>\n</div></blockquote>\n<p><strong>data</strong> : 1d ndarray,</p>\n<blockquote class=\"last\">\n<div><p>signal values</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.GeneralizedQSamplingFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the discrete ODF for a given discrete sphere.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"generalizedqsamplingmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingModel\" title=\"dipy.reconst.gqi.GeneralizedQSamplingModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">GeneralizedQSamplingModel</span></code></a><a class=\"headerlink\" href=\"#generalizedqsamplingmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.gqi.GeneralizedQSamplingModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">GeneralizedQSamplingModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>method='gqi2'</em>, <em>sampling_length=1.2</em>, <em>normalize_peaks=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfModel\" title=\"dipy.reconst.odf.OdfModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.odf.OdfModel</span></code></a>, <a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache\" title=\"dipy.reconst.cache.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.cache.Cache</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingModel.fit\" title=\"dipy.reconst.gqi.GeneralizedQSamplingModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method for every voxel in data</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.GeneralizedQSamplingModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>method='gqi2'</em>, <em>sampling_length=1.2</em>, <em>normalize_peaks=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generalized Q-Sampling Imaging <a class=\"reference internal\" href=\"#r286\" id=\"id383\">[R286]</a></p>\n<p>This model has the same assumptions as the DSI method i.e. Cartesian\ngrid sampling in q-space and fast gradient switching.</p>\n<p>Implements equations 2.14 from <a class=\"reference internal\" href=\"#r287\" id=\"id384\">[R287]</a> for standard GQI and equation 2.16\nfrom <a class=\"reference internal\" href=\"#r287\" id=\"id385\">[R287]</a> for GQI2. You can think of GQI2 as an analytical solution of\nthe DSI ODF.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : object,</p>\n<blockquote>\n<div><p>GradientTable</p>\n</div></blockquote>\n<p><strong>method</strong> : str,</p>\n<blockquote>\n<div><p>&#8216;standard&#8217; or &#8216;gqi2&#8217;</p>\n</div></blockquote>\n<p><strong>sampling_length</strong> : float,</p>\n<blockquote class=\"last\">\n<div><p>diffusion sampling length (lambda in eq. 2.14 and 2.16)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.dsi.DiffusionSpectrumModel\" title=\"dipy.reconst.dsi.DiffusionSpectrumModel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dipy.reconst.dsi.DiffusionSpectrumModel</span></code></a></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>As of version 0.9, range of the sampling length in GQI2 has changed\nto match the same scale used in the &#8216;standard&#8217; method <a class=\"reference internal\" href=\"#r286\" id=\"id386\">[R286]</a>. This\nmeans that the value of <cite>sampling_length</cite> should be approximately\n1 - 1.3 (see <a class=\"reference internal\" href=\"#r286\" id=\"id387\">[R286]</a>, pg. 1628).</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r286\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R286]</td><td><em>(<a class=\"fn-backref\" href=\"#id383\">1</a>, <a class=\"fn-backref\" href=\"#id386\">2</a>, <a class=\"fn-backref\" href=\"#id387\">3</a>, <a class=\"fn-backref\" href=\"#id388\">4</a>)</em> Yeh F-C et. al, &#8220;Generalized Q-Sampling Imaging&#8221;, IEEE TMI, 2010</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r287\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R287]</td><td><em>(<a class=\"fn-backref\" href=\"#id384\">1</a>, <a class=\"fn-backref\" href=\"#id385\">2</a>, <a class=\"fn-backref\" href=\"#id389\">3</a>)</em> Garyfallidis E, &#8220;Towards an accurate brain tractography&#8221;, PhD</td></tr>\n</tbody>\n</table>\n<p>thesis, University of Cambridge, 2012.</p>\n<p class=\"rubric\">Examples</p>\n<p>Here we create an example where we provide the data, a gradient table\nand a reconstruction sphere and calculate the ODF for the first\nvoxel in the data.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">dsi_voxels</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">dsi_voxels</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.subdivide_octahedron</span> <span class=\"k\">import</span> <span class=\"n\">create_unit_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">create_unit_sphere</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.gqi</span> <span class=\"k\">import</span> <span class=\"n\">GeneralizedQSamplingModel</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gq</span> <span class=\"o\">=</span> <span class=\"n\">GeneralizedQSamplingModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gqi2&#39;</span><span class=\"p\">,</span> <span class=\"mf\">1.1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">voxel_signal</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">odf</span> <span class=\"o\">=</span> <span class=\"n\">gq</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">voxel_signal</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.GeneralizedQSamplingModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.GeneralizedQSamplingModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method for every voxel in data</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id390\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.gqi.OdfFit\" title=\"dipy.reconst.gqi.OdfFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OdfFit</span></code></a><a class=\"headerlink\" href=\"#id390\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.gqi.OdfFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">OdfFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.OdfFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstFit</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.OdfFit.odf\" title=\"dipy.reconst.gqi.OdfFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>To be implemented but specific odf models</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.OdfFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.OdfFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.OdfFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.OdfFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>To be implemented but specific odf models</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id391\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.gqi.OdfModel\" title=\"dipy.reconst.gqi.OdfModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OdfModel</span></code></a><a class=\"headerlink\" href=\"#id391\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.gqi.OdfModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">OdfModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.OdfModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>An abstract class to be sub-classed by specific odf models</p>\n<p>All odf models should provide a fit method which may take data as it&#8217;s\nfirst and only argument.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.gqi.OdfModel.fit\" title=\"dipy.reconst.gqi.OdfModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data)</td>\n<td>To be implemented by specific odf models</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.OdfModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.OdfModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.gqi.OdfModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.OdfModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>To be implemented by specific odf models</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"equatorial-maximum\">\n<h3>equatorial_maximum<a class=\"headerlink\" href=\"#equatorial-maximum\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.equatorial_maximum\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">equatorial_maximum</code><span class=\"sig-paren\">(</span><em>vertices</em>, <em>odf</em>, <em>pole</em>, <em>width</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.equatorial_maximum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"equatorial-zone-vertices\">\n<h3>equatorial_zone_vertices<a class=\"headerlink\" href=\"#equatorial-zone-vertices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.equatorial_zone_vertices\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">equatorial_zone_vertices</code><span class=\"sig-paren\">(</span><em>vertices</em>, <em>pole</em>, <em>width=5</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.equatorial_zone_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>finds the &#8216;vertices&#8217; in the equatorial zone conjugate\nto &#8216;pole&#8217; with width half &#8216;width&#8217; degrees</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gfa\">\n<h3>gfa<a class=\"headerlink\" href=\"#gfa\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.gfa\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">gfa</code><span class=\"sig-paren\">(</span><em>samples</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.gfa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The general fractional anisotropy of a function evaluated\non the unit sphere</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id392\">\n<h3>local_maxima<a class=\"headerlink\" href=\"#id392\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.local_maxima\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">local_maxima</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.local_maxima\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Local maxima of a function evaluated on a discrete set of points.</p>\n<p>If a function is evaluated on some set of points where each pair of\nneighboring points is an edge in edges, find the local maxima.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>odf</strong> : array, 1d, dtype=double</p>\n<blockquote>\n<div><p>The function evaluated on a set of discrete points.</p>\n</div></blockquote>\n<p><strong>edges</strong> : array (N, 2)</p>\n<blockquote>\n<div><p>The set of neighbor relations between the points. Every edge, ie\n<cite>edges[i, :]</cite>, is a pair of neighboring points.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>peak_values</strong> : ndarray</p>\n<blockquote>\n<div><p>Value of odf at a maximum point. Peak values is sorted in descending\norder.</p>\n</div></blockquote>\n<p><strong>peak_indices</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Indices of maximum points. Sorted in the same order as <cite>peak_values</cite> so\n<cite>odf[peak_indices[i]] == peak_values[i]</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"../dipy.core/#module-dipy.core.sphere\" title=\"dipy.core.sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dipy.core.sphere</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id393\">\n<h3>multi_voxel_fit<a class=\"headerlink\" href=\"#id393\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.multi_voxel_fit\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">multi_voxel_fit</code><span class=\"sig-paren\">(</span><em>single_voxel_fit</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.multi_voxel_fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Method decorator to turn a single voxel model fit\ndefinition into a multi voxel model fit definition</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"normalize-qa\">\n<h3>normalize_qa<a class=\"headerlink\" href=\"#normalize-qa\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.normalize_qa\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">normalize_qa</code><span class=\"sig-paren\">(</span><em>qa</em>, <em>max_qa=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.normalize_qa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Normalize quantitative anisotropy.</p>\n<p>Used mostly with GQI rather than GQI2.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>qa</strong> : array, shape (X, Y, Z, N)</p>\n<blockquote>\n<div><p>where N is the maximum number of peaks stored</p>\n</div></blockquote>\n<p><strong>max_qa</strong> : float,</p>\n<blockquote>\n<div><p>maximum qa value. Usually found in the CSF (corticospinal fluid).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>nqa</strong> : array, shape (x, Y, Z, N)</p>\n<blockquote class=\"last\">\n<div><p>normalized quantitative anisotropy</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Normalized quantitative anisotropy has the very useful property\nto be very small near gray matter and background areas. Therefore,\nit can be used to mask out white matter areas.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"npa\">\n<h3>npa<a class=\"headerlink\" href=\"#npa\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.npa\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">npa</code><span class=\"sig-paren\">(</span><em>self</em>, <em>odf</em>, <em>width=5</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.npa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>non-parametric anisotropy</p>\n<p>Nimmo-Smith et. al  ISMRM 2011</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"odf-sum\">\n<h3>odf_sum<a class=\"headerlink\" href=\"#odf-sum\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.odf_sum\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">odf_sum</code><span class=\"sig-paren\">(</span><em>odf</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.odf_sum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"patch-maximum\">\n<h3>patch_maximum<a class=\"headerlink\" href=\"#patch-maximum\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.patch_maximum\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">patch_maximum</code><span class=\"sig-paren\">(</span><em>vertices</em>, <em>odf</em>, <em>pole</em>, <em>width</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.patch_maximum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"patch-sum\">\n<h3>patch_sum<a class=\"headerlink\" href=\"#patch-sum\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.patch_sum\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">patch_sum</code><span class=\"sig-paren\">(</span><em>vertices</em>, <em>odf</em>, <em>pole</em>, <em>width</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.patch_sum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"patch-vertices\">\n<h3>patch_vertices<a class=\"headerlink\" href=\"#patch-vertices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.patch_vertices\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">patch_vertices</code><span class=\"sig-paren\">(</span><em>vertices</em>, <em>pole</em>, <em>width</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.patch_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>find &#8216;vertices&#8217; within the cone of &#8216;width&#8217; degrees around &#8216;pole&#8217;</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"polar-zone-vertices\">\n<h3>polar_zone_vertices<a class=\"headerlink\" href=\"#polar-zone-vertices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.polar_zone_vertices\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">polar_zone_vertices</code><span class=\"sig-paren\">(</span><em>vertices</em>, <em>pole</em>, <em>width=5</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.polar_zone_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>finds the &#8216;vertices&#8217; in the equatorial band around\nthe &#8216;pole&#8217; of radius &#8216;width&#8217; degrees</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"remove-similar-vertices\">\n<h3>remove_similar_vertices<a class=\"headerlink\" href=\"#remove-similar-vertices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.remove_similar_vertices\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">remove_similar_vertices</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.remove_similar_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove vertices that are less than <cite>theta</cite> degrees from any other</p>\n<p>Returns vertices that are at least theta degrees from any other vertex.\nVertex v and -v are considered the same so if v and -v are both in\n<cite>vertices</cite> only one is kept. Also if v and w are both in vertices, w must\nbe separated by theta degrees from both v and -v to be unique.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vertices</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>N unit vectors.</p>\n</div></blockquote>\n<p><strong>theta</strong> : float</p>\n<blockquote>\n<div><p>The minimum separation between vertices in degrees.</p>\n</div></blockquote>\n<p><strong>return_mapping</strong> : {False, True}, optional</p>\n<blockquote>\n<div><p>If True, return <cite>mapping</cite> as well as <cite>vertices</cite> and maybe <cite>indices</cite>\n(see below).</p>\n</div></blockquote>\n<p><strong>return_indices</strong> : {False, True}, optional</p>\n<blockquote>\n<div><p>If True, return <cite>indices</cite> as well as <cite>vertices</cite> and maybe <cite>mapping</cite>\n(see below).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>unique_vertices</strong> : (M, 3) ndarray</p>\n<blockquote>\n<div><p>Vertices sufficiently separated from one another.</p>\n</div></blockquote>\n<p><strong>mapping</strong> : (N,) ndarray</p>\n<blockquote>\n<div><p>For each element <code class=\"docutils literal\"><span class=\"pre\">vertices[i]</span></code> (<span class=\"math\">\\(i \\in 0..N-1\\)</span>), the index <span class=\"math\">\\(j\\)</span> to a\nvertex in <cite>unique_vertices</cite> that is less than <cite>theta</cite> degrees from\n<code class=\"docutils literal\"><span class=\"pre\">vertices[i]</span></code>.  Only returned if <cite>return_mapping</cite> is True.</p>\n</div></blockquote>\n<p><strong>indices</strong> : (N,) ndarray</p>\n<blockquote class=\"last\">\n<div><p><cite>indices</cite> gives the reverse of <cite>mapping</cite>.  For each element\n<code class=\"docutils literal\"><span class=\"pre\">unique_vertices[j]</span></code> (<span class=\"math\">\\(j \\in 0..M-1\\)</span>), the index <span class=\"math\">\\(i\\)</span> to a vertex in\n<cite>vertices</cite> that is less than <cite>theta</cite> degrees from\n<code class=\"docutils literal\"><span class=\"pre\">unique_vertices[j]</span></code>.  If there is more than one element of\n<cite>vertices</cite> that is less than theta degrees from <cite>unique_vertices[j]</cite>,\nreturn the first (lowest index) matching value.  Only return if\n<cite>return_indices</cite> is True.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"squared-radial-component\">\n<h3>squared_radial_component<a class=\"headerlink\" href=\"#squared-radial-component\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.squared_radial_component\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">squared_radial_component</code><span class=\"sig-paren\">(</span><em>x</em>, <em>tol=0.01</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.squared_radial_component\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Part of the GQI2 integral</p>\n<p>Eq.8 in the referenced paper by Yeh et al. 2010</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"triple-odf-maxima\">\n<h3>triple_odf_maxima<a class=\"headerlink\" href=\"#triple-odf-maxima\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.triple_odf_maxima\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">triple_odf_maxima</code><span class=\"sig-paren\">(</span><em>vertices</em>, <em>odf</em>, <em>width</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.triple_odf_maxima\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"upper-hemi-map\">\n<h3>upper_hemi_map<a class=\"headerlink\" href=\"#upper-hemi-map\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.gqi.upper_hemi_map\">\n<code class=\"descclassname\">dipy.reconst.gqi.</code><code class=\"descname\">upper_hemi_map</code><span class=\"sig-paren\">(</span><em>v</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.gqi.upper_hemi_map\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>maps a 3-vector into the z-upper hemisphere</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"interpolator\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.interpolate.Interpolator\" title=\"dipy.reconst.interpolate.Interpolator\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Interpolator</span></code></a><a class=\"headerlink\" href=\"#interpolator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.interpolate.Interpolator\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.interpolate.</code><code class=\"descname\">Interpolator</code><span class=\"sig-paren\">(</span><em>data</em>, <em>voxel_size</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.interpolate.Interpolator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Class to be subclassed by different interpolator types</p>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.interpolate.Interpolator.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>data</em>, <em>voxel_size</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.interpolate.Interpolator.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"nearestneighborinterpolator\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.interpolate.NearestNeighborInterpolator\" title=\"dipy.reconst.interpolate.NearestNeighborInterpolator\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">NearestNeighborInterpolator</span></code></a><a class=\"headerlink\" href=\"#nearestneighborinterpolator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.interpolate.NearestNeighborInterpolator\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.interpolate.</code><code class=\"descname\">NearestNeighborInterpolator</code><span class=\"sig-paren\">(</span><em>data</em>, <em>voxel_size</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.interpolate.NearestNeighborInterpolator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.interpolate.Interpolator\" title=\"dipy.reconst.interpolate.Interpolator\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.interpolate.Interpolator</span></code></a></p>\n<p>Interpolates data using nearest neighbor interpolation</p>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.interpolate.NearestNeighborInterpolator.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>data</em>, <em>voxel_size</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.interpolate.NearestNeighborInterpolator.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"outsideimage\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.interpolate.OutsideImage\" title=\"dipy.reconst.interpolate.OutsideImage\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OutsideImage</span></code></a><a class=\"headerlink\" href=\"#outsideimage\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.interpolate.OutsideImage\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.interpolate.</code><code class=\"descname\">OutsideImage</code><a class=\"headerlink\" href=\"#dipy.reconst.interpolate.OutsideImage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">Exception</span></code></p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">args</span></code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">with_traceback</span></code></td>\n<td>Exception.with_traceback(tb) &#8211; set self.__traceback__ to tb and return self.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.interpolate.OutsideImage.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.interpolate.OutsideImage.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"trilinearinterpolator\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.interpolate.TriLinearInterpolator\" title=\"dipy.reconst.interpolate.TriLinearInterpolator\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">TriLinearInterpolator</span></code></a><a class=\"headerlink\" href=\"#trilinearinterpolator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.interpolate.TriLinearInterpolator\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.interpolate.</code><code class=\"descname\">TriLinearInterpolator</code><span class=\"sig-paren\">(</span><em>data</em>, <em>voxel_size</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.interpolate.TriLinearInterpolator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.interpolate.Interpolator\" title=\"dipy.reconst.interpolate.Interpolator\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.interpolate.Interpolator</span></code></a></p>\n<p>Interpolates data using trilinear interpolation</p>\n<p>interpolate 4d diffusion volume using 3 indices, ie data[x, y, z]</p>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.interpolate.TriLinearInterpolator.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>data</em>, <em>voxel_size</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.interpolate.TriLinearInterpolator.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"array\">\n<h3>array<a class=\"headerlink\" href=\"#array\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.interpolate.array\">\n<code class=\"descclassname\">dipy.reconst.interpolate.</code><code class=\"descname\">array</code><span class=\"sig-paren\">(</span><em>object</em>, <em>dtype=None</em>, <em>copy=True</em>, <em>order='K'</em>, <em>subok=False</em>, <em>ndmin=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.interpolate.array\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an array.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>object</strong> : array_like</p>\n<blockquote>\n<div><p>An array, any object exposing the array interface, an object whose\n__array__ method returns an array, or any (nested) sequence.</p>\n</div></blockquote>\n<p><strong>dtype</strong> : data-type, optional</p>\n<blockquote>\n<div><p>The desired data-type for the array.  If not given, then the type will\nbe determined as the minimum type required to hold the objects in the\nsequence.  This argument can only be used to &#8216;upcast&#8217; the array.  For\ndowncasting, use the .astype(t) method.</p>\n</div></blockquote>\n<p><strong>copy</strong> : bool, optional</p>\n<blockquote>\n<div><p>If true (default), then the object is copied.  Otherwise, a copy will\nonly be made if __array__ returns a copy, if obj is a nested sequence,\nor if a copy is needed to satisfy any of the other requirements\n(<cite>dtype</cite>, <cite>order</cite>, etc.).</p>\n</div></blockquote>\n<p><strong>order</strong> : {&#8216;K&#8217;, &#8216;A&#8217;, &#8216;C&#8217;, &#8216;F&#8217;}, optional</p>\n<blockquote>\n<div><p>Specify the memory layout of the array. If object is not an array, the\nnewly created array will be in C order (row major) unless &#8216;F&#8217; is\nspecified, in which case it will be in Fortran order (column major).\nIf object is an array the following holds.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"8%\" />\n<col width=\"14%\" />\n<col width=\"78%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">order</th>\n<th class=\"head\">no copy</th>\n<th class=\"head\">copy=True</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>&#8216;K&#8217;</td>\n<td>unchanged</td>\n<td>F &amp; C order preserved, otherwise most similar order</td>\n</tr>\n<tr class=\"row-odd\"><td>&#8216;A&#8217;</td>\n<td>unchanged</td>\n<td>F order if input is F and not C, otherwise C order</td>\n</tr>\n<tr class=\"row-even\"><td>&#8216;C&#8217;</td>\n<td>C order</td>\n<td>C order</td>\n</tr>\n<tr class=\"row-odd\"><td>&#8216;F&#8217;</td>\n<td>F order</td>\n<td>F order</td>\n</tr>\n</tbody>\n</table>\n<p>When <code class=\"docutils literal\"><span class=\"pre\">copy=False</span></code> and a copy is made for other reasons, the result is\nthe same as if <code class=\"docutils literal\"><span class=\"pre\">copy=True</span></code>, with some exceptions for <cite>A</cite>, see the\nNotes section. The default order is &#8216;K&#8217;.</p>\n</div></blockquote>\n<p><strong>subok</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, then sub-classes will be passed-through, otherwise\nthe returned array will be forced to be a base-class array (default).</p>\n</div></blockquote>\n<p><strong>ndmin</strong> : int, optional</p>\n<blockquote>\n<div><p>Specifies the minimum number of dimensions that the resulting\narray should have.  Ones will be pre-pended to the shape as\nneeded to meet this requirement.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>out</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>An array object satisfying the specified requirements.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">empty</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">empty_like</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">zeros</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">zeros_like</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ones</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ones_like</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">full</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">full_like</span></code></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>When order is &#8216;A&#8217; and <cite>object</cite> is an array in neither &#8216;C&#8217; nor &#8216;F&#8217; order,\nand a copy is forced by a change in dtype, then the order of the result is\nnot necessarily &#8216;C&#8217; as expected. This is likely a bug.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"go\">array([1, 2, 3])</span>\n</pre></div>\n</div>\n<p>Upcasting:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">])</span>\n<span class=\"go\">array([ 1.,  2.,  3.])</span>\n</pre></div>\n</div>\n<p>More than one dimension:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"go\">array([[1, 2],</span>\n<span class=\"go\">       [3, 4]])</span>\n</pre></div>\n</div>\n<p>Minimum dimensions 2:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">ndmin</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">array([[1, 2, 3]])</span>\n</pre></div>\n</div>\n<p>Type provided:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">complex</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1.+0.j,  2.+0.j,  3.+0.j])</span>\n</pre></div>\n</div>\n<p>Data-type consisting of more than one element:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">)],</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;&lt;i4&#39;</span><span class=\"p\">),(</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;&lt;i4&#39;</span><span class=\"p\">)])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">array([1, 3])</span>\n</pre></div>\n</div>\n<p>Creating an array from sub-classes:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">(</span><span class=\"s1\">&#39;1 2; 3 4&#39;</span><span class=\"p\">))</span>\n<span class=\"go\">array([[1, 2],</span>\n<span class=\"go\">       [3, 4]])</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">(</span><span class=\"s1\">&#39;1 2; 3 4&#39;</span><span class=\"p\">),</span> <span class=\"n\">subok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">matrix([[1, 2],</span>\n<span class=\"go\">        [3, 4]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"trilinear-interp\">\n<h3>trilinear_interp<a class=\"headerlink\" href=\"#trilinear-interp\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.interpolate.trilinear_interp\">\n<code class=\"descclassname\">dipy.reconst.interpolate.</code><code class=\"descname\">trilinear_interp</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.interpolate.trilinear_interp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Interpolates vector from 4D <cite>data</cite> at 3D point given by <cite>index</cite></p>\n<p>Interpolates a vector of length T from a 4D volume of shape (I, J, K, T),\ngiven point (x, y, z) where (x, y, z) are the coordinates of the point in\nreal units (not yet adjusted for voxel size).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"ivimfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimFit\" title=\"dipy.reconst.ivim.IvimFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">IvimFit</span></code></a><a class=\"headerlink\" href=\"#ivimfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.ivim.IvimFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.ivim.</code><code class=\"descname\">IvimFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimFit.D\" title=\"dipy.reconst.ivim.IvimFit.D\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">D</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimFit.D_star\" title=\"dipy.reconst.ivim.IvimFit.D_star\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">D_star</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimFit.S0_predicted\" title=\"dipy.reconst.ivim.IvimFit.S0_predicted\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">S0_predicted</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimFit.perfusion_fraction\" title=\"dipy.reconst.ivim.IvimFit.perfusion_fraction\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">perfusion_fraction</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimFit.shape\" title=\"dipy.reconst.ivim.IvimFit.shape\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimFit.predict\" title=\"dipy.reconst.ivim.IvimFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(gtab[,&nbsp;S0])</td>\n<td>Given a model fit, predict the signal.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.IvimFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>model_params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a IvimFit class instance.\nParameters\n&#8212;&#8212;&#8212;-\nmodel : Model class\nmodel_params : array</p>\n<blockquote>\n<div>The parameters of the model. In this case it is an\narray of ivim parameters. If the fitting is done\nfor multi_voxel data, the multi_voxel decorator will\nrun the fitting on all the voxels and model_params\nwill be an array of the dimensions (data[:-1], 4),\ni.e., there will be 4 parameters for each of the voxels.</div></blockquote>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.ivim.IvimFit.D\">\n<code class=\"descname\">D</code><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimFit.D\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.ivim.IvimFit.D_star\">\n<code class=\"descname\">D_star</code><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimFit.D_star\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.ivim.IvimFit.S0_predicted\">\n<code class=\"descname\">S0_predicted</code><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimFit.S0_predicted\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.ivim.IvimFit.perfusion_fraction\">\n<code class=\"descname\">perfusion_fraction</code><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimFit.perfusion_fraction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.IvimFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a model fit, predict the signal.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable class instance</p>\n<blockquote>\n<div><p>Gradient directions and bvalues</p>\n</div></blockquote>\n<p><strong>S0</strong> : float</p>\n<blockquote>\n<div><p>S0 value here is not necessary and will not be used to predict the\nsignal. It has been added to conform to the structure of the\npredict method in multi_voxel which requires a keyword argument S0.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>signal</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>The signal values predicted for this model using its parameters.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.ivim.IvimFit.shape\">\n<code class=\"descname\">shape</code><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimFit.shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"ivimmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimModel\" title=\"dipy.reconst.ivim.IvimModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">IvimModel</span></code></a><a class=\"headerlink\" href=\"#ivimmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.ivim.IvimModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.ivim.</code><code class=\"descname\">IvimModel</code><span class=\"sig-paren\">(</span><em>gtab, split_b_D=400.0, split_b_S0=200.0, bounds=None, two_stage=True, tol=1e-15, x_scale=[1000.0, 0.1, 0.001, 0.0001], options={'gtol': 1e-15, 'ftol': 1e-15, 'eps': 1e-15, 'maxiter': 1000}</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>Ivim model</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimModel.estimate_f_D_star\" title=\"dipy.reconst.ivim.IvimModel.estimate_f_D_star\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">estimate_f_D_star</span></code></a>(params_f_D_star,&nbsp;data,&nbsp;S0,&nbsp;D)</td>\n<td>Estimate f and D_star using the values of all the other parameters obtained from a linear fit.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimModel.estimate_linear_fit\" title=\"dipy.reconst.ivim.IvimModel.estimate_linear_fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">estimate_linear_fit</span></code></a>(data,&nbsp;split_b[,&nbsp;less_than])</td>\n<td>Estimate a linear fit by taking log of data.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimModel.fit\" title=\"dipy.reconst.ivim.IvimModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method for every voxel in data</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.IvimModel.predict\" title=\"dipy.reconst.ivim.IvimModel.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(ivim_params,&nbsp;gtab[,&nbsp;S0])</td>\n<td>Predict a signal for this IvimModel class instance given parameters.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.IvimModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab, split_b_D=400.0, split_b_S0=200.0, bounds=None, two_stage=True, tol=1e-15, x_scale=[1000.0, 0.1, 0.001, 0.0001], options={'gtol': 1e-15, 'ftol': 1e-15, 'eps': 1e-15, 'maxiter': 1000}</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize an IVIM model.</p>\n<p>The IVIM model assumes that biological tissue includes a volume\nfraction &#8216;f&#8217; of water flowing with a pseudo-perfusion coefficient\nD* and a fraction (1-f) of static (diffusion only), intra and\nextracellular water, with a diffusion coefficient D. In this model\nthe echo attenuation of a signal in a single voxel can be written as</p>\n<blockquote>\n<div><div class=\"math\">\n\\[\\]</div>\n<p>S(b) = S_0[f*e^{(-b*D*)} + (1-f)e^{(-b*D)}]</p>\n<p>Where:\n.. math:</p>\n<p>S_0, f, D* and D are the IVIM parameters.</p>\n</div></blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable class instance</p>\n<blockquote>\n<div><p>Gradient directions and bvalues</p>\n</div></blockquote>\n<p><strong>split_b_D</strong> : float, optional</p>\n<blockquote>\n<div><p>The b-value to split the data on for two-stage fit. This will be\nused while estimating the value of D. The assumption is that at\nhigher b values the effects of perfusion is less and hence the\nsignal can be approximated as a mono-exponential decay.\ndefault : 400.</p>\n</div></blockquote>\n<p><strong>split_b_S0</strong> : float, optional</p>\n<blockquote>\n<div><p>The b-value to split the data on for two-stage fit for estimation\nof S0 and initial guess for D_star. The assumption here is that\nat low bvalues the effects of perfusion are more.\ndefault : 200.</p>\n</div></blockquote>\n<p><strong>bounds</strong> : tuple of arrays with 4 elements, optional</p>\n<blockquote>\n<div><p>Bounds to constrain the fitted model parameters. This is only\nsupported for Scipy version &gt; 0.17. When using a older Scipy\nversion, this function will raise an error if bounds are different\nfrom None. This parameter is also used to fill nan values for out\nof bounds parameters in the <cite>IvimFit</cite> class using the method\nfill_na. default : ([0., 0., 0., 0.], [np.inf, .3, 1., 1.])</p>\n</div></blockquote>\n<p><strong>two_stage</strong> : bool</p>\n<blockquote>\n<div><p>Argument to specify whether to perform a non-linear fitting of all\nparameters after the linear fitting by splitting the data based on\nbvalues. This gives more accurate parameters but takes more time.\nThe linear fit can be used to get a quick estimation of the\nparameters. default : False</p>\n</div></blockquote>\n<p><strong>tol</strong> : float, optional</p>\n<blockquote>\n<div><p>Tolerance for convergence of minimization.\ndefault : 1e-15</p>\n</div></blockquote>\n<p><strong>x_scale</strong> : array, optional</p>\n<blockquote>\n<div><p>Scaling for the parameters. This is passed to <cite>least_squares</cite> which\nis only available for Scipy version &gt; 0.17.\ndefault: [1000, 0.01, 0.001, 0.0001]</p>\n</div></blockquote>\n<p><strong>options</strong> : dict, optional</p>\n<blockquote class=\"last\">\n<div><p>Dictionary containing gtol, ftol, eps and maxiter. This is passed\nto leastsq.\ndefault : options={&#8216;gtol&#8217;: 1e-15, &#8216;ftol&#8217;: 1e-15, &#8216;eps&#8217;: 1e-15,</p>\n<blockquote>\n<div><p>&#8216;maxiter&#8217;: 1000}</p>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r288\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id394\">[R288]</a></td><td>Le Bihan, Denis, et al. &#8220;Separation of diffusion and perfusion\nin intravoxel incoherent motion MR imaging.&#8221; Radiology 168.2\n(1988): 497-505.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r289\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id395\">[R289]</a></td><td>Federau, Christian, et al. &#8220;Quantitative measurement of brain\nperfusion with intravoxel incoherent motion MR imaging.&#8221;\nRadiology 265.3 (2012): 874-881.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.IvimModel.estimate_f_D_star\">\n<code class=\"descname\">estimate_f_D_star</code><span class=\"sig-paren\">(</span><em>params_f_D_star</em>, <em>data</em>, <em>S0</em>, <em>D</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimModel.estimate_f_D_star\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Estimate f and D_star using the values of all the other parameters\nobtained from a linear fit.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>params_f_D_star: array</strong> :</p>\n<blockquote>\n<div><p>An array containing the value of f and D_star.</p>\n</div></blockquote>\n<p><strong>data</strong> : array</p>\n<blockquote>\n<div><p>Array containing the actual signal values.</p>\n</div></blockquote>\n<p><strong>S0</strong> : float</p>\n<blockquote>\n<div><p>The parameters S0 obtained from a linear fit.</p>\n</div></blockquote>\n<p><strong>D</strong> : float</p>\n<blockquote>\n<div><p>The parameters D obtained from a linear fit.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>f</strong> : float</p>\n<blockquote>\n<div><p>Perfusion fraction estimated from the fit.</p>\n</div></blockquote>\n<p><strong>D_star :</strong> :</p>\n<blockquote class=\"last\">\n<div><p>The value of D_star estimated from the fit.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.IvimModel.estimate_linear_fit\">\n<code class=\"descname\">estimate_linear_fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>split_b</em>, <em>less_than=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimModel.estimate_linear_fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Estimate a linear fit by taking log of data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array</p>\n<blockquote>\n<div><p>An array containing the data to be fit</p>\n</div></blockquote>\n<p><strong>split_b</strong> : float</p>\n<blockquote>\n<div><p>The b value to split the data</p>\n</div></blockquote>\n<p><strong>less_than</strong> : bool</p>\n<blockquote>\n<div><p>If True, splitting occurs for bvalues less than split_b</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S0</strong> : float</p>\n<blockquote>\n<div><p>The estimated S0 value. (intercept)</p>\n</div></blockquote>\n<p><strong>D</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>The estimated value of D.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.IvimModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method for every voxel in data</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.IvimModel.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>ivim_params</em>, <em>gtab</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.IvimModel.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict a signal for this IvimModel class instance given parameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>ivim_params</strong> : array</p>\n<blockquote>\n<div><p>The ivim parameters as an array [S0, f, D_star and D]</p>\n</div></blockquote>\n<p><strong>gtab</strong> : GradientTable class instance</p>\n<blockquote>\n<div><p>Gradient directions and bvalues.</p>\n</div></blockquote>\n<p><strong>S0</strong> : float, optional</p>\n<blockquote>\n<div><p>This has been added just for consistency with the existing\nAPI. Unlike other models, IVIM predicts S0 and this is over written\nby the S0 value in params.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ivim_signal</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>The predicted IVIM signal using given parameters.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"looseversion\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.ivim.LooseVersion\" title=\"dipy.reconst.ivim.LooseVersion\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">LooseVersion</span></code></a><a class=\"headerlink\" href=\"#looseversion\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.ivim.LooseVersion\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.ivim.</code><code class=\"descname\">LooseVersion</code><span class=\"sig-paren\">(</span><em>vstring=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.LooseVersion\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">distutils.version.Version</span></code></p>\n<p>Version numbering for anarchists and software realists.\nImplements the standard interface for version number classes as\ndescribed above.  A version number consists of a series of numbers,\nseparated by either periods or strings of letters.  When comparing\nversion numbers, the numeric components will be compared\nnumerically, and the alphabetic components lexically.  The following\nare all valid version numbers, in no particular order:</p>\n<blockquote>\n<div>1.5.1\n1.5.2b2\n161\n3.10a\n8.02\n3.4j\n1996.07.12\n3.2.pl0\n3.1.1.6\n2g6\n11g\n0.960923\n2.2beta29\n1.13++\n5.5.kw\n2.0b1pl0</div></blockquote>\n<p>In fact, there is no such thing as an invalid version number under\nthis scheme; the rules for comparison are simple and predictable,\nbut may not always give the results you want (for some definition\nof &#8220;want&#8221;).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.LooseVersion.parse\" title=\"dipy.reconst.ivim.LooseVersion.parse\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">parse</span></code></a>(vstring)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.LooseVersion.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>vstring=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.LooseVersion.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.ivim.LooseVersion.component_re\">\n<code class=\"descname\">component_re</code><em class=\"property\"> = re.compile('(\\\\d+ | [a-z]+ | \\\\.)', re.VERBOSE)</em><a class=\"headerlink\" href=\"#dipy.reconst.ivim.LooseVersion.component_re\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.LooseVersion.parse\">\n<code class=\"descname\">parse</code><span class=\"sig-paren\">(</span><em>vstring</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.LooseVersion.parse\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id396\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.ivim.ReconstModel\" title=\"dipy.reconst.ivim.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstModel</span></code></a><a class=\"headerlink\" href=\"#id396\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.ivim.ReconstModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.ivim.</code><code class=\"descname\">ReconstModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.ReconstModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class for signal reconstruction models</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.ivim.ReconstModel.fit\" title=\"dipy.reconst.ivim.ReconstModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.ReconstModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.ReconstModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialization of the abstract class for signal reconstruction models</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gtab</strong> : GradientTable class instance</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.ivim.ReconstModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.ReconstModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"f-d-star-error\">\n<h3>f_D_star_error<a class=\"headerlink\" href=\"#f-d-star-error\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.ivim.f_D_star_error\">\n<code class=\"descclassname\">dipy.reconst.ivim.</code><code class=\"descname\">f_D_star_error</code><span class=\"sig-paren\">(</span><em>params</em>, <em>gtab</em>, <em>signal</em>, <em>S0</em>, <em>D</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.f_D_star_error\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Error function used to fit f and D_star keeping S0 and D fixed</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>params</strong> : array</p>\n<blockquote>\n<div><p>The value of f and D_star.</p>\n</div></blockquote>\n<p><strong>gtab</strong> : GradientTable class instance</p>\n<blockquote>\n<div><p>Gradient directions and bvalues.</p>\n</div></blockquote>\n<p><strong>signal</strong> : array</p>\n<blockquote>\n<div><p>Array containing the actual signal values.</p>\n</div></blockquote>\n<p><strong>S0</strong> : float</p>\n<blockquote>\n<div><p>The parameters S0 obtained from a linear fit.</p>\n</div></blockquote>\n<p><strong>D</strong> : float</p>\n<blockquote>\n<div><p>The parameters D obtained from a linear fit.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>residual</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>An array containing the difference of actual and estimated signal.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"f-d-star-prediction\">\n<h3>f_D_star_prediction<a class=\"headerlink\" href=\"#f-d-star-prediction\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.ivim.f_D_star_prediction\">\n<code class=\"descclassname\">dipy.reconst.ivim.</code><code class=\"descname\">f_D_star_prediction</code><span class=\"sig-paren\">(</span><em>params</em>, <em>gtab</em>, <em>S0</em>, <em>D</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.f_D_star_prediction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Function used to predict IVIM signal when S0 and D are known\nby considering f and D_star as the unknown parameters.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>params</strong> : array</p>\n<blockquote>\n<div><p>The value of f and D_star.</p>\n</div></blockquote>\n<p><strong>gtab</strong> : GradientTable class instance</p>\n<blockquote>\n<div><p>Gradient directions and bvalues.</p>\n</div></blockquote>\n<p><strong>S0</strong> : float</p>\n<blockquote>\n<div><p>The parameters S0 obtained from a linear fit.</p>\n</div></blockquote>\n<p><strong>D</strong> : float</p>\n<blockquote>\n<div><p>The parameters D obtained from a linear fit.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>An array containing the IVIM signal estimated using given parameters.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"ivim-prediction\">\n<h3>ivim_prediction<a class=\"headerlink\" href=\"#ivim-prediction\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.ivim.ivim_prediction\">\n<code class=\"descclassname\">dipy.reconst.ivim.</code><code class=\"descname\">ivim_prediction</code><span class=\"sig-paren\">(</span><em>params</em>, <em>gtab</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.ivim_prediction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The Intravoxel incoherent motion (IVIM) model function.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>params</strong> : array</p>\n<blockquote>\n<div><p>An array of IVIM parameters - [S0, f, D_star, D].</p>\n</div></blockquote>\n<p><strong>gtab</strong> : GradientTable class instance</p>\n<blockquote>\n<div><p>Gradient directions and bvalues.</p>\n</div></blockquote>\n<p><strong>S0</strong> : float, optional</p>\n<blockquote>\n<div><p>This has been added just for consistency with the existing\nAPI. Unlike other models, IVIM predicts S0 and this is over written\nby the S0 value in params.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>An array containing the IVIM signal estimated using given parameters.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"least-squares\">\n<h3>least_squares<a class=\"headerlink\" href=\"#least-squares\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.ivim.least_squares\">\n<code class=\"descclassname\">dipy.reconst.ivim.</code><code class=\"descname\">least_squares</code><span class=\"sig-paren\">(</span><em>fun</em>, <em>x0</em>, <em>jac='2-point'</em>, <em>bounds=(-inf</em>, <em>inf)</em>, <em>method='trf'</em>, <em>ftol=1e-08</em>, <em>xtol=1e-08</em>, <em>gtol=1e-08</em>, <em>x_scale=1.0</em>, <em>loss='linear'</em>, <em>f_scale=1.0</em>, <em>diff_step=None</em>, <em>tr_solver=None</em>, <em>tr_options={}</em>, <em>jac_sparsity=None</em>, <em>max_nfev=None</em>, <em>verbose=0</em>, <em>args=()</em>, <em>kwargs={}</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.least_squares\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Solve a nonlinear least-squares problem with bounds on the variables.</p>\n<p>Given the residuals f(x) (an m-dimensional real function of n real\nvariables) and the loss function rho(s) (a scalar function), <cite>least_squares</cite>\nfinds a local minimum of the cost function F(x):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">minimize</span> <span class=\"n\">F</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">rho</span><span class=\"p\">(</span><span class=\"n\">f_i</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">m</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">subject</span> <span class=\"n\">to</span> <span class=\"n\">lb</span> <span class=\"o\">&lt;=</span> <span class=\"n\">x</span> <span class=\"o\">&lt;=</span> <span class=\"n\">ub</span>\n</pre></div>\n</div>\n<p>The purpose of the loss function rho(s) is to reduce the influence of\noutliers on the solution.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>fun</strong> : callable</p>\n<blockquote>\n<div><p>Function which computes the vector of residuals, with the signature\n<code class=\"docutils literal\"><span class=\"pre\">fun(x,</span> <span class=\"pre\">*args,</span> <span class=\"pre\">**kwargs)</span></code>, i.e., the minimization proceeds with\nrespect to its first argument. The argument <code class=\"docutils literal\"><span class=\"pre\">x</span></code> passed to this\nfunction is an ndarray of shape (n,) (never a scalar, even for n=1).\nIt must return a 1-d array_like of shape (m,) or a scalar. If the\nargument <code class=\"docutils literal\"><span class=\"pre\">x</span></code> is complex or the function <code class=\"docutils literal\"><span class=\"pre\">fun</span></code> returns complex\nresiduals, it must be wrapped in a real function of real arguments,\nas shown at the end of the Examples section.</p>\n</div></blockquote>\n<p><strong>x0</strong> : array_like with shape (n,) or float</p>\n<blockquote>\n<div><p>Initial guess on independent variables. If float, it will be treated\nas a 1-d array with one element.</p>\n</div></blockquote>\n<p><strong>jac</strong> : {&#8216;2-point&#8217;, &#8216;3-point&#8217;, &#8216;cs&#8217;, callable}, optional</p>\n<blockquote>\n<div><p>Method of computing the Jacobian matrix (an m-by-n matrix, where\nelement (i, j) is the partial derivative of f[i] with respect to\nx[j]). The keywords select a finite difference scheme for numerical\nestimation. The scheme &#8216;3-point&#8217; is more accurate, but requires\ntwice as much operations compared to &#8216;2-point&#8217; (default). The\nscheme &#8216;cs&#8217; uses complex steps, and while potentially the most\naccurate, it is applicable only when <cite>fun</cite> correctly handles\ncomplex inputs and can be analytically continued to the complex\nplane. Method &#8216;lm&#8217; always uses the &#8216;2-point&#8217; scheme. If callable,\nit is used as <code class=\"docutils literal\"><span class=\"pre\">jac(x,</span> <span class=\"pre\">*args,</span> <span class=\"pre\">**kwargs)</span></code> and should return a\ngood approximation (or the exact value) for the Jacobian as an\narray_like (np.atleast_2d is applied), a sparse matrix or a\n<cite>scipy.sparse.linalg.LinearOperator</cite>.</p>\n</div></blockquote>\n<p><strong>bounds</strong> : 2-tuple of array_like, optional</p>\n<blockquote>\n<div><p>Lower and upper bounds on independent variables. Defaults to no bounds.\nEach array must match the size of <cite>x0</cite> or be a scalar, in the latter\ncase a bound will be the same for all variables. Use <code class=\"docutils literal\"><span class=\"pre\">np.inf</span></code> with\nan appropriate sign to disable bounds on all or some variables.</p>\n</div></blockquote>\n<p><strong>method</strong> : {&#8216;trf&#8217;, &#8216;dogbox&#8217;, &#8216;lm&#8217;}, optional</p>\n<blockquote>\n<div><p>Algorithm to perform minimization.</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>&#8216;trf&#8217; : Trust Region Reflective algorithm, particularly suitable\nfor large sparse problems with bounds. Generally robust method.</li>\n<li>&#8216;dogbox&#8217; : dogleg algorithm with rectangular trust regions,\ntypical use case is small problems with bounds. Not recommended\nfor problems with rank-deficient Jacobian.</li>\n<li>&#8216;lm&#8217; : Levenberg-Marquardt algorithm as implemented in MINPACK.\nDoesn&#8217;t handle bounds and sparse Jacobians. Usually the most\nefficient method for small unconstrained problems.</li>\n</ul>\n</div></blockquote>\n<p>Default is &#8216;trf&#8217;. See Notes for more information.</p>\n</div></blockquote>\n<p><strong>ftol</strong> : float, optional</p>\n<blockquote>\n<div><p>Tolerance for termination by the change of the cost function. Default\nis 1e-8. The optimization process is stopped when  <code class=\"docutils literal\"><span class=\"pre\">dF</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">ftol</span> <span class=\"pre\">*</span> <span class=\"pre\">F</span></code>,\nand there was an adequate agreement between a local quadratic model and\nthe true model in the last step.</p>\n</div></blockquote>\n<p><strong>xtol</strong> : float, optional</p>\n<blockquote>\n<div><p>Tolerance for termination by the change of the independent variables.\nDefault is 1e-8. The exact condition depends on the <cite>method</cite> used:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>For &#8216;trf&#8217; and &#8216;dogbox&#8217; : <code class=\"docutils literal\"><span class=\"pre\">norm(dx)</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">xtol</span> <span class=\"pre\">*</span> <span class=\"pre\">(xtol</span> <span class=\"pre\">+</span> <span class=\"pre\">norm(x))</span></code></li>\n<li>For &#8216;lm&#8217; : <code class=\"docutils literal\"><span class=\"pre\">Delta</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">xtol</span> <span class=\"pre\">*</span> <span class=\"pre\">norm(xs)</span></code>, where <code class=\"docutils literal\"><span class=\"pre\">Delta</span></code> is\na trust-region radius and <code class=\"docutils literal\"><span class=\"pre\">xs</span></code> is the value of <code class=\"docutils literal\"><span class=\"pre\">x</span></code>\nscaled according to <cite>x_scale</cite> parameter (see below).</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n<p><strong>gtol</strong> : float, optional</p>\n<blockquote>\n<div><p>Tolerance for termination by the norm of the gradient. Default is 1e-8.\nThe exact condition depends on a <cite>method</cite> used:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>For &#8216;trf&#8217; : <code class=\"docutils literal\"><span class=\"pre\">norm(g_scaled,</span> <span class=\"pre\">ord=np.inf)</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">gtol</span></code>, where\n<code class=\"docutils literal\"><span class=\"pre\">g_scaled</span></code> is the value of the gradient scaled to account for\nthe presence of the bounds <a class=\"reference internal\" href=\"#stir\" id=\"id397\">[STIR]</a>.</li>\n<li>For &#8216;dogbox&#8217; : <code class=\"docutils literal\"><span class=\"pre\">norm(g_free,</span> <span class=\"pre\">ord=np.inf)</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">gtol</span></code>, where\n<code class=\"docutils literal\"><span class=\"pre\">g_free</span></code> is the gradient with respect to the variables which\nare not in the optimal state on the boundary.</li>\n<li>For &#8216;lm&#8217; : the maximum absolute value of the cosine of angles\nbetween columns of the Jacobian and the residual vector is less\nthan <cite>gtol</cite>, or the residual vector is zero.</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n<p><strong>x_scale</strong> : array_like or &#8216;jac&#8217;, optional</p>\n<blockquote>\n<div><p>Characteristic scale of each variable. Setting <cite>x_scale</cite> is equivalent\nto reformulating the problem in scaled variables <code class=\"docutils literal\"><span class=\"pre\">xs</span> <span class=\"pre\">=</span> <span class=\"pre\">x</span> <span class=\"pre\">/</span> <span class=\"pre\">x_scale</span></code>.\nAn alternative view is that the size of a trust region along j-th\ndimension is proportional to <code class=\"docutils literal\"><span class=\"pre\">x_scale[j]</span></code>. Improved convergence may\nbe achieved by setting <cite>x_scale</cite> such that a step of a given size\nalong any of the scaled variables has a similar effect on the cost\nfunction. If set to &#8216;jac&#8217;, the scale is iteratively updated using the\ninverse norms of the columns of the Jacobian matrix (as described in\n<a class=\"reference internal\" href=\"#jjmore\" id=\"id398\">[JJMore]</a>).</p>\n</div></blockquote>\n<p><strong>loss</strong> : str or callable, optional</p>\n<blockquote>\n<div><p>Determines the loss function. The following keyword values are allowed:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>&#8216;linear&#8217; (default) : <code class=\"docutils literal\"><span class=\"pre\">rho(z)</span> <span class=\"pre\">=</span> <span class=\"pre\">z</span></code>. Gives a standard\nleast-squares problem.</li>\n<li>&#8216;soft_l1&#8217; : <code class=\"docutils literal\"><span class=\"pre\">rho(z)</span> <span class=\"pre\">=</span> <span class=\"pre\">2</span> <span class=\"pre\">*</span> <span class=\"pre\">((1</span> <span class=\"pre\">+</span> <span class=\"pre\">z)**0.5</span> <span class=\"pre\">-</span> <span class=\"pre\">1)</span></code>. The smooth\napproximation of l1 (absolute value) loss. Usually a good\nchoice for robust least squares.</li>\n<li>&#8216;huber&#8217; : <code class=\"docutils literal\"><span class=\"pre\">rho(z)</span> <span class=\"pre\">=</span> <span class=\"pre\">z</span> <span class=\"pre\">if</span> <span class=\"pre\">z</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">1</span> <span class=\"pre\">else</span> <span class=\"pre\">2*z**0.5</span> <span class=\"pre\">-</span> <span class=\"pre\">1</span></code>. Works\nsimilarly to &#8216;soft_l1&#8217;.</li>\n<li>&#8216;cauchy&#8217; : <code class=\"docutils literal\"><span class=\"pre\">rho(z)</span> <span class=\"pre\">=</span> <span class=\"pre\">ln(1</span> <span class=\"pre\">+</span> <span class=\"pre\">z)</span></code>. Severely weakens outliers\ninfluence, but may cause difficulties in optimization process.</li>\n<li>&#8216;arctan&#8217; : <code class=\"docutils literal\"><span class=\"pre\">rho(z)</span> <span class=\"pre\">=</span> <span class=\"pre\">arctan(z)</span></code>. Limits a maximum loss on\na single residual, has properties similar to &#8216;cauchy&#8217;.</li>\n</ul>\n</div></blockquote>\n<p>If callable, it must take a 1-d ndarray <code class=\"docutils literal\"><span class=\"pre\">z=f**2</span></code> and return an\narray_like with shape (3, m) where row 0 contains function values,\nrow 1 contains first derivatives and row 2 contains second\nderivatives. Method &#8216;lm&#8217; supports only &#8216;linear&#8217; loss.</p>\n</div></blockquote>\n<p><strong>f_scale</strong> : float, optional</p>\n<blockquote>\n<div><p>Value of soft margin between inlier and outlier residuals, default\nis 1.0. The loss function is evaluated as follows\n<code class=\"docutils literal\"><span class=\"pre\">rho_(f**2)</span> <span class=\"pre\">=</span> <span class=\"pre\">C**2</span> <span class=\"pre\">*</span> <span class=\"pre\">rho(f**2</span> <span class=\"pre\">/</span> <span class=\"pre\">C**2)</span></code>, where <code class=\"docutils literal\"><span class=\"pre\">C</span></code> is <cite>f_scale</cite>,\nand <code class=\"docutils literal\"><span class=\"pre\">rho</span></code> is determined by <cite>loss</cite> parameter. This parameter has\nno effect with <code class=\"docutils literal\"><span class=\"pre\">loss='linear'</span></code>, but for other <cite>loss</cite> values it is\nof crucial importance.</p>\n</div></blockquote>\n<p><strong>max_nfev</strong> : None or int, optional</p>\n<blockquote>\n<div><p>Maximum number of function evaluations before the termination.\nIf None (default), the value is chosen automatically:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>For &#8216;trf&#8217; and &#8216;dogbox&#8217; : 100 * n.</li>\n<li>For &#8216;lm&#8217; :  100 * n if <cite>jac</cite> is callable and 100 * n * (n + 1)\notherwise (because &#8216;lm&#8217; counts function calls in Jacobian\nestimation).</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n<p><strong>diff_step</strong> : None or array_like, optional</p>\n<blockquote>\n<div><p>Determines the relative step size for the finite difference\napproximation of the Jacobian. The actual step is computed as\n<code class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">*</span> <span class=\"pre\">diff_step</span></code>. If None (default), then <cite>diff_step</cite> is taken to be\na conventional &#8220;optimal&#8221; power of machine epsilon for the finite\ndifference scheme used <a class=\"reference internal\" href=\"#nr\" id=\"id399\">[NR]</a>.</p>\n</div></blockquote>\n<p><strong>tr_solver</strong> : {None, &#8216;exact&#8217;, &#8216;lsmr&#8217;}, optional</p>\n<blockquote>\n<div><p>Method for solving trust-region subproblems, relevant only for &#8216;trf&#8217;\nand &#8216;dogbox&#8217; methods.</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>&#8216;exact&#8217; is suitable for not very large problems with dense\nJacobian matrices. The computational complexity per iteration is\ncomparable to a singular value decomposition of the Jacobian\nmatrix.</li>\n<li>&#8216;lsmr&#8217; is suitable for problems with sparse and large Jacobian\nmatrices. It uses the iterative procedure\n<cite>scipy.sparse.linalg.lsmr</cite> for finding a solution of a linear\nleast-squares problem and only requires matrix-vector product\nevaluations.</li>\n</ul>\n</div></blockquote>\n<p>If None (default) the solver is chosen based on the type of Jacobian\nreturned on the first iteration.</p>\n</div></blockquote>\n<p><strong>tr_options</strong> : dict, optional</p>\n<blockquote>\n<div><p>Keyword options passed to trust-region solver.</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><code class=\"docutils literal\"><span class=\"pre\">tr_solver='exact'</span></code>: <cite>tr_options</cite> are ignored.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">tr_solver='lsmr'</span></code>: options for <cite>scipy.sparse.linalg.lsmr</cite>.\nAdditionally  <code class=\"docutils literal\"><span class=\"pre\">method='trf'</span></code> supports  &#8216;regularize&#8217; option\n(bool, default is True) which adds a regularization term to the\nnormal equation, which improves convergence if the Jacobian is\nrank-deficient <a class=\"reference internal\" href=\"#byrd\" id=\"id400\">[Byrd]</a> (eq. 3.4).</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n<p><strong>jac_sparsity</strong> : {None, array_like, sparse matrix}, optional</p>\n<blockquote>\n<div><p>Defines the sparsity structure of the Jacobian matrix for finite\ndifference estimation, its shape must be (m, n). If the Jacobian has\nonly few non-zero elements in <em>each</em> row, providing the sparsity\nstructure will greatly speed up the computations <a class=\"reference internal\" href=\"#curtis\" id=\"id401\">[Curtis]</a>. A zero\nentry means that a corresponding element in the Jacobian is identically\nzero. If provided, forces the use of &#8216;lsmr&#8217; trust-region solver.\nIf None (default) then dense differencing will be used. Has no effect\nfor &#8216;lm&#8217; method.</p>\n</div></blockquote>\n<p><strong>verbose</strong> : {0, 1, 2}, optional</p>\n<blockquote>\n<div><p>Level of algorithm&#8217;s verbosity:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>0 (default) : work silently.</li>\n<li>1 : display a termination report.</li>\n<li>2 : display progress during iterations (not supported by &#8216;lm&#8217;\nmethod).</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n<p><strong>args, kwargs</strong> : tuple and dict, optional</p>\n<blockquote>\n<div><p>Additional arguments passed to <cite>fun</cite> and <cite>jac</cite>. Both empty by default.\nThe calling signature is <code class=\"docutils literal\"><span class=\"pre\">fun(x,</span> <span class=\"pre\">*args,</span> <span class=\"pre\">**kwargs)</span></code> and the same for\n<cite>jac</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>`OptimizeResult` with the following fields defined:</strong> :</p>\n<p><strong>x</strong> : ndarray, shape (n,)</p>\n<blockquote>\n<div><p>Solution found.</p>\n</div></blockquote>\n<p><strong>cost</strong> : float</p>\n<blockquote>\n<div><p>Value of the cost function at the solution.</p>\n</div></blockquote>\n<p><strong>fun</strong> : ndarray, shape (m,)</p>\n<blockquote>\n<div><p>Vector of residuals at the solution.</p>\n</div></blockquote>\n<p><strong>jac</strong> : ndarray, sparse matrix or LinearOperator, shape (m, n)</p>\n<blockquote>\n<div><p>Modified Jacobian matrix at the solution, in the sense that J^T J\nis a Gauss-Newton approximation of the Hessian of the cost function.\nThe type is the same as the one used by the algorithm.</p>\n</div></blockquote>\n<p><strong>grad</strong> : ndarray, shape (m,)</p>\n<blockquote>\n<div><p>Gradient of the cost function at the solution.</p>\n</div></blockquote>\n<p><strong>optimality</strong> : float</p>\n<blockquote>\n<div><p>First-order optimality measure. In unconstrained problems, it is always\nthe uniform norm of the gradient. In constrained problems, it is the\nquantity which was compared with <cite>gtol</cite> during iterations.</p>\n</div></blockquote>\n<p><strong>active_mask</strong> : ndarray of int, shape (n,)</p>\n<blockquote>\n<div><p>Each component shows whether a corresponding constraint is active\n(that is, whether a variable is at the bound):</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>0 : a constraint is not active.</li>\n<li>-1 : a lower bound is active.</li>\n<li>1 : an upper bound is active.</li>\n</ul>\n</div></blockquote>\n<p>Might be somewhat arbitrary for &#8216;trf&#8217; method as it generates a sequence\nof strictly feasible iterates and <cite>active_mask</cite> is determined within a\ntolerance threshold.</p>\n</div></blockquote>\n<p><strong>nfev</strong> : int</p>\n<blockquote>\n<div><p>Number of function evaluations done. Methods &#8216;trf&#8217; and &#8216;dogbox&#8217; do not\ncount function calls for numerical Jacobian approximation, as opposed\nto &#8216;lm&#8217; method.</p>\n</div></blockquote>\n<p><strong>njev</strong> : int or None</p>\n<blockquote>\n<div><p>Number of Jacobian evaluations done. If numerical Jacobian\napproximation is used in &#8216;lm&#8217; method, it is set to None.</p>\n</div></blockquote>\n<p><strong>status</strong> : int</p>\n<blockquote>\n<div><p>The reason for algorithm termination:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>-1 : improper input parameters status returned from MINPACK.</li>\n<li>0 : the maximum number of function evaluations is exceeded.</li>\n<li>1 : <cite>gtol</cite> termination condition is satisfied.</li>\n<li>2 : <cite>ftol</cite> termination condition is satisfied.</li>\n<li>3 : <cite>xtol</cite> termination condition is satisfied.</li>\n<li>4 : Both <cite>ftol</cite> and <cite>xtol</cite> termination conditions are satisfied.</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n<p><strong>message</strong> : str</p>\n<blockquote>\n<div><p>Verbal description of the termination reason.</p>\n</div></blockquote>\n<p><strong>success</strong> : bool</p>\n<blockquote class=\"last\">\n<div><p>True if one of the convergence criteria is satisfied (<cite>status</cite> &gt; 0).</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">leastsq</span></code></dt>\n<dd>A legacy wrapper for the MINPACK implementation of the Levenberg-Marquadt algorithm.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">curve_fit</span></code></dt>\n<dd>Least-squares minimization applied to a curve fitting problem.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>Method &#8216;lm&#8217; (Levenberg-Marquardt) calls a wrapper over least-squares\nalgorithms implemented in MINPACK (lmder, lmdif). It runs the\nLevenberg-Marquardt algorithm formulated as a trust-region type algorithm.\nThe implementation is based on paper <a class=\"reference internal\" href=\"#jjmore\" id=\"id402\">[JJMore]</a>, it is very robust and\nefficient with a lot of smart tricks. It should be your first choice\nfor unconstrained problems. Note that it doesn&#8217;t support bounds. Also\nit doesn&#8217;t work when m &lt; n.</p>\n<p>Method &#8216;trf&#8217; (Trust Region Reflective) is motivated by the process of\nsolving a system of equations, which constitute the first-order optimality\ncondition for a bound-constrained minimization problem as formulated in\n<a class=\"reference internal\" href=\"#stir\" id=\"id403\">[STIR]</a>. The algorithm iteratively solves trust-region subproblems\naugmented by a special diagonal quadratic term and with trust-region shape\ndetermined by the distance from the bounds and the direction of the\ngradient. This enhancements help to avoid making steps directly into bounds\nand efficiently explore the whole space of variables. To further improve\nconvergence, the algorithm considers search directions reflected from the\nbounds. To obey theoretical requirements, the algorithm keeps iterates\nstrictly feasible. With dense Jacobians trust-region subproblems are\nsolved by an exact method very similar to the one described in <a class=\"reference internal\" href=\"#jjmore\" id=\"id404\">[JJMore]</a>\n(and implemented in MINPACK). The difference from the MINPACK\nimplementation is that a singular value decomposition of a Jacobian\nmatrix is done once per iteration, instead of a QR decomposition and series\nof Givens rotation eliminations. For large sparse Jacobians a 2-d subspace\napproach of solving trust-region subproblems is used <a class=\"reference internal\" href=\"#stir\" id=\"id405\">[STIR]</a>, <a class=\"reference internal\" href=\"#byrd\" id=\"id406\">[Byrd]</a>.\nThe subspace is spanned by a scaled gradient and an approximate\nGauss-Newton solution delivered by <cite>scipy.sparse.linalg.lsmr</cite>. When no\nconstraints are imposed the algorithm is very similar to MINPACK and has\ngenerally comparable performance. The algorithm works quite robust in\nunbounded and bounded problems, thus it is chosen as a default algorithm.</p>\n<p>Method &#8216;dogbox&#8217; operates in a trust-region framework, but considers\nrectangular trust regions as opposed to conventional ellipsoids <a class=\"reference internal\" href=\"#voglis\" id=\"id407\">[Voglis]</a>.\nThe intersection of a current trust region and initial bounds is again\nrectangular, so on each iteration a quadratic minimization problem subject\nto bound constraints is solved approximately by Powell&#8217;s dogleg method\n<a class=\"reference internal\" href=\"#numopt\" id=\"id408\">[NumOpt]</a>. The required Gauss-Newton step can be computed exactly for\ndense Jacobians or approximately by <cite>scipy.sparse.linalg.lsmr</cite> for large\nsparse Jacobians. The algorithm is likely to exhibit slow convergence when\nthe rank of Jacobian is less than the number of variables. The algorithm\noften outperforms &#8216;trf&#8217; in bounded problems with a small number of\nvariables.</p>\n<p>Robust loss functions are implemented as described in <a class=\"reference internal\" href=\"#ba\" id=\"id409\">[BA]</a>. The idea\nis to modify a residual vector and a Jacobian matrix on each iteration\nsuch that computed gradient and Gauss-Newton Hessian approximation match\nthe true gradient and Hessian approximation of the cost function. Then\nthe algorithm proceeds in a normal way, i.e. robust loss functions are\nimplemented as a simple wrapper over standard least-squares algorithms.</p>\n<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 0.17.0.</span></p>\n</div>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"stir\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[STIR]</td><td><em>(<a class=\"fn-backref\" href=\"#id397\">1</a>, <a class=\"fn-backref\" href=\"#id403\">2</a>, <a class=\"fn-backref\" href=\"#id405\">3</a>, <a class=\"fn-backref\" href=\"#id410\">4</a>)</em> M. A. Branch, T. F. Coleman, and Y. Li, &#8220;A Subspace, Interior,\nand Conjugate Gradient Method for Large-Scale Bound-Constrained\nMinimization Problems,&#8221; SIAM Journal on Scientific Computing,\nVol. 21, Number 1, pp 1-23, 1999.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"nr\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[NR]</td><td><em>(<a class=\"fn-backref\" href=\"#id399\">1</a>, <a class=\"fn-backref\" href=\"#id411\">2</a>)</em> William H. Press et. al., &#8220;Numerical Recipes. The Art of Scientific\nComputing. 3rd edition&#8221;, Sec. 5.7.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"byrd\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Byrd]</td><td><em>(<a class=\"fn-backref\" href=\"#id400\">1</a>, <a class=\"fn-backref\" href=\"#id406\">2</a>, <a class=\"fn-backref\" href=\"#id412\">3</a>)</em> R. H. Byrd, R. B. Schnabel and G. A. Shultz, &#8220;Approximate\nsolution of the trust region problem by minimization over\ntwo-dimensional subspaces&#8221;, Math. Programming, 40, pp. 247-263,\n1988.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"curtis\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Curtis]</td><td><em>(<a class=\"fn-backref\" href=\"#id401\">1</a>, <a class=\"fn-backref\" href=\"#id413\">2</a>)</em> A. Curtis, M. J. D. Powell, and J. Reid, &#8220;On the estimation of\nsparse Jacobian matrices&#8221;, Journal of the Institute of\nMathematics and its Applications, 13, pp. 117-120, 1974.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"jjmore\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[JJMore]</td><td><em>(<a class=\"fn-backref\" href=\"#id398\">1</a>, <a class=\"fn-backref\" href=\"#id402\">2</a>, <a class=\"fn-backref\" href=\"#id404\">3</a>, <a class=\"fn-backref\" href=\"#id414\">4</a>)</em> J. J. More, &#8220;The Levenberg-Marquardt Algorithm: Implementation\nand Theory,&#8221; Numerical Analysis, ed. G. A. Watson, Lecture\nNotes in Mathematics 630, Springer Verlag, pp. 105-116, 1977.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"voglis\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Voglis]</td><td><em>(<a class=\"fn-backref\" href=\"#id407\">1</a>, <a class=\"fn-backref\" href=\"#id415\">2</a>)</em> C. Voglis and I. E. Lagaris, &#8220;A Rectangular Trust Region\nDogleg Approach for Unconstrained and Bound Constrained\nNonlinear Optimization&#8221;, WSEAS International Conference on\nApplied Mathematics, Corfu, Greece, 2004.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"numopt\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[NumOpt]</td><td><em>(<a class=\"fn-backref\" href=\"#id408\">1</a>, <a class=\"fn-backref\" href=\"#id416\">2</a>)</em> J. Nocedal and S. J. Wright, &#8220;Numerical optimization,\n2nd edition&#8221;, Chapter 4.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"ba\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[BA]</td><td><em>(<a class=\"fn-backref\" href=\"#id409\">1</a>, <a class=\"fn-backref\" href=\"#id417\">2</a>)</em> B. Triggs et. al., &#8220;Bundle Adjustment - A Modern Synthesis&#8221;,\nProceedings of the International Workshop on Vision Algorithms:\nTheory and Practice, pp. 298-372, 1999.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<p>In this example we find a minimum of the Rosenbrock function without bounds\non independed variables.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">fun_rosenbrock</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])])</span>\n</pre></div>\n</div>\n<p>Notice that we only provide the vector of the residuals. The algorithm\nconstructs the cost function as a sum of squares of the residuals, which\ngives the Rosenbrock function. The exact minimum is at <code class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">=</span> <span class=\"pre\">[1.0,</span> <span class=\"pre\">1.0]</span></code>.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy.optimize</span> <span class=\"k\">import</span> <span class=\"n\">least_squares</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x0_rosenbrock</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_1</span> <span class=\"o\">=</span> <span class=\"n\">least_squares</span><span class=\"p\">(</span><span class=\"n\">fun_rosenbrock</span><span class=\"p\">,</span> <span class=\"n\">x0_rosenbrock</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_1</span><span class=\"o\">.</span><span class=\"n\">x</span>\n<span class=\"go\">array([ 1.,  1.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_1</span><span class=\"o\">.</span><span class=\"n\">cost</span>\n<span class=\"go\">9.8669242910846867e-30</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_1</span><span class=\"o\">.</span><span class=\"n\">optimality</span>\n<span class=\"go\">8.8928864934219529e-14</span>\n</pre></div>\n</div>\n<p>We now constrain the variables, in such a way that the previous solution\nbecomes infeasible. Specifically, we require that <code class=\"docutils literal\"><span class=\"pre\">x[1]</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">1.5</span></code>, and\n<code class=\"docutils literal\"><span class=\"pre\">x[0]</span></code> left unconstrained. To this end, we specify the <cite>bounds</cite> parameter\nto <cite>least_squares</cite> in the form <code class=\"docutils literal\"><span class=\"pre\">bounds=([-np.inf,</span> <span class=\"pre\">1.5],</span> <span class=\"pre\">np.inf)</span></code>.</p>\n<p>We also provide the analytic Jacobian:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">jac_rosenbrock</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\n<span class=\"gp\">... </span>        <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">20</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">10</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>        <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n</pre></div>\n</div>\n<p>Putting this all together, we see that the new solution lies on the bound:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_2</span> <span class=\"o\">=</span> <span class=\"n\">least_squares</span><span class=\"p\">(</span><span class=\"n\">fun_rosenbrock</span><span class=\"p\">,</span> <span class=\"n\">x0_rosenbrock</span><span class=\"p\">,</span> <span class=\"n\">jac_rosenbrock</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                      <span class=\"n\">bounds</span><span class=\"o\">=</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">inf</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">],</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">inf</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_2</span><span class=\"o\">.</span><span class=\"n\">x</span>\n<span class=\"go\">array([ 1.22437075,  1.5       ])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_2</span><span class=\"o\">.</span><span class=\"n\">cost</span>\n<span class=\"go\">0.025213093946805685</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_2</span><span class=\"o\">.</span><span class=\"n\">optimality</span>\n<span class=\"go\">1.5885401433157753e-07</span>\n</pre></div>\n</div>\n<p>Now we solve a system of equations (i.e., the cost function should be zero\nat a minimum) for a Broyden tridiagonal vector-valued function of 100000\nvariables:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">fun_broyden</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span> <span class=\"o\">-=</span> <span class=\"n\">x</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">... </span>    <span class=\"n\">f</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">f</span>\n</pre></div>\n</div>\n<p>The corresponding Jacobian matrix is sparse. We tell the algorithm to\nestimate it by finite differences and provide the sparsity structure of\nJacobian to significantly speed up this process.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy.sparse</span> <span class=\"k\">import</span> <span class=\"n\">lil_matrix</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">sparsity_broyden</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">sparsity</span> <span class=\"o\">=</span> <span class=\"n\">lil_matrix</span><span class=\"p\">((</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">sparsity</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">sparsity</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">sparsity</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">sparsity</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"mi\">100000</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x0_broyden</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_3</span> <span class=\"o\">=</span> <span class=\"n\">least_squares</span><span class=\"p\">(</span><span class=\"n\">fun_broyden</span><span class=\"p\">,</span> <span class=\"n\">x0_broyden</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                      <span class=\"n\">jac_sparsity</span><span class=\"o\">=</span><span class=\"n\">sparsity_broyden</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_3</span><span class=\"o\">.</span><span class=\"n\">cost</span>\n<span class=\"go\">4.5687069299604613e-23</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_3</span><span class=\"o\">.</span><span class=\"n\">optimality</span>\n<span class=\"go\">1.1650454296851518e-11</span>\n</pre></div>\n</div>\n<p>Let&#8217;s also solve a curve fitting problem using robust loss function to\ntake care of outliers in the data. Define the model function as\n<code class=\"docutils literal\"><span class=\"pre\">y</span> <span class=\"pre\">=</span> <span class=\"pre\">a</span> <span class=\"pre\">+</span> <span class=\"pre\">b</span> <span class=\"pre\">*</span> <span class=\"pre\">exp(c</span> <span class=\"pre\">*</span> <span class=\"pre\">t)</span></code>, where t is a predictor variable, y is an\nobservation and a, b, c are parameters to estimate.</p>\n<p>First, define the function which generates the data with noise and\noutliers, define the model parameters, and generate data:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">gen_data</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">n_outliers</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">*</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">... </span>    <span class=\"n\">rnd</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">noise</span> <span class=\"o\">*</span> <span class=\"n\">rnd</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">outliers</span> <span class=\"o\">=</span> <span class=\"n\">rnd</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">n_outliers</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">outliers</span><span class=\"p\">]</span> <span class=\"o\">*=</span> <span class=\"mi\">10</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">y</span> <span class=\"o\">+</span> <span class=\"n\">error</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t_min</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t_max</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">n_points</span> <span class=\"o\">=</span> <span class=\"mi\">15</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t_train</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"n\">t_min</span><span class=\"p\">,</span> <span class=\"n\">t_max</span><span class=\"p\">,</span> <span class=\"n\">n_points</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y_train</span> <span class=\"o\">=</span> <span class=\"n\">gen_data</span><span class=\"p\">(</span><span class=\"n\">t_train</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">noise</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">n_outliers</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Define function for computing residuals and initial estimate of\nparameters.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">y</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x0</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>Compute a standard least-squares solution:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_lsq</span> <span class=\"o\">=</span> <span class=\"n\">least_squares</span><span class=\"p\">(</span><span class=\"n\">fun</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">t_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>Now compute two solutions with two different robust loss functions. The\nparameter <cite>f_scale</cite> is set to 0.1, meaning that inlier residuals should\nnot significantly exceed 0.1 (the noise level used).</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_soft_l1</span> <span class=\"o\">=</span> <span class=\"n\">least_squares</span><span class=\"p\">(</span><span class=\"n\">fun</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s1\">&#39;soft_l1&#39;</span><span class=\"p\">,</span> <span class=\"n\">f_scale</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                            <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">t_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_log</span> <span class=\"o\">=</span> <span class=\"n\">least_squares</span><span class=\"p\">(</span><span class=\"n\">fun</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s1\">&#39;cauchy&#39;</span><span class=\"p\">,</span> <span class=\"n\">f_scale</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                        <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">t_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>And finally plot all the curves. We see that by selecting an appropriate\n<cite>loss</cite>  we can get estimates close to optimal even in the presence of\nstrong outliers. But keep in mind that generally it is recommended to try\n&#8216;soft_l1&#8217; or &#8216;huber&#8217; losses first (if at all necessary) as the other two\noptions may cause difficulties in optimization process.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">t_test</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"n\">t_min</span><span class=\"p\">,</span> <span class=\"n\">t_max</span><span class=\"p\">,</span> <span class=\"n\">n_points</span> <span class=\"o\">*</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y_true</span> <span class=\"o\">=</span> <span class=\"n\">gen_data</span><span class=\"p\">(</span><span class=\"n\">t_test</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y_lsq</span> <span class=\"o\">=</span> <span class=\"n\">gen_data</span><span class=\"p\">(</span><span class=\"n\">t_test</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">res_lsq</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y_soft_l1</span> <span class=\"o\">=</span> <span class=\"n\">gen_data</span><span class=\"p\">(</span><span class=\"n\">t_test</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">res_soft_l1</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y_log</span> <span class=\"o\">=</span> <span class=\"n\">gen_data</span><span class=\"p\">(</span><span class=\"n\">t_test</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">res_log</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">t_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"s1\">&#39;o&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">t_test</span><span class=\"p\">,</span> <span class=\"n\">y_true</span><span class=\"p\">,</span> <span class=\"s1\">&#39;k&#39;</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;true&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">t_test</span><span class=\"p\">,</span> <span class=\"n\">y_lsq</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;linear loss&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">t_test</span><span class=\"p\">,</span> <span class=\"n\">y_soft_l1</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;soft_l1 loss&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">t_test</span><span class=\"p\">,</span> <span class=\"n\">y_log</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;cauchy loss&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s2\">&quot;t&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>In the next example, we show how complex-valued residual functions of\ncomplex variables can be optimized with <code class=\"docutils literal\"><span class=\"pre\">least_squares()</span></code>. Consider the\nfollowing function:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">z</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"mf\">0.5</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span><span class=\"n\">j</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We wrap it into a function of real variables that returns real residuals\nby simply handling the real and imaginary parts as independent variables:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">f_wrap</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">fx</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"n\">j</span><span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">fx</span><span class=\"o\">.</span><span class=\"n\">real</span><span class=\"p\">,</span> <span class=\"n\">fx</span><span class=\"o\">.</span><span class=\"n\">imag</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>Thus, instead of the original m-dimensional complex function of n complex\nvariables we optimize a 2m-dimensional real function of 2n real variables:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy.optimize</span> <span class=\"k\">import</span> <span class=\"n\">least_squares</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res_wrapped</span> <span class=\"o\">=</span> <span class=\"n\">least_squares</span><span class=\"p\">(</span><span class=\"n\">f_wrap</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">),</span> <span class=\"n\">bounds</span><span class=\"o\">=</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">res_wrapped</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">res_wrapped</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"mi\">1</span><span class=\"n\">j</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span>\n<span class=\"go\">(0.49999999999925893+0.49999999999925893j)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id418\">\n<h3>multi_voxel_fit<a class=\"headerlink\" href=\"#id418\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.ivim.multi_voxel_fit\">\n<code class=\"descclassname\">dipy.reconst.ivim.</code><code class=\"descname\">multi_voxel_fit</code><span class=\"sig-paren\">(</span><em>single_voxel_fit</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.ivim.multi_voxel_fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Method decorator to turn a single voxel model fit\ndefinition into a multi voxel model fit definition</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id419\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Cache\" title=\"dipy.reconst.mapmri.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Cache</span></code></a><a class=\"headerlink\" href=\"#id419\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.mapmri.Cache\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">Cache</code><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Cache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Cache values based on a key object (such as a sphere or gradient table).</p>\n<p class=\"rubric\">Notes</p>\n<p>This class is meant to be used as a mix-in:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Cache</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelFit</span><span class=\"p\">(</span><span class=\"n\">Fit</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Inside a method on the fit, typical usage would be:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">):</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">M</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_basis_matrix</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">M</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Cache.cache_clear\" title=\"dipy.reconst.mapmri.Cache.cache_clear\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code></a>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Cache.cache_get\" title=\"dipy.reconst.mapmri.Cache.cache_get\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code></a>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Cache.cache_set\" title=\"dipy.reconst.mapmri.Cache.cache_set\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code></a>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.Cache.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Cache.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.Cache.cache_clear\">\n<code class=\"descname\">cache_clear</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Cache.cache_clear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clear the cache.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.Cache.cache_get\">\n<code class=\"descname\">cache_get</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>default=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Cache.cache_get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieve a value from the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>default</strong> : object</p>\n<blockquote>\n<div><p>Value to be returned if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>v</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value from the cache associated with <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.  Returns\n<cite>default</cite> if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.Cache.cache_set\">\n<code class=\"descname\">cache_set</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>value</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Cache.cache_set\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Store a value in the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>value</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value stored in the cache for each unique combination\nof <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># Imagine the following computation is very expensive</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"o\">=</span> <span class=\"n\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">X1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"ow\">is</span> <span class=\"n\">X2</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmrifit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit\" title=\"dipy.reconst.mapmri.MapmriFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">MapmriFit</span></code></a><a class=\"headerlink\" href=\"#mapmrifit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">MapmriFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>mapmri_coef</em>, <em>mu</em>, <em>R</em>, <em>lopt</em>, <em>errorcode=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstFit</span></code></a></p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.mapmri_R\" title=\"dipy.reconst.mapmri.MapmriFit.mapmri_R\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_R</span></code></a></td>\n<td>The MAPMRI rotation matrix</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.mapmri_coeff\" title=\"dipy.reconst.mapmri.MapmriFit.mapmri_coeff\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_coeff</span></code></a></td>\n<td>The MAPMRI coefficients</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.mapmri_mu\" title=\"dipy.reconst.mapmri.MapmriFit.mapmri_mu\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mapmri_mu</span></code></a></td>\n<td>The MAPMRI scale factors</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.fitted_signal\" title=\"dipy.reconst.mapmri.MapmriFit.fitted_signal\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fitted_signal</span></code></a>([gtab])</td>\n<td>Recovers the fitted signal for the given gradient table.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.msd\" title=\"dipy.reconst.mapmri.MapmriFit.msd\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">msd</span></code></a>()</td>\n<td>Calculates the analytical Mean Squared Displacement (MSD).</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.ng\" title=\"dipy.reconst.mapmri.MapmriFit.ng\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ng</span></code></a>()</td>\n<td>Calculates the analytical non-Gaussiannity (NG) [R312].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.ng_parallel\" title=\"dipy.reconst.mapmri.MapmriFit.ng_parallel\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ng_parallel</span></code></a>()</td>\n<td>Calculates the analytical parallel non-Gaussiannity (NG) [R314].</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.ng_perpendicular\" title=\"dipy.reconst.mapmri.MapmriFit.ng_perpendicular\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ng_perpendicular</span></code></a>()</td>\n<td>Calculates the analytical perpendicular non-Gaussiannity (NG) [R316].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal\" title=\"dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">norm_of_laplacian_signal</span></code></a>()</td>\n<td>Calculates the norm of the laplacian of the fitted signal [R318].</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.odf\" title=\"dipy.reconst.mapmri.MapmriFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere[,&nbsp;s])</td>\n<td>Calculates the analytical Orientation Distribution Function (ODF) from the signal [R319] Eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.odf_sh\" title=\"dipy.reconst.mapmri.MapmriFit.odf_sh\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf_sh</span></code></a>([s])</td>\n<td>Calculates the real analytical odf for a given discrete sphere.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.pdf\" title=\"dipy.reconst.mapmri.MapmriFit.pdf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pdf</span></code></a>(r_points)</td>\n<td>Diffusion propagator on a given set of real points.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.predict\" title=\"dipy.reconst.mapmri.MapmriFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(qvals_or_gtab[,&nbsp;S0])</td>\n<td>Recovers the reconstructed signal for any qvalue array or gradient table.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.qiv\" title=\"dipy.reconst.mapmri.MapmriFit.qiv\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">qiv</span></code></a>()</td>\n<td>Calculates the analytical Q-space Inverse Variance (QIV).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.rtap\" title=\"dipy.reconst.mapmri.MapmriFit.rtap\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rtap</span></code></a>()</td>\n<td>Calculates the analytical return to the axis probability (RTAP) [R324] eq.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.rtop\" title=\"dipy.reconst.mapmri.MapmriFit.rtop\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rtop</span></code></a>()</td>\n<td>Calculates the analytical return to the origin probability (RTOP) [R326] eq.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriFit.rtpp\" title=\"dipy.reconst.mapmri.MapmriFit.rtpp\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rtpp</span></code></a>()</td>\n<td>Calculates the analytical return to the plane probability (RTPP) [R328] eq.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>mapmri_coef</em>, <em>mu</em>, <em>R</em>, <em>lopt</em>, <em>errorcode=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates diffusion properties for a single voxel</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : object,</p>\n<blockquote>\n<div><p>AnalyticalModel</p>\n</div></blockquote>\n<p><strong>mapmri_coef</strong> : 1d ndarray,</p>\n<blockquote>\n<div><p>mapmri coefficients</p>\n</div></blockquote>\n<p><strong>mu</strong> : array, shape (3,)</p>\n<blockquote>\n<div><p>scale parameters vector for x, y and z</p>\n</div></blockquote>\n<p><strong>R</strong> : array, shape (3,3)</p>\n<blockquote>\n<div><p>rotation matrix</p>\n</div></blockquote>\n<p><strong>lopt</strong> : float,</p>\n<blockquote>\n<div><p>regularization weight used for laplacian regularization</p>\n</div></blockquote>\n<p><strong>errorcode</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>provides information on whether errors occurred in the fitting\nof each voxel. 0 means no problem, 1 means a LinAlgError\noccurred when trying to invert the design matrix. 2 means the\npositivity constraint was unable to solve the problem. 3 means\nthat after positivity constraint failed, also matrix inversion\nfailed.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.fitted_signal\">\n<code class=\"descname\">fitted_signal</code><span class=\"sig-paren\">(</span><em>gtab=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.fitted_signal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Recovers the fitted signal for the given gradient table. If no gradient\ntable is given it recovers the signal for the gtab of the model object.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.mapmri_R\">\n<code class=\"descname\">mapmri_R</code><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.mapmri_R\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The MAPMRI rotation matrix</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.mapmri_coeff\">\n<code class=\"descname\">mapmri_coeff</code><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.mapmri_coeff\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The MAPMRI coefficients</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.mapmri_mu\">\n<code class=\"descname\">mapmri_mu</code><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.mapmri_mu\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The MAPMRI scale factors</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.msd\">\n<code class=\"descname\">msd</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.msd\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical Mean Squared Displacement (MSD).\nIt is defined as the Laplacian of the origin of the estimated signal\n<a class=\"reference internal\" href=\"#r290\" id=\"id428\">[R290]</a>. The analytical formula for the MAP-MRI basis was derived in [R291]\neq. (C13, D1).</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r290\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R290]</td><td><em>(<a class=\"fn-backref\" href=\"#id428\">1</a>, <a class=\"fn-backref\" href=\"#id430\">2</a>)</em> Cheng, J., 2014. Estimation and Processing of Ensemble Average</td></tr>\n</tbody>\n</table>\n<p>Propagator and Its Features in Diffusion MRI. Ph.D. Thesis.</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.ng\">\n<code class=\"descname\">ng</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.ng\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical non-Gaussiannity (NG) <a class=\"reference internal\" href=\"#r292\" id=\"id432\">[R292]</a>.\nFor the NG to be meaningful the mapmri scale factors must be\nestimated only on data representing Gaussian diffusion of spins, i.e.,\nbvals smaller than about 2000 s/mm^2 <a class=\"reference internal\" href=\"#r293\" id=\"id433\">[R293]</a>.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r292\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R292]</td><td><em>(<a class=\"fn-backref\" href=\"#id432\">1</a>, <a class=\"fn-backref\" href=\"#id434\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r293\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R293]</td><td><em>(<a class=\"fn-backref\" href=\"#id433\">1</a>, <a class=\"fn-backref\" href=\"#id435\">2</a>)</em> Avram et al. &#8220;Clinical feasibility of using mean apparent</td></tr>\n</tbody>\n</table>\n<p>propagator (MAP) MRI to characterize brain tissue microstructure&#8221;.\nNeuroImage 2015, in press.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.ng_parallel\">\n<code class=\"descname\">ng_parallel</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.ng_parallel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical parallel non-Gaussiannity (NG) <a class=\"reference internal\" href=\"#r294\" id=\"id436\">[R294]</a>.\nFor the NG to be meaningful the mapmri scale factors must be\nestimated only on data representing Gaussian diffusion of spins, i.e.,\nbvals smaller than about 2000 s/mm^2 <a class=\"reference internal\" href=\"#r295\" id=\"id437\">[R295]</a>.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r294\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R294]</td><td><em>(<a class=\"fn-backref\" href=\"#id436\">1</a>, <a class=\"fn-backref\" href=\"#id438\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r295\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R295]</td><td><em>(<a class=\"fn-backref\" href=\"#id437\">1</a>, <a class=\"fn-backref\" href=\"#id439\">2</a>)</em> Avram et al. &#8220;Clinical feasibility of using mean apparent</td></tr>\n</tbody>\n</table>\n<p>propagator (MAP) MRI to characterize brain tissue microstructure&#8221;.\nNeuroImage 2015, in press.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.ng_perpendicular\">\n<code class=\"descname\">ng_perpendicular</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.ng_perpendicular\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical perpendicular non-Gaussiannity (NG)\n<a class=\"reference internal\" href=\"#r296\" id=\"id440\">[R296]</a>. For the NG to be meaningful the mapmri scale factors must be\nestimated only on data representing Gaussian diffusion of spins, i.e.,\nbvals smaller than about 2000 s/mm^2 <a class=\"reference internal\" href=\"#r297\" id=\"id441\">[R297]</a>.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r296\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R296]</td><td><em>(<a class=\"fn-backref\" href=\"#id440\">1</a>, <a class=\"fn-backref\" href=\"#id442\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r297\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R297]</td><td><em>(<a class=\"fn-backref\" href=\"#id441\">1</a>, <a class=\"fn-backref\" href=\"#id443\">2</a>)</em> Avram et al. &#8220;Clinical feasibility of using mean apparent</td></tr>\n</tbody>\n</table>\n<p>propagator (MAP) MRI to characterize brain tissue microstructure&#8221;.\nNeuroImage 2015, in press.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal\">\n<code class=\"descname\">norm_of_laplacian_signal</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the norm of the laplacian of the fitted signal [R298].\nThis information could be useful to assess if the extrapolation of the\nfitted signal contains spurious oscillations. A high laplacian may\nindicate that these are present, and any q-space indices that\nuse integrals of the signal may be corrupted (e.g. RTOP, RTAP, RTPP,\nQIV).</p>\n<p class=\"rubric\">References</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em>, <em>s=2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical Orientation Distribution Function (ODF)\nfrom the signal <a class=\"reference internal\" href=\"#r299\" id=\"id446\">[R299]</a> Eq. (32).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>s</strong> : unsigned int</p>\n<blockquote class=\"last\">\n<div><p>radial moment of the ODF</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r299\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R299]</td><td><em>(<a class=\"fn-backref\" href=\"#id446\">1</a>, <a class=\"fn-backref\" href=\"#id447\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.odf_sh\">\n<code class=\"descname\">odf_sh</code><span class=\"sig-paren\">(</span><em>s=2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.odf_sh\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the real analytical odf for a given discrete sphere.\nComputes the design matrix of the ODF for the given sphere vertices\nand radial moment <a class=\"reference internal\" href=\"#r300\" id=\"id448\">[R300]</a> eq. (32). The radial moment s acts as a\nsharpening method. The analytical equation for the spherical ODF basis\nis given in <a href=\"#id651\"><span class=\"problematic\" id=\"id652\"><span id=\"id449\"></span>[2]_</span></a> eq. (C8).</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r300\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R300]</td><td><em>(<a class=\"fn-backref\" href=\"#id448\">1</a>, <a class=\"fn-backref\" href=\"#id450\">2</a>, <a class=\"fn-backref\" href=\"#id451\">3</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.pdf\">\n<code class=\"descname\">pdf</code><span class=\"sig-paren\">(</span><em>r_points</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.pdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Diffusion propagator on a given set of real points.\nif the array r_points is non writeable, then intermediate\nresults are cached for faster recalculation</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>qvals_or_gtab</em>, <em>S0=100.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Recovers the reconstructed signal for any qvalue array or\ngradient table.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.qiv\">\n<code class=\"descname\">qiv</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.qiv\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical Q-space Inverse Variance (QIV).\nIt is defined as the inverse of the Laplacian of the origin of the\nestimated propagator <a class=\"reference internal\" href=\"#r302\" id=\"id452\">[R302]</a> eq. (22). The analytical formula for the\nMAP-MRI basis was derived in [R303] eq. (C14, D2).</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r302\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R302]</td><td><em>(<a class=\"fn-backref\" href=\"#id452\">1</a>, <a class=\"fn-backref\" href=\"#id454\">2</a>)</em> Hosseinbor et al. &#8220;Bessel fourier orientation reconstruction</td></tr>\n</tbody>\n</table>\n<p>(bfor): An analytical diffusion propagator reconstruction for hybrid\ndiffusion imaging and computation of q-space indices. NeuroImage 64,\n2013, 650\u2013670.</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.rtap\">\n<code class=\"descname\">rtap</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.rtap\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical return to the axis probability (RTAP)\n<a class=\"reference internal\" href=\"#r304\" id=\"id456\">[R304]</a> eq. (40, 44a). The analytical formula for the isotropic MAP-MRI\nbasis was derived in [R305] eq. (C11).</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r304\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R304]</td><td><em>(<a class=\"fn-backref\" href=\"#id456\">1</a>, <a class=\"fn-backref\" href=\"#id458\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.rtop\">\n<code class=\"descname\">rtop</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.rtop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical return to the origin probability (RTOP)\n<a class=\"reference internal\" href=\"#r306\" id=\"id460\">[R306]</a> eq. (36, 43). The analytical formula for the isotropic MAP-MRI\nbasis was derived in [R307] eq. (C11).</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r306\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R306]</td><td><em>(<a class=\"fn-backref\" href=\"#id460\">1</a>, <a class=\"fn-backref\" href=\"#id462\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriFit.rtpp\">\n<code class=\"descname\">rtpp</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriFit.rtpp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical return to the plane probability (RTPP)\n<a class=\"reference internal\" href=\"#r308\" id=\"id464\">[R308]</a> eq. (42). The analytical formula for the isotropic MAP-MRI\nbasis was derived in [R309] eq. (C11).</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r308\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R308]</td><td><em>(<a class=\"fn-backref\" href=\"#id464\">1</a>, <a class=\"fn-backref\" href=\"#id466\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmrimodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriModel\" title=\"dipy.reconst.mapmri.MapmriModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">MapmriModel</span></code></a><a class=\"headerlink\" href=\"#mapmrimodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.mapmri.MapmriModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">MapmriModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>radial_order=6</em>, <em>laplacian_regularization=True</em>, <em>laplacian_weighting=0.2</em>, <em>positivity_constraint=False</em>, <em>pos_grid=15</em>, <em>pos_radius='adaptive'</em>, <em>anisotropic_scaling=True</em>, <em>eigenvalue_threshold=0.0001</em>, <em>bval_threshold=inf</em>, <em>dti_scale_estimation=True</em>, <em>static_diffusivity=0.0007</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a>, <a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache\" title=\"dipy.reconst.cache.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.cache.Cache</span></code></a></p>\n<p>Mean Apparent Propagator MRI (MAPMRI) <a class=\"reference internal\" href=\"#r330\" id=\"id468\">[R330]</a> of the diffusion signal.</p>\n<p>The main idea is to model the diffusion signal as a linear combination of\nthe continuous functions presented in <a class=\"reference internal\" href=\"#r331\" id=\"id469\">[R331]</a> but extending it in three\ndimensions.\nThe main difference with the SHORE proposed in <a class=\"reference internal\" href=\"#r332\" id=\"id470\">[R332]</a> is that MAPMRI 3D\nextension is provided using a set of three basis functions for the radial\npart, one for the signal along x, one for y and one for z, while <a class=\"reference internal\" href=\"#r332\" id=\"id471\">[R332]</a>\nuses one basis function to model the radial part and real Spherical\nHarmonics to model the angular part.\nFrom the MAPMRI coefficients is possible to use the analytical formulae\nto estimate the ODF.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r330\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R330]</td><td><em>(<a class=\"fn-backref\" href=\"#id468\">1</a>, <a class=\"fn-backref\" href=\"#id472\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel\ndiffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r331\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R331]</td><td><em>(<a class=\"fn-backref\" href=\"#id469\">1</a>, <a class=\"fn-backref\" href=\"#id473\">2</a>)</em> Ozarslan E. et. al, &#8220;Simple harmonic oscillator based reconstruction\nand estimation for one-dimensional q-space magnetic resonance\n1D-SHORE)&#8221;, eapoc Intl Soc Mag Reson Med, vol. 16, p. 35., 2008.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r332\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R332]</td><td><em>(<a class=\"fn-backref\" href=\"#id470\">1</a>, <a class=\"fn-backref\" href=\"#id471\">2</a>, <a class=\"fn-backref\" href=\"#id474\">3</a>)</em> Merlet S. et. al, &#8220;Continuous diffusion signal, EAP and ODF\nestimation via Compressive Sensing in diffusion MRI&#8221;, Medical\nImage Analysis, 2013.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r333\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id475\">[R333]</a></td><td>Fick, Rutger HJ, et al. &#8220;MAPL: Tissue microstructure estimation\nusing Laplacian-regularized MAP-MRI and its application to HCP\ndata.&#8221; NeuroImage (2016).</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r334\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id476\">[R334]</a></td><td>Cheng, J., 2014. Estimation and Processing of Ensemble Average\nPropagator and Its Features in Diffusion MRI. Ph.D. Thesis.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r335\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id477\">[R335]</a></td><td>Hosseinbor et al. &#8220;Bessel fourier orientation reconstruction\n(bfor): An analytical diffusion propagator reconstruction for hybrid\ndiffusion imaging and computation of q-space indices&#8221;. NeuroImage\n64, 2013, 650\u2013670.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r336\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id478\">[R336]</a></td><td>Craven et al. &#8220;Smoothing Noisy Data with Spline Functions.&#8221;\nNUMER MATH 31.4 (1978): 377-403.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r337\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id479\">[R337]</a></td><td>Avram et al. &#8220;Clinical feasibility of using mean apparent\npropagator (MAP) MRI to characterize brain tissue microstructure&#8221;.\nNeuroImage 2015, in press.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.MapmriModel.fit\" title=\"dipy.reconst.mapmri.MapmriModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method for every voxel in data</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>radial_order=6</em>, <em>laplacian_regularization=True</em>, <em>laplacian_weighting=0.2</em>, <em>positivity_constraint=False</em>, <em>pos_grid=15</em>, <em>pos_radius='adaptive'</em>, <em>anisotropic_scaling=True</em>, <em>eigenvalue_threshold=0.0001</em>, <em>bval_threshold=inf</em>, <em>dti_scale_estimation=True</em>, <em>static_diffusivity=0.0007</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Analytical and continuous modeling of the diffusion signal with\nrespect to the MAPMRI basis <a class=\"reference internal\" href=\"#r338\" id=\"id480\">[R338]</a>.</p>\n<p>The main idea is to model the diffusion signal as a linear combination\nof the continuous functions presented in <a class=\"reference internal\" href=\"#r339\" id=\"id481\">[R339]</a> but extending it in three\ndimensions.</p>\n<p>The main difference with the SHORE proposed in <a class=\"reference internal\" href=\"#r340\" id=\"id482\">[R340]</a> is that MAPMRI 3D\nextension is provided using a set of three basis functions for the\nradial part, one for the signal along x, one for y and one for z, while\n<a class=\"reference internal\" href=\"#r340\" id=\"id483\">[R340]</a> uses one basis function to model the radial part and real\nSpherical Harmonics to model the angular part.</p>\n<p>From the MAPMRI coefficients it is possible to estimate various\nq-space indices, the PDF and the ODF.</p>\n<p>The fitting procedure can be constrained using the positivity\nconstraint proposed in <a class=\"reference internal\" href=\"#r338\" id=\"id484\">[R338]</a> and/or the laplacian regularization\nproposed in <a class=\"reference internal\" href=\"#r341\" id=\"id485\">[R341]</a>.</p>\n<p>For the estimation of q-space indices we recommend using the &#8216;regular&#8217;\nanisotropic implementation of MAPMRI. However, it has been shown that\nthe ODF estimation in this implementation has a bias which\n&#8216;squeezes together&#8217; the ODF peaks when there is a crossing at an angle\nsmaller than 90 degrees <a class=\"reference internal\" href=\"#r341\" id=\"id486\">[R341]</a>. When you want to estimate ODFs for\ntractography we therefore recommend using the isotropic implementation\n(which is equivalent to <a class=\"reference internal\" href=\"#r340\" id=\"id487\">[R340]</a>).</p>\n<p>The switch between isotropic and anisotropic can be easily made through\nthe anisotropic_scaling option.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable,</p>\n<blockquote>\n<div><p>gradient directions and bvalues container class</p>\n</div></blockquote>\n<p><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>laplacian_regularization: bool,</strong> :</p>\n<blockquote>\n<div><p>Regularize using the Laplacian of the MAP-MRI basis.</p>\n</div></blockquote>\n<p><strong>laplacian_weighting: string or scalar,</strong> :</p>\n<blockquote>\n<div><p>The string &#8216;GCV&#8217; makes it use generalized cross-validation to find\nthe regularization weight [4]. A scalar sets the regularization\nweight to that value and an array will make it selected the\noptimal weight from the values in the array.</p>\n</div></blockquote>\n<p><strong>positivity_constraint</strong> : bool,</p>\n<blockquote>\n<div><p>Constrain the propagator to be positive.</p>\n</div></blockquote>\n<p><strong>pos_grid</strong> : integer,</p>\n<blockquote>\n<div><p>The number of points in the grid that is used in the positivity\nconstraint.</p>\n</div></blockquote>\n<p><strong>pos_radius</strong> : float or string,</p>\n<blockquote>\n<div><p>If set to a float, the maximum distance the the positivity\nconstraint constrains to posivity is that value. If set to\n<a href=\"#id488\"><span class=\"problematic\" id=\"id489\">`</span></a>adaptive&#8217;, the maximum distance is dependent on the estimated\ntissue diffusivity.</p>\n</div></blockquote>\n<p><strong>anisotropic_scaling</strong> : bool,</p>\n<blockquote>\n<div><p>If True, uses the standard anisotropic MAP-MRI basis. If False,\nuses the isotropic MAP-MRI basis (equal to 3D-SHORE).</p>\n</div></blockquote>\n<p><strong>eigenvalue_threshold</strong> : float,</p>\n<blockquote>\n<div><p>Sets the minimum of the tensor eigenvalues in order to avoid\nstability problem.</p>\n</div></blockquote>\n<p><strong>bval_threshold</strong> : float,</p>\n<blockquote>\n<div><p>Sets the b-value threshold to be used in the scale factor\nestimation. In order for the estimated non-Gaussianity to have\nmeaning this value should set to a lower value (b&lt;2000 s/mm^2)\nsuch that the scale factors are estimated on signal points that\nreasonably represent the spins at Gaussian diffusion.</p>\n</div></blockquote>\n<p><strong>dti_scale_estimation</strong> : bool,</p>\n<blockquote>\n<div><p>Whether or not DTI fitting is used to estimate the isotropic scale\nfactor for isotropic MAP-MRI.\nWhen set to False the algorithm presets the isotropic tissue\ndiffusivity to static_diffusivity. This vastly increases fitting\nspeed but at the cost of slightly reduced fitting quality. Can\nstill be used in combination with regularization and constraints.</p>\n</div></blockquote>\n<p><strong>static_diffusivity</strong> : float,</p>\n<blockquote class=\"last\">\n<div><p>the tissue diffusivity that is used when dti_scale_estimation is\nset to False. The default is that of typical white matter\nD=0.7e-3 _[5].</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r338\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R338]</td><td><em>(<a class=\"fn-backref\" href=\"#id480\">1</a>, <a class=\"fn-backref\" href=\"#id484\">2</a>, <a class=\"fn-backref\" href=\"#id490\">3</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel\ndiffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r339\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R339]</td><td><em>(<a class=\"fn-backref\" href=\"#id481\">1</a>, <a class=\"fn-backref\" href=\"#id491\">2</a>)</em> Ozarslan E. et. al, &#8220;Simple harmonic oscillator based\nreconstruction and estimation for one-dimensional q-space\nmagnetic resonance 1D-SHORE)&#8221;, eapoc Intl Soc Mag Reson Med,\nvol. 16, p. 35., 2008.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r340\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R340]</td><td><em>(<a class=\"fn-backref\" href=\"#id482\">1</a>, <a class=\"fn-backref\" href=\"#id483\">2</a>, <a class=\"fn-backref\" href=\"#id487\">3</a>, <a class=\"fn-backref\" href=\"#id492\">4</a>)</em> Ozarslan E. et. al, &#8220;Simple harmonic oscillator based\nreconstruction and estimation for three-dimensional q-space\nmri&#8221;, ISMRM 2009.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r341\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R341]</td><td><em>(<a class=\"fn-backref\" href=\"#id485\">1</a>, <a class=\"fn-backref\" href=\"#id486\">2</a>, <a class=\"fn-backref\" href=\"#id493\">3</a>)</em> Fick, Rutger HJ, et al. &#8220;MAPL: Tissue microstructure estimation\nusing Laplacian-regularized MAP-MRI and its application to HCP\ndata.&#8221; NeuroImage (2016).</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r342\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id494\">[R342]</a></td><td>Merlet S. et. al, &#8220;Continuous diffusion signal, EAP and ODF\nestimation via Compressive Sensing in diffusion MRI&#8221;, Medical\nImage Analysis, 2013.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<p>In this example, where the data, gradient table and sphere tessellation\nused for reconstruction are provided, we model the diffusion signal\nwith respect to the SHORE basis and compute the real and analytical\nODF.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">dsi_voxels</span><span class=\"p\">,</span> <span class=\"n\">get_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">dsi_voxels</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.sims.voxel</span> <span class=\"k\">import</span> <span class=\"n\">SticksAndBall</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">golden_directions</span> <span class=\"o\">=</span> <span class=\"n\">SticksAndBall</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>                                    <span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">=</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                                    <span class=\"n\">S0</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)],</span>\n<span class=\"gp\">... </span>                                    <span class=\"n\">fractions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">],</span> <span class=\"n\">snr</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.mapmri</span> <span class=\"k\">import</span> <span class=\"n\">MapmriModel</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">radial_order</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">map_model</span> <span class=\"o\">=</span> <span class=\"n\">MapmriModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">radial_order</span><span class=\"o\">=</span><span class=\"n\">radial_order</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mapfit</span> <span class=\"o\">=</span> <span class=\"n\">map_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric724&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">odf</span> <span class=\"o\">=</span> <span class=\"n\">mapfit</span><span class=\"o\">.</span><span class=\"n\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.MapmriModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.MapmriModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method for every voxel in data</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"optimizer\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Optimizer\" title=\"dipy.reconst.mapmri.Optimizer\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Optimizer</span></code></a><a class=\"headerlink\" href=\"#optimizer\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.mapmri.Optimizer\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">Optimizer</code><span class=\"sig-paren\">(</span><em>fun</em>, <em>x0</em>, <em>args=()</em>, <em>method='L-BFGS-B'</em>, <em>jac=None</em>, <em>hess=None</em>, <em>hessp=None</em>, <em>bounds=None</em>, <em>constraints=()</em>, <em>tol=None</em>, <em>callback=None</em>, <em>options=None</em>, <em>evolution=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Optimizer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Optimizer.evolution\" title=\"dipy.reconst.mapmri.Optimizer.evolution\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">evolution</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Optimizer.fopt\" title=\"dipy.reconst.mapmri.Optimizer.fopt\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fopt</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Optimizer.message\" title=\"dipy.reconst.mapmri.Optimizer.message\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">message</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Optimizer.nfev\" title=\"dipy.reconst.mapmri.Optimizer.nfev\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nfev</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Optimizer.nit\" title=\"dipy.reconst.mapmri.Optimizer.nit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nit</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Optimizer.xopt\" title=\"dipy.reconst.mapmri.Optimizer.xopt\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">xopt</span></code></a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.Optimizer.print_summary\" title=\"dipy.reconst.mapmri.Optimizer.print_summary\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">print_summary</span></code></a>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.Optimizer.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>fun</em>, <em>x0</em>, <em>args=()</em>, <em>method='L-BFGS-B'</em>, <em>jac=None</em>, <em>hess=None</em>, <em>hessp=None</em>, <em>bounds=None</em>, <em>constraints=()</em>, <em>tol=None</em>, <em>callback=None</em>, <em>options=None</em>, <em>evolution=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Optimizer.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A class for handling minimization of scalar function of one or more\nvariables.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>fun</strong> : callable</p>\n<blockquote>\n<div><p>Objective function.</p>\n</div></blockquote>\n<p><strong>x0</strong> : ndarray</p>\n<blockquote>\n<div><p>Initial guess.</p>\n</div></blockquote>\n<p><strong>args</strong> : tuple, optional</p>\n<blockquote>\n<div><p>Extra arguments passed to the objective function and its\nderivatives (Jacobian, Hessian).</p>\n</div></blockquote>\n<p><strong>method</strong> : str, optional</p>\n<blockquote>\n<div><p>Type of solver.  Should be one of</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>&#8216;Nelder-Mead&#8217;</li>\n<li>&#8216;Powell&#8217;</li>\n<li>&#8216;CG&#8217;</li>\n<li>&#8216;BFGS&#8217;</li>\n<li>&#8216;Newton-CG&#8217;</li>\n<li>&#8216;Anneal&#8217;</li>\n<li>&#8216;L-BFGS-B&#8217;</li>\n<li>&#8216;TNC&#8217;</li>\n<li>&#8216;COBYLA&#8217;</li>\n<li>&#8216;SLSQP&#8217;</li>\n<li>&#8216;dogleg&#8217;</li>\n<li>&#8216;trust-ncg&#8217;</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n<p><strong>jac</strong> : bool or callable, optional</p>\n<blockquote>\n<div><p>Jacobian of objective function. Only for CG, BFGS, Newton-CG,\ndogleg, trust-ncg.\nIf <cite>jac</cite> is a Boolean and is True, <cite>fun</cite> is assumed to return the\nvalue of Jacobian along with the objective function. If False, the\nJacobian will be estimated numerically.\n<cite>jac</cite> can also be a callable returning the Jacobian of the\nobjective. In this case, it must accept the same arguments\nas <cite>fun</cite>.</p>\n</div></blockquote>\n<p><strong>hess, hessp</strong> : callable, optional</p>\n<blockquote>\n<div><p>Hessian of objective function or Hessian of objective function\ntimes an arbitrary vector p.  Only for Newton-CG,\ndogleg, trust-ncg.\nOnly one of <cite>hessp</cite> or <cite>hess</cite> needs to be given.  If <cite>hess</cite> is\nprovided, then <cite>hessp</cite> will be ignored.  If neither <cite>hess</cite> nor\n<cite>hessp</cite> is provided, then the hessian product will be approximated\nusing finite differences on <cite>jac</cite>. <cite>hessp</cite> must compute the Hessian\ntimes an arbitrary vector.</p>\n</div></blockquote>\n<p><strong>bounds</strong> : sequence, optional</p>\n<blockquote>\n<div><p>Bounds for variables (only for L-BFGS-B, TNC and SLSQP).\n<code class=\"docutils literal\"><span class=\"pre\">(min,</span> <span class=\"pre\">max)</span></code> pairs for each element in <code class=\"docutils literal\"><span class=\"pre\">x</span></code>, defining\nthe bounds on that parameter. Use None for one of <code class=\"docutils literal\"><span class=\"pre\">min</span></code> or\n<code class=\"docutils literal\"><span class=\"pre\">max</span></code> when there is no bound in that direction.</p>\n</div></blockquote>\n<p><strong>constraints</strong> : dict or sequence of dict, optional</p>\n<blockquote>\n<div><p>Constraints definition (only for COBYLA and SLSQP).\nEach constraint is defined in a dictionary with fields:</p>\n<blockquote>\n<div><dl class=\"docutils\">\n<dt>type <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">str</span></dt>\n<dd><p class=\"first last\">Constraint type: &#8216;eq&#8217; for equality, &#8216;ineq&#8217; for inequality.</p>\n</dd>\n<dt>fun <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">callable</span></dt>\n<dd><p class=\"first last\">The function defining the constraint.</p>\n</dd>\n<dt>jac <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">callable, optional</span></dt>\n<dd><p class=\"first last\">The Jacobian of <cite>fun</cite> (only for SLSQP).</p>\n</dd>\n<dt>args <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">sequence, optional</span></dt>\n<dd><p class=\"first last\">Extra arguments to be passed to the function and Jacobian.</p>\n</dd>\n</dl>\n</div></blockquote>\n<p>Equality constraint means that the constraint function result is to\nbe zero whereas inequality means that it is to be non-negative.\nNote that COBYLA only supports inequality constraints.</p>\n</div></blockquote>\n<p><strong>tol</strong> : float, optional</p>\n<blockquote>\n<div><p>Tolerance for termination. For detailed control, use\nsolver-specific options.</p>\n</div></blockquote>\n<p><strong>callback</strong> : callable, optional</p>\n<blockquote>\n<div><p>Called after each iteration, as <code class=\"docutils literal\"><span class=\"pre\">callback(xk)</span></code>, where <code class=\"docutils literal\"><span class=\"pre\">xk</span></code> is\nthe current parameter vector. Only available using Scipy &gt;= 0.12.</p>\n</div></blockquote>\n<p><strong>options</strong> : dict, optional</p>\n<blockquote>\n<div><p>A dictionary of solver options. All methods accept the following\ngeneric options:</p>\n<blockquote>\n<div><dl class=\"docutils\">\n<dt>maxiter <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">int</span></dt>\n<dd><p class=\"first last\">Maximum number of iterations to perform.</p>\n</dd>\n<dt>disp <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">bool</span></dt>\n<dd><p class=\"first last\">Set to True to print convergence messages.</p>\n</dd>\n</dl>\n</div></blockquote>\n<p>For method-specific options, see\n<cite>show_options(&#8216;minimize&#8217;, method)</cite>.</p>\n</div></blockquote>\n<p><strong>evolution</strong> : bool, optional</p>\n<blockquote class=\"last\">\n<div><p>save history of x for each iteration. Only available using Scipy\n&gt;= 0.12.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">scipy.optimize.minimize</span></code></p>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.mapmri.Optimizer.evolution\">\n<code class=\"descname\">evolution</code><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Optimizer.evolution\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.mapmri.Optimizer.fopt\">\n<code class=\"descname\">fopt</code><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Optimizer.fopt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.mapmri.Optimizer.message\">\n<code class=\"descname\">message</code><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Optimizer.message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.mapmri.Optimizer.nfev\">\n<code class=\"descname\">nfev</code><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Optimizer.nfev\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.mapmri.Optimizer.nit\">\n<code class=\"descname\">nit</code><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Optimizer.nit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.Optimizer.print_summary\">\n<code class=\"descname\">print_summary</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Optimizer.print_summary\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.mapmri.Optimizer.xopt\">\n<code class=\"descname\">xopt</code><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.Optimizer.xopt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id495\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.ReconstFit\" title=\"dipy.reconst.mapmri.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstFit</span></code></a><a class=\"headerlink\" href=\"#id495\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.mapmri.ReconstFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">ReconstFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.ReconstFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class which holds the fit result of ReconstModel</p>\n<p>For example that could be holding FA or GFA etc.</p>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.ReconstFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.ReconstFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id496\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.ReconstModel\" title=\"dipy.reconst.mapmri.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstModel</span></code></a><a class=\"headerlink\" href=\"#id496\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.mapmri.ReconstModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">ReconstModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.ReconstModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class for signal reconstruction models</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.ReconstModel.fit\" title=\"dipy.reconst.mapmri.ReconstModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.ReconstModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.ReconstModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialization of the abstract class for signal reconstruction models</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gtab</strong> : GradientTable class instance</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.mapmri.ReconstModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.ReconstModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"b-mat\">\n<h3>b_mat<a class=\"headerlink\" href=\"#b-mat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.b_mat\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">b_mat</code><span class=\"sig-paren\">(</span><em>index_matrix</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.b_mat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the B coefficients from <a class=\"reference internal\" href=\"#r343\" id=\"id497\">[R343]</a> Eq. (27).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>index_matrix</strong> : array, shape (N,3)</p>\n<blockquote>\n<div><p>ordering of the basis in x, y, z</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>B</strong> : array, shape (N,)</p>\n<blockquote class=\"last\">\n<div><p>B coefficients for the basis</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r343\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R343]</td><td><em>(<a class=\"fn-backref\" href=\"#id497\">1</a>, <a class=\"fn-backref\" href=\"#id498\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"b-mat-isotropic\">\n<h3>b_mat_isotropic<a class=\"headerlink\" href=\"#b-mat-isotropic\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.b_mat_isotropic\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">b_mat_isotropic</code><span class=\"sig-paren\">(</span><em>index_matrix</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.b_mat_isotropic\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the isotropic B coefficients from <a class=\"reference internal\" href=\"#r344\" id=\"id499\">[R344]</a> Fig 8.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>index_matrix</strong> : array, shape (N,3)</p>\n<blockquote>\n<div><p>ordering of the isotropic basis in j, l, m</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>B</strong> : array, shape (N,)</p>\n<blockquote class=\"last\">\n<div><p>B coefficients for the isotropic basis</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r344\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R344]</td><td><em>(<a class=\"fn-backref\" href=\"#id499\">1</a>, <a class=\"fn-backref\" href=\"#id500\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"binomialfloat\">\n<h3>binomialfloat<a class=\"headerlink\" href=\"#binomialfloat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.binomialfloat\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">binomialfloat</code><span class=\"sig-paren\">(</span><em>n</em>, <em>k</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.binomialfloat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Custom Binomial function</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id501\">\n<h3>cart2sphere<a class=\"headerlink\" href=\"#id501\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.cart2sphere\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">cart2sphere</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.cart2sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></p>\n<p>See doc for <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> for angle conventions and derivation\nof the formulae.</p>\n<p><span class=\"math\">\\(0\\le\\theta\\mathrm{(theta)}\\le\\pi\\)</span> and <span class=\"math\">\\(-\\pi\\le\\phi\\mathrm{(phi)}\\le\\pi\\)</span></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>x coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>y</strong> : array_like</p>\n<blockquote>\n<div><p>y coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array_like</p>\n<blockquote>\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> : array</p>\n<blockquote>\n<div><p>radius</p>\n</div></blockquote>\n<p><strong>theta</strong> : array</p>\n<blockquote>\n<div><p>inclination (polar) angle</p>\n</div></blockquote>\n<p><strong>phi</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>azimuth angle</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"create-rspace\">\n<h3>create_rspace<a class=\"headerlink\" href=\"#create-rspace\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.create_rspace\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">create_rspace</code><span class=\"sig-paren\">(</span><em>gridsize</em>, <em>radius_max</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.create_rspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create the real space table, that contains the points in which\nto compute the pdf.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gridsize</strong> : unsigned int</p>\n<blockquote>\n<div><p>dimension of the propagator grid</p>\n</div></blockquote>\n<p><strong>radius_max</strong> : float</p>\n<blockquote>\n<div><p>maximal radius in which compute the propagator</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>tab</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>real space points in which calculates the pdf</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"delta\">\n<h3>delta<a class=\"headerlink\" href=\"#delta\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.delta\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">delta</code><span class=\"sig-paren\">(</span><em>n</em>, <em>m</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.delta\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"factorial\">\n<h3>factorial<a class=\"headerlink\" href=\"#factorial\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.factorial\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">factorial</code><span class=\"sig-paren\">(</span><em>n</em>, <em>exact=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.factorial\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The factorial of a number or array of numbers.</p>\n<p>The factorial of non-negative integer <cite>n</cite> is the product of all\npositive integers less than or equal to <cite>n</cite>:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span>n! = n * (n - 1) * (n - 2) * ... * 1\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> : int or array_like of ints</p>\n<blockquote>\n<div><p>Input values.  If <code class=\"docutils literal\"><span class=\"pre\">n</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">0</span></code>, the return value is 0.</p>\n</div></blockquote>\n<p><strong>exact</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, calculate the answer exactly using long integer arithmetic.\nIf False, result is approximated in floating point rapidly using the\n<cite>gamma</cite> function.\nDefault is False.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>nf</strong> : float or int or ndarray</p>\n<blockquote class=\"last\">\n<div><p>Factorial of <cite>n</cite>, as integer or float depending on <cite>exact</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>For arrays with <code class=\"docutils literal\"><span class=\"pre\">exact=True</span></code>, the factorial is computed only once, for\nthe largest input, with each other result computed in the process.\nThe output dtype is increased to <code class=\"docutils literal\"><span class=\"pre\">int64</span></code> or <code class=\"docutils literal\"><span class=\"pre\">object</span></code> if necessary.</p>\n<p>With <code class=\"docutils literal\"><span class=\"pre\">exact=False</span></code> the factorial is approximated using the gamma\nfunction:</p>\n<div class=\"math\">\n\\[n! = \\Gamma(n+1)\\]</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy.special</span> <span class=\"k\">import</span> <span class=\"n\">factorial</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">factorial</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"n\">exact</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"go\">array([   6.,   24.,  120.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">factorial</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"n\">exact</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">array([  6,  24, 120])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">factorial</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">exact</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">120L</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"factorial2\">\n<h3>factorial2<a class=\"headerlink\" href=\"#factorial2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.factorial2\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">factorial2</code><span class=\"sig-paren\">(</span><em>n</em>, <em>exact=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.factorial2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Double factorial.</p>\n<p>This is the factorial with every second value skipped.  E.g., <code class=\"docutils literal\"><span class=\"pre\">7!!</span> <span class=\"pre\">=</span> <span class=\"pre\">7</span> <span class=\"pre\">*</span> <span class=\"pre\">5</span>\n<span class=\"pre\">*</span> <span class=\"pre\">3</span> <span class=\"pre\">*</span> <span class=\"pre\">1</span></code>.  It can be approximated numerically as:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span>n!! = special.gamma(n/2+1)*2**((m+1)/2)/sqrt(pi)  n odd\n    = 2**(n/2) * (n/2)!                           n even\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> : int or array_like</p>\n<blockquote>\n<div><p>Calculate <code class=\"docutils literal\"><span class=\"pre\">n!!</span></code>.  Arrays are only supported with <cite>exact</cite> set\nto False.  If <code class=\"docutils literal\"><span class=\"pre\">n</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">0</span></code>, the return value is 0.</p>\n</div></blockquote>\n<p><strong>exact</strong> : bool, optional</p>\n<blockquote>\n<div><p>The result can be approximated rapidly using the gamma-formula\nabove (default).  If <cite>exact</cite> is set to True, calculate the\nanswer exactly using integer arithmetic.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>nff</strong> : float or int</p>\n<blockquote class=\"last\">\n<div><p>Double factorial of <cite>n</cite>, as an int or a float depending on\n<cite>exact</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy.special</span> <span class=\"k\">import</span> <span class=\"n\">factorial2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">factorial2</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">exact</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"go\">array(105.00000000000001)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">factorial2</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">exact</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">105L</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gcv-cost-function\">\n<h3>gcv_cost_function<a class=\"headerlink\" href=\"#gcv-cost-function\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.gcv_cost_function\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">gcv_cost_function</code><span class=\"sig-paren\">(</span><em>weight</em>, <em>args</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.gcv_cost_function\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The GCV cost function that is iterated [4]</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"generalized-crossvalidation\">\n<h3>generalized_crossvalidation<a class=\"headerlink\" href=\"#generalized-crossvalidation\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.generalized_crossvalidation\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">generalized_crossvalidation</code><span class=\"sig-paren\">(</span><em>data</em>, <em>M</em>, <em>LR</em>, <em>gcv_startpoint=0.05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.generalized_crossvalidation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generalized Cross Validation Function [R345] eq. (15).\nFinds optimal regularization weight based on generalized cross-validation.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array (N),</p>\n<blockquote>\n<div><p>data array</p>\n</div></blockquote>\n<p><strong>M</strong> : matrix, shape (N, Ncoef)</p>\n<blockquote>\n<div><p>mapmri observation matrix</p>\n</div></blockquote>\n<p><strong>LR</strong> : matrix, shape (N_coef, N_coef)</p>\n<blockquote>\n<div><p>regularization matrix</p>\n</div></blockquote>\n<p><strong>gcv_startpoint</strong> : float</p>\n<blockquote>\n<div><p>startpoint for the gcv optimization</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>optimal_lambda</strong> : float,</p>\n<blockquote class=\"last\">\n<div><p>optimal regularization weight</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"generalized-crossvalidation-array\">\n<h3>generalized_crossvalidation_array<a class=\"headerlink\" href=\"#generalized-crossvalidation-array\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.generalized_crossvalidation_array\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">generalized_crossvalidation_array</code><span class=\"sig-paren\">(</span><em>data</em>, <em>M</em>, <em>LR</em>, <em>weights_array=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.generalized_crossvalidation_array\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generalized Cross Validation Function <a class=\"footnote-reference\" href=\"#id337\" id=\"id504\">[1]</a> eq. (15).\nHere weights_array is a numpy array with all values that should be\nconsidered in the GCV. It will run through the weights until the cost\nfunction starts to increase, then stop and take the last value as the\noptimum weight.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array (N),</p>\n<blockquote>\n<div><p>Basis order matrix</p>\n</div></blockquote>\n<p><strong>M</strong> : matrix, shape (N, Ncoef)</p>\n<blockquote>\n<div><p>mapmri observation matrix</p>\n</div></blockquote>\n<p><strong>LR</strong> : matrix, shape (N_coef, N_coef)</p>\n<blockquote>\n<div><p>regularization matrix</p>\n</div></blockquote>\n<p><strong>weights_array</strong> : array (N_of_weights)</p>\n<blockquote class=\"last\">\n<div><p>array of optional regularization weights</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"genlaguerre\">\n<h3>genlaguerre<a class=\"headerlink\" href=\"#genlaguerre\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.genlaguerre\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">genlaguerre</code><span class=\"sig-paren\">(</span><em>n</em>, <em>alpha</em>, <em>monic=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.genlaguerre\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generalized (associated) Laguerre polynomial.</p>\n<p>Defined to be the solution of</p>\n<div class=\"math\">\n\\[x\\frac{d^2}{dx^2}L_n^{(\\alpha)} \n  + (\\alpha + 1 - x)\\frac{d}{dx}L_n^{(\\alpha)}\n  + nL_n^{(\\alpha)} = 0,\\]</div>\n<p>where <span class=\"math\">\\(\\alpha &gt; -1\\)</span>; <span class=\"math\">\\(L_n^{(\\alpha)}\\)</span> is a polynomial\nof degree <span class=\"math\">\\(n\\)</span>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> : int</p>\n<blockquote>\n<div><p>Degree of the polynomial.</p>\n</div></blockquote>\n<p><strong>alpha</strong> : float</p>\n<blockquote>\n<div><p>Parameter, must be greater than -1.</p>\n</div></blockquote>\n<p><strong>monic</strong> : bool, optional</p>\n<blockquote>\n<div><p>If <cite>True</cite>, scale the leading coefficient to be 1. Default is\n<cite>False</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>L</strong> : orthopoly1d</p>\n<blockquote class=\"last\">\n<div><p>Generalized Laguerre polynomial.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">laguerre</span></code></dt>\n<dd>Laguerre polynomial.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>For fixed <span class=\"math\">\\(\\alpha\\)</span>, the polynomials <span class=\"math\">\\(L_n^{(\\alpha)}\\)</span>\nare orthogonal over <span class=\"math\">\\([0, \\infty)\\)</span> with weight function\n<span class=\"math\">\\(e^{-x}x^\\alpha\\)</span>.</p>\n<p>The Laguerre polynomials are the special case where <span class=\"math\">\\(\\alpha\n= 0\\)</span>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id505\">\n<h3>gradient_table<a class=\"headerlink\" href=\"#id505\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.gradient_table\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">gradient_table</code><span class=\"sig-paren\">(</span><em>bvals</em>, <em>bvecs=None</em>, <em>big_delta=None</em>, <em>small_delta=None</em>, <em>b0_threshold=0</em>, <em>atol=0.01</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.gradient_table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A general function for creating diffusion MR gradients.</p>\n<p>It reads, loads and prepares scanner parameters like the b-values and\nb-vectors so that they can be useful during the reconstruction process.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>bvals</strong> : can be any of the four options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>an array of shape (N,) or (1, N) or (N, 1) with the b-values.</li>\n<li>a path for the file which contains an array like the above (1).</li>\n<li>an array of shape (N, 4) or (4, N). Then this parameter is\nconsidered to be a b-table which contains both bvals and bvecs. In\nthis case the next parameter is skipped.</li>\n<li>a path for the file which contains an array like the one at (3).</li>\n</ol>\n</div></blockquote>\n<p><strong>bvecs</strong> : can be any of two options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>an array of shape (N, 3) or (3, N) with the b-vectors.</li>\n<li>a path for the file which contains an array like the previous.</li>\n</ol>\n</div></blockquote>\n<p><strong>big_delta</strong> : float</p>\n<blockquote>\n<div><p>acquisition timing duration (default None)</p>\n</div></blockquote>\n<p><strong>small_delta</strong> : float</p>\n<blockquote>\n<div><p>acquisition timing duration (default None)</p>\n</div></blockquote>\n<p><strong>b0_threshold</strong> : float</p>\n<blockquote>\n<div><p>All b-values with values less than or equal to <cite>bo_threshold</cite> are\nconsidered as b0s i.e. without diffusion weighting.</p>\n</div></blockquote>\n<p><strong>atol</strong> : float</p>\n<blockquote>\n<div><p>All b-vectors need to be unit vectors up to a tolerance.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>gradients</strong> : GradientTable</p>\n<blockquote class=\"last\">\n<div><p>A GradientTable with all the gradient information.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<ol class=\"arabic simple\">\n<li>Often b0s (b-values which correspond to images without diffusion\nweighting) have 0 values however in some cases the scanner cannot\nprovide b0s of an exact 0 value and it gives a bit higher values\ne.g. 6 or 12. This is the purpose of the b0_threshold in the __init__.</li>\n<li>We assume that the minimum number of b-values is 7.</li>\n<li>B-vectors should be unit vectors.</li>\n</ol>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"k\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"o\">=</span><span class=\"mi\">1500</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sq2</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"hermite\">\n<h3>hermite<a class=\"headerlink\" href=\"#hermite\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.hermite\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">hermite</code><span class=\"sig-paren\">(</span><em>n</em>, <em>monic=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.hermite\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Physicist&#8217;s Hermite polynomial.</p>\n<p>Defined by</p>\n<div class=\"math\">\n\\[H_n(x) = (-1)^ne^{x^2}\\frac{d^n}{dx^n}e^{-x^2};\\]</div>\n<p><span class=\"math\">\\(H_n\\)</span> is a polynomial of degree <span class=\"math\">\\(n\\)</span>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> : int</p>\n<blockquote>\n<div><p>Degree of the polynomial.</p>\n</div></blockquote>\n<p><strong>monic</strong> : bool, optional</p>\n<blockquote>\n<div><p>If <cite>True</cite>, scale the leading coefficient to be 1. Default is\n<cite>False</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>H</strong> : orthopoly1d</p>\n<blockquote class=\"last\">\n<div><p>Hermite polynomial.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The polynomials <span class=\"math\">\\(H_n\\)</span> are orthogonal over <span class=\"math\">\\((-\\infty,\n\\infty)\\)</span> with weight function <span class=\"math\">\\(e^{-x^2}\\)</span>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"isotropic-scale-factor\">\n<h3>isotropic_scale_factor<a class=\"headerlink\" href=\"#isotropic-scale-factor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.isotropic_scale_factor\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">isotropic_scale_factor</code><span class=\"sig-paren\">(</span><em>mu_squared</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.isotropic_scale_factor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Estimated isotropic scaling factor _[1] Eq. (49).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>mu_squared</strong> : array, shape (N,3)</p>\n<blockquote>\n<div><p>squared scale factors of mapmri basis in x, y, z</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>u0</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>closest isotropic scale factor for the isotropic basis</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r346\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id506\">[R346]</a></td><td>Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"map-laplace-s\">\n<h3>map_laplace_s<a class=\"headerlink\" href=\"#map-laplace-s\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.map_laplace_s\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">map_laplace_s</code><span class=\"sig-paren\">(</span><em>n</em>, <em>m</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.map_laplace_s\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>R(m,n) static matrix for Laplacian regularization [R347] eq. (11).\nParameters\n&#8212;&#8212;&#8212;-\nn, m : unsigned int</p>\n<blockquote>\n<div>basis order of the MAP-MRI basis in different directions</div></blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Analytical integral of <span class=\"math\">\\(\\phi_n''(q) * \\phi_m''(q)\\)</span></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"map-laplace-t\">\n<h3>map_laplace_t<a class=\"headerlink\" href=\"#map-laplace-t\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.map_laplace_t\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">map_laplace_t</code><span class=\"sig-paren\">(</span><em>n</em>, <em>m</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.map_laplace_t\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>L(m, n) static matrix for Laplacian regularization [R348] eq. (12).\nParameters\n&#8212;&#8212;&#8212;-\nn, m : unsigned int</p>\n<blockquote>\n<div>basis order of the MAP-MRI basis in different directions</div></blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>T</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Analytical integral of <span class=\"math\">\\(\\phi_n(q) * \\phi_m''(q)\\)</span></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"map-laplace-u\">\n<h3>map_laplace_u<a class=\"headerlink\" href=\"#map-laplace-u\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.map_laplace_u\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">map_laplace_u</code><span class=\"sig-paren\">(</span><em>n</em>, <em>m</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.map_laplace_u\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>S(n, m) static matrix for Laplacian regularization [R349] eq. (13).\nParameters\n&#8212;&#8212;&#8212;-\nn, m : unsigned int</p>\n<blockquote>\n<div>basis order of the MAP-MRI basis in different directions</div></blockquote>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>U</strong> : float,</p>\n<blockquote class=\"last\">\n<div><p>Analytical integral of <span class=\"math\">\\(\\phi_n(q) * \\phi_m(q)\\)</span></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-stu-reg-matrices\">\n<h3>mapmri_STU_reg_matrices<a class=\"headerlink\" href=\"#mapmri-stu-reg-matrices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_STU_reg_matrices\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_STU_reg_matrices</code><span class=\"sig-paren\">(</span><em>radial_order</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_STU_reg_matrices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generates the static portions of the Laplacian regularization matrix\naccording to [R350] eq. (11, 12, 13).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>S, T, U</strong> : Matrices, shape (N_coef,N_coef)</p>\n<blockquote class=\"last\">\n<div><p>Regularization submatrices</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-index-matrix\">\n<h3>mapmri_index_matrix<a class=\"headerlink\" href=\"#mapmri-index-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_index_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_index_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_index_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the indices for the MAPMRI <a class=\"reference internal\" href=\"#r351\" id=\"id515\">[R351]</a> basis in x, y and z.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int</p>\n<blockquote>\n<div><p>radial order of MAPMRI basis</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>index_matrix</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>ordering of the basis in x, y, z</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r351\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R351]</td><td><em>(<a class=\"fn-backref\" href=\"#id515\">1</a>, <a class=\"fn-backref\" href=\"#id516\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-k-mu-dependent\">\n<h3>mapmri_isotropic_K_mu_dependent<a class=\"headerlink\" href=\"#mapmri-isotropic-k-mu-dependent\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_K_mu_dependent</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>mu</em>, <em>rgrad</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes mu dependent part of M. Same trick as with M.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-k-mu-independent\">\n<h3>mapmri_isotropic_K_mu_independent<a class=\"headerlink\" href=\"#mapmri-isotropic-k-mu-independent\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_K_mu_independent</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>rgrad</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes mu independent part of K. Same trick as with M.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-m-mu-dependent\">\n<h3>mapmri_isotropic_M_mu_dependent<a class=\"headerlink\" href=\"#mapmri-isotropic-m-mu-dependent\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_M_mu_dependent</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>mu</em>, <em>qval</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computed the mu dependent part of the signal design matrix.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-m-mu-independent\">\n<h3>mapmri_isotropic_M_mu_independent<a class=\"headerlink\" href=\"#mapmri-isotropic-m-mu-independent\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_M_mu_independent</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>q</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computed the mu independent part of the signal design matrix.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-index-matrix\">\n<h3>mapmri_isotropic_index_matrix<a class=\"headerlink\" href=\"#mapmri-isotropic-index-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_index_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_index_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_index_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the indices for the isotropic MAPMRI basis <a class=\"reference internal\" href=\"#r352\" id=\"id517\">[R352]</a> Fig 8.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int</p>\n<blockquote>\n<div><p>radial order of isotropic MAPMRI basis</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>index_matrix</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>ordering of the basis in x, y, z</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r352\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R352]</td><td><em>(<a class=\"fn-backref\" href=\"#id517\">1</a>, <a class=\"fn-backref\" href=\"#id518\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-laplacian-reg-matrix\">\n<h3>mapmri_isotropic_laplacian_reg_matrix<a class=\"headerlink\" href=\"#mapmri-isotropic-laplacian-reg-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_laplacian_reg_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>mu</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the Laplacian regularization matrix for MAP-MRI&#8217;s isotropic\nimplementation [R353] eq. (C7).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>mu</strong> : float,</p>\n<blockquote>\n<div><p>isotropic scale factor of the isotropic MAP-MRI basis</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>LR</strong> : Matrix, shape (N_coef, N_coef)</p>\n<blockquote class=\"last\">\n<div><p>Laplacian regularization matrix</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-odf-matrix\">\n<h3>mapmri_isotropic_odf_matrix<a class=\"headerlink\" href=\"#mapmri-isotropic-odf-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_odf_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_odf_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>mu</em>, <em>s</em>, <em>vertices</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_odf_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the isotropic MAPMRI ODF matrix <a class=\"reference internal\" href=\"#r354\" id=\"id521\">[R354]</a> Eq. 32 but for the\nisotropic propagator in <a class=\"reference internal\" href=\"#r354\" id=\"id522\">[R354]</a> eq. (60). Analytical derivation in\n[R355] eq. (C8).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>mu</strong> : float,</p>\n<blockquote>\n<div><p>isotropic scale factor of the isotropic MAP-MRI basis</p>\n</div></blockquote>\n<p><strong>s</strong> : unsigned int</p>\n<blockquote>\n<div><p>radial moment of the ODF</p>\n</div></blockquote>\n<p><strong>vertices</strong> : array, shape (N,3)</p>\n<blockquote>\n<div><p>points of the sphere shell in the r-space in which evaluate the ODF</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>odf_mat</strong> : Matrix, shape (N_vertices, N_mapmri_coef)</p>\n<blockquote class=\"last\">\n<div><p>ODF design matrix to discrete sphere function</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r354\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R354]</td><td><em>(<a class=\"fn-backref\" href=\"#id521\">1</a>, <a class=\"fn-backref\" href=\"#id522\">2</a>, <a class=\"fn-backref\" href=\"#id524\">3</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-odf-sh-matrix\">\n<h3>mapmri_isotropic_odf_sh_matrix<a class=\"headerlink\" href=\"#mapmri-isotropic-odf-sh-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_odf_sh_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>mu</em>, <em>s</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the isotropic MAPMRI ODF matrix <a class=\"reference internal\" href=\"#r356\" id=\"id526\">[R356]</a> Eq. 32 for the isotropic\npropagator in <a class=\"reference internal\" href=\"#r356\" id=\"id527\">[R356]</a> eq. (60). Here we do not compute the sphere function but\nthe spherical harmonics by only integrating the radial part of the\npropagator. We use the same derivation of the ODF in the isotropic\nimplementation as in [R357] eq. (C8).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>mu</strong> : float,</p>\n<blockquote>\n<div><p>isotropic scale factor of the isotropic MAP-MRI basis</p>\n</div></blockquote>\n<p><strong>s</strong> : unsigned int</p>\n<blockquote>\n<div><p>radial moment of the ODF</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>odf_sh_mat</strong> : Matrix, shape (N_sh_coef, N_mapmri_coef)</p>\n<blockquote class=\"last\">\n<div><p>ODF design matrix to spherical harmonics</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r356\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R356]</td><td><em>(<a class=\"fn-backref\" href=\"#id526\">1</a>, <a class=\"fn-backref\" href=\"#id527\">2</a>, <a class=\"fn-backref\" href=\"#id529\">3</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-phi-matrix\">\n<h3>mapmri_isotropic_phi_matrix<a class=\"headerlink\" href=\"#mapmri-isotropic-phi-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_phi_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_phi_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>mu</em>, <em>q</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_phi_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Three dimensional isotropic MAPMRI signal basis function from <a class=\"reference internal\" href=\"#r358\" id=\"id531\">[R358]</a>\nEq. (61).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>radial order of the mapmri basis.</p>\n</div></blockquote>\n<p><strong>mu</strong> : float,</p>\n<blockquote>\n<div><p>positive isotropic scale factor of the basis</p>\n</div></blockquote>\n<p><strong>q</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>points in the q-space in which evaluate the basis</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r358\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R358]</td><td><em>(<a class=\"fn-backref\" href=\"#id531\">1</a>, <a class=\"fn-backref\" href=\"#id532\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-psi-matrix\">\n<h3>mapmri_isotropic_psi_matrix<a class=\"headerlink\" href=\"#mapmri-isotropic-psi-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_psi_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_psi_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>mu</em>, <em>rgrad</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_psi_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Three dimensional isotropic MAPMRI propagator basis function from <a class=\"reference internal\" href=\"#r359\" id=\"id533\">[R359]</a>\nEq. (61).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>radial order of the mapmri basis.</p>\n</div></blockquote>\n<p><strong>mu</strong> : float,</p>\n<blockquote>\n<div><p>positive isotropic scale factor of the basis</p>\n</div></blockquote>\n<p><strong>rgrad</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>points in the r-space in which evaluate the basis</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r359\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R359]</td><td><em>(<a class=\"fn-backref\" href=\"#id533\">1</a>, <a class=\"fn-backref\" href=\"#id534\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-radial-pdf-basis\">\n<h3>mapmri_isotropic_radial_pdf_basis<a class=\"headerlink\" href=\"#mapmri-isotropic-radial-pdf-basis\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_radial_pdf_basis</code><span class=\"sig-paren\">(</span><em>j</em>, <em>l</em>, <em>mu</em>, <em>r</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radial part of the isotropic 1D-SHORE propagator basis <a class=\"reference internal\" href=\"#r360\" id=\"id535\">[R360]</a> eq. (61).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>j</strong> : unsigned int,</p>\n<blockquote>\n<div><p>a positive integer related to the radial order</p>\n</div></blockquote>\n<p><strong>l</strong> : unsigned int,</p>\n<blockquote>\n<div><p>the spherical harmonic order</p>\n</div></blockquote>\n<p><strong>mu</strong> : float,</p>\n<blockquote>\n<div><p>isotropic scale factor of the basis</p>\n</div></blockquote>\n<p><strong>r</strong> : float,</p>\n<blockquote class=\"last\">\n<div><p>points in the r-space in which evaluate the basis</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r360\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R360]</td><td><em>(<a class=\"fn-backref\" href=\"#id535\">1</a>, <a class=\"fn-backref\" href=\"#id536\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-isotropic-radial-signal-basis\">\n<h3>mapmri_isotropic_radial_signal_basis<a class=\"headerlink\" href=\"#mapmri-isotropic-radial-signal-basis\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_isotropic_radial_signal_basis</code><span class=\"sig-paren\">(</span><em>j</em>, <em>l</em>, <em>mu</em>, <em>qval</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Radial part of the isotropic 1D-SHORE signal basis <a class=\"reference internal\" href=\"#r361\" id=\"id537\">[R361]</a> eq. (61).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>j</strong> : unsigned int,</p>\n<blockquote>\n<div><p>a positive integer related to the radial order</p>\n</div></blockquote>\n<p><strong>l</strong> : unsigned int,</p>\n<blockquote>\n<div><p>the spherical harmonic order</p>\n</div></blockquote>\n<p><strong>mu</strong> : float,</p>\n<blockquote>\n<div><p>isotropic scale factor of the basis</p>\n</div></blockquote>\n<p><strong>qval</strong> : float,</p>\n<blockquote class=\"last\">\n<div><p>points in the q-space in which evaluate the basis</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r361\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R361]</td><td><em>(<a class=\"fn-backref\" href=\"#id537\">1</a>, <a class=\"fn-backref\" href=\"#id538\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-laplacian-reg-matrix\">\n<h3>mapmri_laplacian_reg_matrix<a class=\"headerlink\" href=\"#mapmri-laplacian-reg-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_laplacian_reg_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_laplacian_reg_matrix</code><span class=\"sig-paren\">(</span><em>ind_mat</em>, <em>mu</em>, <em>S_mat</em>, <em>T_mat</em>, <em>U_mat</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_laplacian_reg_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Puts the Laplacian regularization matrix together [R362] eq. (10).\nThe static parts in S, T and U are multiplied and divided by the\nvoxel-specific scale factors.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>ind_mat</strong> : matrix (N_coef, 3),</p>\n<blockquote>\n<div><p>Basis order matrix</p>\n</div></blockquote>\n<p><strong>mu</strong> : array, shape (3,)</p>\n<blockquote>\n<div><p>scale factors of the basis for x, y, z</p>\n</div></blockquote>\n<p><strong>S, T, U</strong> : matrices, shape (N_coef,N_coef)</p>\n<blockquote>\n<div><p>Regularization submatrices</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>LR</strong> : matrix (N_coef, N_coef),</p>\n<blockquote class=\"last\">\n<div><p>Voxel-specific Laplacian regularization matrix</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<p>using Laplacian-regularized MAP-MRI and its application to HCP data.&#8221;\nNeuroImage (2016).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-odf-matrix\">\n<h3>mapmri_odf_matrix<a class=\"headerlink\" href=\"#mapmri-odf-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_odf_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_odf_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>mu</em>, <em>s</em>, <em>vertices</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_odf_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the MAPMRI ODF matrix <a class=\"reference internal\" href=\"#r363\" id=\"id541\">[R363]</a>  Eq. (33).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>mu</strong> : array, shape (3,)</p>\n<blockquote>\n<div><p>scale factors of the basis for x, y, z</p>\n</div></blockquote>\n<p><strong>s</strong> : unsigned int</p>\n<blockquote>\n<div><p>radial moment of the ODF</p>\n</div></blockquote>\n<p><strong>vertices</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>points of the sphere shell in the r-space in which evaluate the ODF</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r363\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R363]</td><td><em>(<a class=\"fn-backref\" href=\"#id541\">1</a>, <a class=\"fn-backref\" href=\"#id542\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-phi-1d\">\n<h3>mapmri_phi_1d<a class=\"headerlink\" href=\"#mapmri-phi-1d\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_phi_1d\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_phi_1d</code><span class=\"sig-paren\">(</span><em>n</em>, <em>q</em>, <em>mu</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_phi_1d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>One dimensional MAPMRI basis function from <a class=\"reference internal\" href=\"#r364\" id=\"id543\">[R364]</a> Eq. (4).</p>\n<dl class=\"docutils\">\n<dt>n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">unsigned int</span></dt>\n<dd>order of the basis</dd>\n<dt>q <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">array, shape (N,)</span></dt>\n<dd>points in the q-space in which evaluate the basis</dd>\n<dt>mu <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">float</span></dt>\n<dd>scale factor of the basis</dd>\n</dl>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r364\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R364]</td><td><em>(<a class=\"fn-backref\" href=\"#id543\">1</a>, <a class=\"fn-backref\" href=\"#id544\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-phi-matrix\">\n<h3>mapmri_phi_matrix<a class=\"headerlink\" href=\"#mapmri-phi-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_phi_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_phi_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>mu</em>, <em>q_gradients</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_phi_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the MAPMRI phi matrix for the signal <a class=\"reference internal\" href=\"#r365\" id=\"id545\">[R365]</a> eq. (23).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>mu</strong> : array, shape (3,)</p>\n<blockquote>\n<div><p>scale factors of the basis for x, y, z</p>\n</div></blockquote>\n<p><strong>q_gradients</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>points in the q-space in which evaluate the basis</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r365\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R365]</td><td><em>(<a class=\"fn-backref\" href=\"#id545\">1</a>, <a class=\"fn-backref\" href=\"#id546\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-psi-1d\">\n<h3>mapmri_psi_1d<a class=\"headerlink\" href=\"#mapmri-psi-1d\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_psi_1d\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_psi_1d</code><span class=\"sig-paren\">(</span><em>n</em>, <em>x</em>, <em>mu</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_psi_1d\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>One dimensional MAPMRI propagator basis function from <a class=\"reference internal\" href=\"#r366\" id=\"id547\">[R366]</a> Eq. (10).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> : unsigned int</p>\n<blockquote>\n<div><p>order of the basis</p>\n</div></blockquote>\n<p><strong>x</strong> : array, shape (N,)</p>\n<blockquote>\n<div><p>points in the r-space in which evaluate the basis</p>\n</div></blockquote>\n<p><strong>mu</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>scale factor of the basis</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r366\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R366]</td><td><em>(<a class=\"fn-backref\" href=\"#id547\">1</a>, <a class=\"fn-backref\" href=\"#id548\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mapmri-psi-matrix\">\n<h3>mapmri_psi_matrix<a class=\"headerlink\" href=\"#mapmri-psi-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.mapmri_psi_matrix\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">mapmri_psi_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>mu</em>, <em>rgrad</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.mapmri_psi_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the MAPMRI psi matrix for the propagator <a class=\"reference internal\" href=\"#r367\" id=\"id549\">[R367]</a> eq. (22).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>mu</strong> : array, shape (3,)</p>\n<blockquote>\n<div><p>scale factors of the basis for x, y, z</p>\n</div></blockquote>\n<p><strong>rgrad</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>points in the r-space in which evaluate the EAP</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r367\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R367]</td><td><em>(<a class=\"fn-backref\" href=\"#id549\">1</a>, <a class=\"fn-backref\" href=\"#id550\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id551\">\n<h3>multi_voxel_fit<a class=\"headerlink\" href=\"#id551\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.multi_voxel_fit\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">multi_voxel_fit</code><span class=\"sig-paren\">(</span><em>single_voxel_fit</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.multi_voxel_fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Method decorator to turn a single voxel model fit\ndefinition into a multi voxel model fit definition</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"optional-package\">\n<h3>optional_package<a class=\"headerlink\" href=\"#optional-package\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.optional_package\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">optional_package</code><span class=\"sig-paren\">(</span><em>name</em>, <em>trip_msg=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>name</strong> : str</p>\n<blockquote>\n<div><p>package name</p>\n</div></blockquote>\n<p><strong>trip_msg</strong> : None or str</p>\n<blockquote>\n<div><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>pkg_like</strong> : module or <code class=\"docutils literal\"><span class=\"pre\">TripWire</span></code> instance</p>\n<blockquote>\n<div><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</div></blockquote>\n<p><strong>have_pkg</strong> : bool</p>\n<blockquote>\n<div><p>True if import for package was successful, false otherwise</p>\n</div></blockquote>\n<p><strong>module_setup</strong> : function</p>\n<blockquote class=\"last\">\n<div><p>callable usually set as <code class=\"docutils literal\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id552\">\n<h3>real_sph_harm<a class=\"headerlink\" href=\"#id552\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.real_sph_harm\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">real_sph_harm</code><span class=\"sig-paren\">(</span><em>m</em>, <em>n</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.real_sph_harm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute real spherical harmonics.</p>\n<p>Where the real harmonic <span class=\"math\">\\(Y^m_n\\)</span> is defined to be:</p>\n<blockquote>\n<div>Imag(<span class=\"math\">\\(Y^m_n\\)</span>) * sqrt(2)     if m &gt; 0\n<span class=\"math\">\\(Y^0_n\\)</span>                     if m = 0\nReal(<span class=\"math\">\\(Y^|m|_n\\)</span>) * sqrt(2)   if m &lt; 0</div></blockquote>\n<p>This may take scalar or array arguments. The inputs will be broadcasted\nagainst each other.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>m</strong> : int <code class=\"docutils literal\"><span class=\"pre\">|m|</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">n</span></code></p>\n<blockquote>\n<div><p>The order of the harmonic.</p>\n</div></blockquote>\n<p><strong>n</strong> : int <code class=\"docutils literal\"><span class=\"pre\">&gt;=</span> <span class=\"pre\">0</span></code></p>\n<blockquote>\n<div><p>The degree of the harmonic.</p>\n</div></blockquote>\n<p><strong>theta</strong> : float [0, 2*pi]</p>\n<blockquote>\n<div><p>The azimuthal (longitudinal) coordinate.</p>\n</div></blockquote>\n<p><strong>phi</strong> : float [0, pi]</p>\n<blockquote>\n<div><p>The polar (colatitudinal) coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y_mn</strong> : real float</p>\n<blockquote class=\"last\">\n<div><p>The real harmonic <span class=\"math\">\\(Y^m_n\\)</span> sampled at <cite>theta</cite> and <cite>phi</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">scipy.special.sph_harm</span></code></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id553\">\n<h3>sph_harm_ind_list<a class=\"headerlink\" href=\"#id553\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.sph_harm_ind_list\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">sph_harm_ind_list</code><span class=\"sig-paren\">(</span><em>sh_order</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.sph_harm_ind_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the degree (n) and order (m) of all the symmetric spherical\nharmonics of degree less then or equal to <cite>sh_order</cite>. The results, <cite>m_list</cite>\nand <cite>n_list</cite> are kx1 arrays, where k depends on sh_order. They can be\npassed to <a class=\"reference internal\" href=\"#dipy.reconst.mapmri.real_sph_harm\" title=\"dipy.reconst.mapmri.real_sph_harm\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">real_sph_harm()</span></code></a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sh_order</strong> : int</p>\n<blockquote>\n<div><p>even int &gt; 0, max degree to return</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>m_list</strong> : array</p>\n<blockquote>\n<div><p>orders of even spherical harmonics</p>\n</div></blockquote>\n<p><strong>n_list</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>degrees of even spherical harmonics</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.mapmri.real_sph_harm\" title=\"dipy.reconst.mapmri.real_sph_harm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real_sph_harm</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"warn\">\n<h3>warn<a class=\"headerlink\" href=\"#warn\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.mapmri.warn\">\n<code class=\"descclassname\">dipy.reconst.mapmri.</code><code class=\"descname\">warn</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.mapmri.warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Issue a warning, or maybe ignore it or raise an exception.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"callablearray\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.CallableArray\" title=\"dipy.reconst.multi_voxel.CallableArray\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">CallableArray</span></code></a><a class=\"headerlink\" href=\"#callablearray\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.multi_voxel.CallableArray\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.multi_voxel.</code><code class=\"descname\">CallableArray</code><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.CallableArray\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">numpy.ndarray</span></code></p>\n<p>An array which can be called like a function</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">T</span></code></td>\n<td>Same as self.transpose(), except that self is returned if self.ndim &lt; 2.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">base</span></code></td>\n<td>Base object if memory is from some other object.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ctypes</span></code></td>\n<td>An object to simplify the interaction of the array with the ctypes module.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">data</span></code></td>\n<td>Python buffer object pointing to the start of the array&#8217;s data.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dtype</span></code></td>\n<td>Data-type of the array&#8217;s elements.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">flags</span></code></td>\n<td>Information about the memory layout of the array.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">flat</span></code></td>\n<td>A 1-D iterator over the array.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">imag</span></code></td>\n<td>The imaginary part of the array.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">itemsize</span></code></td>\n<td>Length of one array element in bytes.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nbytes</span></code></td>\n<td>Total bytes consumed by the elements of the array.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ndim</span></code></td>\n<td>Number of array dimensions.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real</span></code></td>\n<td>The real part of the array.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></td>\n<td>Tuple of array dimensions.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">size</span></code></td>\n<td>Number of elements in the array.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">strides</span></code></td>\n<td>Tuple of bytes to step in each dimension when traversing an array.</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">__call__</span></code>(*args,&nbsp;**kwargs)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">all</span></code>([axis,&nbsp;out,&nbsp;keepdims])</td>\n<td>Returns True if all elements evaluate to True.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">any</span></code>([axis,&nbsp;out,&nbsp;keepdims])</td>\n<td>Returns True if any of the elements of <cite>a</cite> evaluate to True.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">argmax</span></code>([axis,&nbsp;out])</td>\n<td>Return indices of the maximum values along the given axis.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">argmin</span></code>([axis,&nbsp;out])</td>\n<td>Return indices of the minimum values along the given axis of <cite>a</cite>.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">argpartition</span></code>(kth[,&nbsp;axis,&nbsp;kind,&nbsp;order])</td>\n<td>Returns the indices that would partition this array.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">argsort</span></code>([axis,&nbsp;kind,&nbsp;order])</td>\n<td>Returns the indices that would sort this array.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">astype</span></code>(dtype[,&nbsp;order,&nbsp;casting,&nbsp;subok,&nbsp;copy])</td>\n<td>Copy of the array, cast to a specified type.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">byteswap</span></code>(inplace)</td>\n<td>Swap the bytes of the array elements</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">choose</span></code>(choices[,&nbsp;out,&nbsp;mode])</td>\n<td>Use an index array to construct a new array from a set of choices.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">clip</span></code>([min,&nbsp;max,&nbsp;out])</td>\n<td>Return an array whose values are limited to <code class=\"docutils literal\"><span class=\"pre\">[min,</span> <span class=\"pre\">max]</span></code>.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">compress</span></code>(condition[,&nbsp;axis,&nbsp;out])</td>\n<td>Return selected slices of this array along given axis.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">conj</span></code>()</td>\n<td>Complex-conjugate all elements.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">conjugate</span></code>()</td>\n<td>Return the complex conjugate, element-wise.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">copy</span></code>([order])</td>\n<td>Return a copy of the array.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cumprod</span></code>([axis,&nbsp;dtype,&nbsp;out])</td>\n<td>Return the cumulative product of the elements along the given axis.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cumsum</span></code>([axis,&nbsp;dtype,&nbsp;out])</td>\n<td>Return the cumulative sum of the elements along the given axis.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">diagonal</span></code>([offset,&nbsp;axis1,&nbsp;axis2])</td>\n<td>Return specified diagonals.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dot</span></code>(b[,&nbsp;out])</td>\n<td>Dot product of two arrays.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dump</span></code>(file)</td>\n<td>Dump a pickle of the array to the specified file.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dumps</span></code>()</td>\n<td>Returns the pickle of the array as a string.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fill</span></code>(value)</td>\n<td>Fill the array with a scalar value.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">flatten</span></code>([order])</td>\n<td>Return a copy of the array collapsed into one dimension.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">getfield</span></code>(dtype[,&nbsp;offset])</td>\n<td>Returns a field of the given array as a certain type.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">item</span></code>(*args)</td>\n<td>Copy an element of an array to a standard Python scalar and return it.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">itemset</span></code>(*args)</td>\n<td>Insert scalar into an array (scalar is cast to array&#8217;s dtype, if possible)</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">max</span></code>([axis,&nbsp;out])</td>\n<td>Return the maximum along a given axis.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mean</span></code>([axis,&nbsp;dtype,&nbsp;out,&nbsp;keepdims])</td>\n<td>Returns the average of the array elements along given axis.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">min</span></code>([axis,&nbsp;out,&nbsp;keepdims])</td>\n<td>Return the minimum along a given axis.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">newbyteorder</span></code>([new_order])</td>\n<td>Return the array with the same data viewed with a different byte order.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nonzero</span></code>()</td>\n<td>Return the indices of the elements that are non-zero.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">partition</span></code>(kth[,&nbsp;axis,&nbsp;kind,&nbsp;order])</td>\n<td>Rearranges the elements in the array in such a way that value of the element in kth position is in the position it would be in a sorted array.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">prod</span></code>([axis,&nbsp;dtype,&nbsp;out,&nbsp;keepdims])</td>\n<td>Return the product of the array elements over the given axis</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ptp</span></code>([axis,&nbsp;out])</td>\n<td>Peak to peak (maximum - minimum) value along a given axis.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">put</span></code>(indices,&nbsp;values[,&nbsp;mode])</td>\n<td>Set <code class=\"docutils literal\"><span class=\"pre\">a.flat[n]</span> <span class=\"pre\">=</span> <span class=\"pre\">values[n]</span></code> for all <cite>n</cite> in indices.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ravel</span></code>([order])</td>\n<td>Return a flattened array.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">repeat</span></code>(repeats[,&nbsp;axis])</td>\n<td>Repeat elements of an array.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">reshape</span></code>(shape[,&nbsp;order])</td>\n<td>Returns an array containing the same data with a new shape.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">resize</span></code>(new_shape[,&nbsp;refcheck])</td>\n<td>Change shape and size of array in-place.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">round</span></code>([decimals,&nbsp;out])</td>\n<td>Return <cite>a</cite> with each element rounded to the given number of decimals.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">searchsorted</span></code>(v[,&nbsp;side,&nbsp;sorter])</td>\n<td>Find indices where elements of v should be inserted in a to maintain order.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">setfield</span></code>(val,&nbsp;dtype[,&nbsp;offset])</td>\n<td>Put a value into a specified place in a field defined by a data-type.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">setflags</span></code>([write,&nbsp;align,&nbsp;uic])</td>\n<td>Set array flags WRITEABLE, ALIGNED, and UPDATEIFCOPY, respectively.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sort</span></code>([axis,&nbsp;kind,&nbsp;order])</td>\n<td>Sort an array, in-place.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">squeeze</span></code>([axis])</td>\n<td>Remove single-dimensional entries from the shape of <cite>a</cite>.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">std</span></code>([axis,&nbsp;dtype,&nbsp;out,&nbsp;ddof,&nbsp;keepdims])</td>\n<td>Returns the standard deviation of the array elements along given axis.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sum</span></code>([axis,&nbsp;dtype,&nbsp;out,&nbsp;keepdims])</td>\n<td>Return the sum of the array elements over the given axis.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">swapaxes</span></code>(axis1,&nbsp;axis2)</td>\n<td>Return a view of the array with <cite>axis1</cite> and <cite>axis2</cite> interchanged.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">take</span></code>(indices[,&nbsp;axis,&nbsp;out,&nbsp;mode])</td>\n<td>Return an array formed from the elements of <cite>a</cite> at the given indices.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">tobytes</span></code>([order])</td>\n<td>Construct Python bytes containing the raw data bytes in the array.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">tofile</span></code>(fid[,&nbsp;sep,&nbsp;format])</td>\n<td>Write array to a file as text or binary (default).</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">tolist</span></code>()</td>\n<td>Return the array as a (possibly nested) list.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">tostring</span></code>([order])</td>\n<td>Construct Python bytes containing the raw data bytes in the array.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code>([offset,&nbsp;axis1,&nbsp;axis2,&nbsp;dtype,&nbsp;out])</td>\n<td>Return the sum along diagonals of the array.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">transpose</span></code>(*axes)</td>\n<td>Returns a view of the array with axes transposed.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">var</span></code>([axis,&nbsp;dtype,&nbsp;out,&nbsp;ddof,&nbsp;keepdims])</td>\n<td>Returns the variance of the array elements, along given axis.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">view</span></code>([dtype,&nbsp;type])</td>\n<td>New view of array with the same data.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.multi_voxel.CallableArray.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.CallableArray.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"multivoxelfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.MultiVoxelFit\" title=\"dipy.reconst.multi_voxel.MultiVoxelFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">MultiVoxelFit</span></code></a><a class=\"headerlink\" href=\"#multivoxelfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.multi_voxel.MultiVoxelFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.multi_voxel.</code><code class=\"descname\">MultiVoxelFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>fit_array</em>, <em>mask</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.MultiVoxelFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstFit</span></code></a></p>\n<p>Holds an array of fits and allows access to their attributes and\nmethods</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.MultiVoxelFit.shape\" title=\"dipy.reconst.multi_voxel.MultiVoxelFit.shape\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.MultiVoxelFit.predict\" title=\"dipy.reconst.multi_voxel.MultiVoxelFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(*args,&nbsp;**kwargs)</td>\n<td>Predict for the multi-voxel object using each single-object&#8217;s prediction API, with S0 provided from an array.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.multi_voxel.MultiVoxelFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>fit_array</em>, <em>mask</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.MultiVoxelFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.multi_voxel.MultiVoxelFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.MultiVoxelFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict for the multi-voxel object using each single-object&#8217;s\nprediction API, with S0 provided from an array.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.multi_voxel.MultiVoxelFit.shape\">\n<code class=\"descname\">shape</code><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.MultiVoxelFit.shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id554\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.multi_voxel.ReconstFit\" title=\"dipy.reconst.multi_voxel.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstFit</span></code></a><a class=\"headerlink\" href=\"#id554\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.multi_voxel.ReconstFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.multi_voxel.</code><code class=\"descname\">ReconstFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.ReconstFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class which holds the fit result of ReconstModel</p>\n<p>For example that could be holding FA or GFA etc.</p>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.multi_voxel.ReconstFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.ReconstFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"as-strided\">\n<h3>as_strided<a class=\"headerlink\" href=\"#as-strided\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.multi_voxel.as_strided\">\n<code class=\"descclassname\">dipy.reconst.multi_voxel.</code><code class=\"descname\">as_strided</code><span class=\"sig-paren\">(</span><em>x</em>, <em>shape=None</em>, <em>strides=None</em>, <em>subok=False</em>, <em>writeable=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.as_strided\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a view into the array with the given shape and strides.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">This function has to be used with extreme care, see notes.</p>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : ndarray</p>\n<blockquote>\n<div><p>Array to create a new.</p>\n</div></blockquote>\n<p><strong>shape</strong> : sequence of int, optional</p>\n<blockquote>\n<div><p>The shape of the new array. Defaults to <code class=\"docutils literal\"><span class=\"pre\">x.shape</span></code>.</p>\n</div></blockquote>\n<p><strong>strides</strong> : sequence of int, optional</p>\n<blockquote>\n<div><p>The strides of the new array. Defaults to <code class=\"docutils literal\"><span class=\"pre\">x.strides</span></code>.</p>\n</div></blockquote>\n<p><strong>subok</strong> : bool, optional</p>\n<blockquote>\n<div><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 1.10.</span></p>\n</div>\n<p>If True, subclasses are preserved.</p>\n</div></blockquote>\n<p><strong>writeable</strong> : bool, optional</p>\n<blockquote>\n<div><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 1.12.</span></p>\n</div>\n<p>If set to False, the returned array will always be readonly.\nOtherwise it will be writable if the original array was. It\nis advisable to set this to False if possible (see Notes).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>view</strong> : ndarray</p>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">broadcast_to</span></code></dt>\n<dd>broadcast an array to a given shape.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">reshape</span></code></dt>\n<dd>reshape an array.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p><code class=\"docutils literal\"><span class=\"pre\">as_strided</span></code> creates a view into the array given the exact strides\nand shape. This means it manipulates the internal data structure of\nndarray and, if done incorrectly, the array elements can point to\ninvalid memory and can corrupt results or crash your program.\nIt is advisable to always use the original <code class=\"docutils literal\"><span class=\"pre\">x.strides</span></code> when\ncalculating new strides to avoid reliance on a contiguous memory\nlayout.</p>\n<p>Furthermore, arrays created with this function often contain self\noverlapping memory, so that two elements are identical.\nVectorized write operations on such arrays will typically be\nunpredictable. They may even give different results for small, large,\nor transposed arrays.\nSince writing to these arrays has to be tested and done with great\ncare, you may want to use <code class=\"docutils literal\"><span class=\"pre\">writeable=False</span></code> to avoid accidental write\noperations.</p>\n<p>For these reasons it is advisable to avoid <code class=\"docutils literal\"><span class=\"pre\">as_strided</span></code> when\npossible.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id555\">\n<h3>multi_voxel_fit<a class=\"headerlink\" href=\"#id555\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.multi_voxel.multi_voxel_fit\">\n<code class=\"descclassname\">dipy.reconst.multi_voxel.</code><code class=\"descname\">multi_voxel_fit</code><span class=\"sig-paren\">(</span><em>single_voxel_fit</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.multi_voxel_fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Method decorator to turn a single voxel model fit\ndefinition into a multi voxel model fit definition</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id556\">\n<h3>ndindex<a class=\"headerlink\" href=\"#id556\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.multi_voxel.ndindex\">\n<code class=\"descclassname\">dipy.reconst.multi_voxel.</code><code class=\"descname\">ndindex</code><span class=\"sig-paren\">(</span><em>shape</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.multi_voxel.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape</strong> : tuple of ints</p>\n<blockquote class=\"last\">\n<div><p>The dimensions of the array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"k\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id557\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfFit\" title=\"dipy.reconst.odf.OdfFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OdfFit</span></code></a><a class=\"headerlink\" href=\"#id557\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.odf.OdfFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.odf.</code><code class=\"descname\">OdfFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.OdfFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstFit</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfFit.odf\" title=\"dipy.reconst.odf.OdfFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>To be implemented but specific odf models</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.odf.OdfFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.OdfFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.odf.OdfFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.OdfFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>To be implemented but specific odf models</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id558\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfModel\" title=\"dipy.reconst.odf.OdfModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OdfModel</span></code></a><a class=\"headerlink\" href=\"#id558\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.odf.OdfModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.odf.</code><code class=\"descname\">OdfModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.OdfModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>An abstract class to be sub-classed by specific odf models</p>\n<p>All odf models should provide a fit method which may take data as it&#8217;s\nfirst and only argument.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfModel.fit\" title=\"dipy.reconst.odf.OdfModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data)</td>\n<td>To be implemented by specific odf models</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.odf.OdfModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.OdfModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.odf.OdfModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.OdfModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>To be implemented by specific odf models</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id559\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.odf.ReconstFit\" title=\"dipy.reconst.odf.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstFit</span></code></a><a class=\"headerlink\" href=\"#id559\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.odf.ReconstFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.odf.</code><code class=\"descname\">ReconstFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.ReconstFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class which holds the fit result of ReconstModel</p>\n<p>For example that could be holding FA or GFA etc.</p>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.odf.ReconstFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.ReconstFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id560\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.odf.ReconstModel\" title=\"dipy.reconst.odf.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstModel</span></code></a><a class=\"headerlink\" href=\"#id560\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.odf.ReconstModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.odf.</code><code class=\"descname\">ReconstModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.ReconstModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class for signal reconstruction models</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.odf.ReconstModel.fit\" title=\"dipy.reconst.odf.ReconstModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.odf.ReconstModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.ReconstModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialization of the abstract class for signal reconstruction models</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gtab</strong> : GradientTable class instance</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.odf.ReconstModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.ReconstModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id561\">\n<h3>gfa<a class=\"headerlink\" href=\"#id561\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.odf.gfa\">\n<code class=\"descclassname\">dipy.reconst.odf.</code><code class=\"descname\">gfa</code><span class=\"sig-paren\">(</span><em>samples</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.gfa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The general fractional anisotropy of a function evaluated\non the unit sphere</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"minmax-normalize\">\n<h3>minmax_normalize<a class=\"headerlink\" href=\"#minmax-normalize\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.odf.minmax_normalize\">\n<code class=\"descclassname\">dipy.reconst.odf.</code><code class=\"descname\">minmax_normalize</code><span class=\"sig-paren\">(</span><em>samples</em>, <em>out=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.odf.minmax_normalize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Min-max normalization of a function evaluated on the unit sphere</p>\n<p>Normalizes samples to <code class=\"docutils literal\"><span class=\"pre\">(samples</span> <span class=\"pre\">-</span> <span class=\"pre\">min(samples))</span> <span class=\"pre\">/</span> <span class=\"pre\">(max(samples)</span> <span class=\"pre\">-</span>\n<span class=\"pre\">min(samples))</span></code> for each unit sphere.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>samples</strong> : ndarray (..., N)</p>\n<blockquote>\n<div><p>N samples on a unit sphere for each point, stored along the last axis\nof the array.</p>\n</div></blockquote>\n<p><strong>out</strong> : ndrray (..., N), optional</p>\n<blockquote>\n<div><p>An array to store the normalized samples.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>out</strong> : ndarray, (..., N)</p>\n<blockquote class=\"last\">\n<div><p>Normalized samples.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"hemisphere\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.peaks.HemiSphere\" title=\"dipy.reconst.peaks.HemiSphere\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">HemiSphere</span></code></a><a class=\"headerlink\" href=\"#hemisphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.peaks.HemiSphere\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">HemiSphere</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.HemiSphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../dipy.core/#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.core.sphere.Sphere</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>A HemiSphere is similar to a Sphere but it takes antipodal symmetry into\naccount. Antipodal symmetry means that point v on a HemiSphere is the same\nas the point -v. Duplicate points are discarded when constructing a\nHemiSphere (including antipodal duplicates). <cite>edges</cite> and <cite>faces</cite> are\nremapped to the remaining points as closely as possible.</p>\n<p>The HemiSphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x, y, z</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>theta, phi</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</div></blockquote>\n<p><strong>xyz</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>faces</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</div></blockquote>\n<p><strong>edges</strong> : (N, 2) ndarray</p>\n<blockquote>\n<div><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</div></blockquote>\n<p><strong>tol</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Angle in degrees. Vertices that are less than tol degrees apart are\ntreated as duplicates.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere\" title=\"dipy.reconst.peaks.Sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Sphere</span></code></a></p>\n</div>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">x</span></code></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">y</span></code></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">z</span></code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">edges</span></code>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.HemiSphere.faces\" title=\"dipy.reconst.peaks.HemiSphere.faces\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">faces</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.HemiSphere.find_closest\" title=\"dipy.reconst.peaks.HemiSphere.find_closest\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">find_closest</span></code></a>(xyz)</td>\n<td>Find the index of the vertex in the Sphere closest to the input vector,</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.HemiSphere.from_sphere\" title=\"dipy.reconst.peaks.HemiSphere.from_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">from_sphere</span></code></a>(klass,&nbsp;sphere[,&nbsp;tol])</td>\n<td>Create instance from a Sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.HemiSphere.mirror\" title=\"dipy.reconst.peaks.HemiSphere.mirror\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mirror</span></code></a>()</td>\n<td>Create a full Sphere from a HemiSphere</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.HemiSphere.subdivide\" title=\"dipy.reconst.peaks.HemiSphere.subdivide\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">subdivide</span></code></a>([n])</td>\n<td>Create a more subdivided HemiSphere</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vertices</span></code>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.HemiSphere.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.HemiSphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a HemiSphere from points</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.HemiSphere.faces\">\n<code class=\"descname\">faces</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.HemiSphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.HemiSphere.find_closest\">\n<code class=\"descname\">find_closest</code><span class=\"sig-paren\">(</span><em>xyz</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.HemiSphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector,\ntaking into account antipodal symmetry</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>xyz</strong> : array-like, 3 elements</p>\n<blockquote class=\"last\">\n<div><p>A unit vector</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"dipy.reconst.peaks.HemiSphere.from_sphere\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_sphere</code><span class=\"sig-paren\">(</span><em>klass</em>, <em>sphere</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.HemiSphere.from_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create instance from a Sphere</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.HemiSphere.mirror\">\n<code class=\"descname\">mirror</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.HemiSphere.mirror\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a full Sphere from a HemiSphere</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.HemiSphere.subdivide\">\n<code class=\"descname\">subdivide</code><span class=\"sig-paren\">(</span><em>n=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.HemiSphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a more subdivided HemiSphere</p>\n<p>See Sphere.subdivide for full documentation.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"intemporarydirectory\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.peaks.InTemporaryDirectory\" title=\"dipy.reconst.peaks.InTemporaryDirectory\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">InTemporaryDirectory</span></code></a><a class=\"headerlink\" href=\"#intemporarydirectory\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.peaks.InTemporaryDirectory\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">InTemporaryDirectory</code><span class=\"sig-paren\">(</span><em>suffix=''</em>, <em>prefix='tmp'</em>, <em>dir=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.InTemporaryDirectory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">nibabel.tmpdirs.TemporaryDirectory</span></code></p>\n<p>Create, return, and change directory to a temporary directory</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_cwd</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"n\">InTemporaryDirectory</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">tmpdir</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wt&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;some text&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">tmpdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">tmpdir</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">my_cwd</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cleanup</span></code>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.InTemporaryDirectory.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>suffix=''</em>, <em>prefix='tmp'</em>, <em>dir=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.InTemporaryDirectory.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"peaksandmetrics\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.peaks.PeaksAndMetrics\" title=\"dipy.reconst.peaks.PeaksAndMetrics\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">PeaksAndMetrics</span></code></a><a class=\"headerlink\" href=\"#peaksandmetrics\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.peaks.PeaksAndMetrics\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">PeaksAndMetrics</code><a class=\"headerlink\" href=\"#dipy.reconst.peaks.PeaksAndMetrics\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.peak_direction_getter.PeaksAndMetricsDirectionGetter</span></code></p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ang_thr</span></code></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">qa_thr</span></code></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">total_weight</span></code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_direction</span></code></td>\n<td>Interpolate closest peaks to direction from voxels neighboring point</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">initial_direction</span></code></td>\n<td>The best starting directions for fiber tracking from point</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.PeaksAndMetrics.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.PeaksAndMetrics.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"peaksandmetricsdirectiongetter\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter\" title=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">PeaksAndMetricsDirectionGetter</span></code></a><a class=\"headerlink\" href=\"#peaksandmetricsdirectiongetter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">PeaksAndMetricsDirectionGetter</code><a class=\"headerlink\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.tracking.local.direction_getter.DirectionGetter</span></code></p>\n<p>Deterministic Direction Getter based on peak directions.</p>\n<p>This class contains the cython portion of the code for PeaksAndMetrics and\nis not meant to be used on its own.</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.ang_thr\" title=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.ang_thr\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ang_thr</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.qa_thr\" title=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.qa_thr\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">qa_thr</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.total_weight\" title=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.total_weight\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">total_weight</span></code></a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.get_direction\" title=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.get_direction\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_direction</span></code></a></td>\n<td>Interpolate closest peaks to direction from voxels neighboring point</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.initial_direction\" title=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.initial_direction\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">initial_direction</span></code></a></td>\n<td>The best starting directions for fiber tracking from point</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.ang_thr\">\n<code class=\"descname\">ang_thr</code><a class=\"headerlink\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.ang_thr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.get_direction\">\n<code class=\"descname\">get_direction</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.get_direction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Interpolate closest peaks to direction from voxels neighboring point</p>\n<p>Update direction and return 0 if successful. If no tracking direction\ncould be found, return 1.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.initial_direction\">\n<code class=\"descname\">initial_direction</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.initial_direction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The best starting directions for fiber tracking from point</p>\n<p>All the valid peaks in the voxel closest to point are returned as\ninitial directions.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.qa_thr\">\n<code class=\"descname\">qa_thr</code><a class=\"headerlink\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.qa_thr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.total_weight\">\n<code class=\"descname\">total_weight</code><a class=\"headerlink\" href=\"#dipy.reconst.peaks.PeaksAndMetricsDirectionGetter.total_weight\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sphere\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere\" title=\"dipy.reconst.peaks.Sphere\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Sphere</span></code></a><a class=\"headerlink\" href=\"#sphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.peaks.Sphere\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">Sphere</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>The sphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x, y, z</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>theta, phi</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</div></blockquote>\n<p><strong>xyz</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>faces</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</div></blockquote>\n<p><strong>edges</strong> : (N, 2) ndarray</p>\n<blockquote class=\"last\">\n<div><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere.x\" title=\"dipy.reconst.peaks.Sphere.x\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">x</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere.y\" title=\"dipy.reconst.peaks.Sphere.y\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">y</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere.z\" title=\"dipy.reconst.peaks.Sphere.z\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">z</span></code></a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere.edges\" title=\"dipy.reconst.peaks.Sphere.edges\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">edges</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere.faces\" title=\"dipy.reconst.peaks.Sphere.faces\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">faces</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere.find_closest\" title=\"dipy.reconst.peaks.Sphere.find_closest\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">find_closest</span></code></a>(xyz)</td>\n<td>Find the index of the vertex in the Sphere closest to the input vector</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere.subdivide\" title=\"dipy.reconst.peaks.Sphere.subdivide\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">subdivide</span></code></a>([n])</td>\n<td>Subdivides each face of the sphere into four new faces.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.peaks.Sphere.vertices\" title=\"dipy.reconst.peaks.Sphere.vertices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vertices</span></code></a>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.Sphere.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Sphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.Sphere.edges\">\n<code class=\"descname\">edges</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Sphere.edges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.Sphere.faces\">\n<code class=\"descname\">faces</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Sphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.Sphere.find_closest\">\n<code class=\"descname\">find_closest</code><span class=\"sig-paren\">(</span><em>xyz</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Sphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>xyz</strong> : array-like, 3 elements</p>\n<blockquote class=\"last\">\n<div><p>A unit vector</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.Sphere.subdivide\">\n<code class=\"descname\">subdivide</code><span class=\"sig-paren\">(</span><em>n=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Sphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subdivides each face of the sphere into four new faces.</p>\n<p>New vertices are created at a, b, and c. Then each face [x, y, z] is\ndivided into faces [x, a, c], [y, a, b], [z, b, c], and [a, b, c].</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span>   y\n   /               /               a/____\b\n/\\    /            /  \\  /             /____\\/____          x      c     z\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> : int, optional</p>\n<blockquote>\n<div><p>The number of subdivisions to preform.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>new_sphere</strong> : Sphere</p>\n<blockquote class=\"last\">\n<div><p>The subdivided sphere.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.Sphere.vertices\">\n<code class=\"descname\">vertices</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Sphere.vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.peaks.Sphere.x\">\n<code class=\"descname\">x</code><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Sphere.x\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.peaks.Sphere.y\">\n<code class=\"descname\">y</code><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Sphere.y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.peaks.Sphere.z\">\n<code class=\"descname\">z</code><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Sphere.z\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"repeat\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.peaks.repeat\" title=\"dipy.reconst.peaks.repeat\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">repeat</span></code></a><a class=\"headerlink\" href=\"#repeat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.peaks.repeat\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">repeat</code><span class=\"sig-paren\">(</span><em>object</em><span class=\"optional\">[</span>, <em>times</em><span class=\"optional\">]</span><span class=\"sig-paren\">)</span> &#x2192; create an iterator which returns the object<a class=\"headerlink\" href=\"#dipy.reconst.peaks.repeat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>for the specified number of times.  If not specified, returns the object\nendlessly.</p>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.peaks.repeat.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.repeat.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"xrange\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.peaks.xrange\" title=\"dipy.reconst.peaks.xrange\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">xrange</span></code></a><a class=\"headerlink\" href=\"#xrange\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.peaks.xrange\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">xrange</code><a class=\"headerlink\" href=\"#dipy.reconst.peaks.xrange\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>alias of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></code></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pool\">\n<h3>Pool<a class=\"headerlink\" href=\"#pool\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.Pool\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">Pool</code><span class=\"sig-paren\">(</span><em>self</em>, <em>processes=None</em>, <em>initializer=None</em>, <em>initargs=()</em>, <em>maxtasksperchild=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.Pool\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a process pool object</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cpu-count\">\n<h3>cpu_count<a class=\"headerlink\" href=\"#cpu-count\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.cpu_count\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">cpu_count</code><span class=\"sig-paren\">(</span><em>self</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.cpu_count\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the number of CPUs in the system</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id562\">\n<h3>gfa<a class=\"headerlink\" href=\"#id562\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.gfa\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">gfa</code><span class=\"sig-paren\">(</span><em>samples</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.gfa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The general fractional anisotropy of a function evaluated\non the unit sphere</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id563\">\n<h3>local_maxima<a class=\"headerlink\" href=\"#id563\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.local_maxima\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">local_maxima</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.local_maxima\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Local maxima of a function evaluated on a discrete set of points.</p>\n<p>If a function is evaluated on some set of points where each pair of\nneighboring points is an edge in edges, find the local maxima.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>odf</strong> : array, 1d, dtype=double</p>\n<blockquote>\n<div><p>The function evaluated on a set of discrete points.</p>\n</div></blockquote>\n<p><strong>edges</strong> : array (N, 2)</p>\n<blockquote>\n<div><p>The set of neighbor relations between the points. Every edge, ie\n<cite>edges[i, :]</cite>, is a pair of neighboring points.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>peak_values</strong> : ndarray</p>\n<blockquote>\n<div><p>Value of odf at a maximum point. Peak values is sorted in descending\norder.</p>\n</div></blockquote>\n<p><strong>peak_indices</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Indices of maximum points. Sorted in the same order as <cite>peak_values</cite> so\n<cite>odf[peak_indices[i]] == peak_values[i]</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"../dipy.core/#module-dipy.core.sphere\" title=\"dipy.core.sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dipy.core.sphere</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id564\">\n<h3>ndindex<a class=\"headerlink\" href=\"#id564\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.ndindex\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">ndindex</code><span class=\"sig-paren\">(</span><em>shape</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape</strong> : tuple of ints</p>\n<blockquote class=\"last\">\n<div><p>The dimensions of the array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"k\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"peak-directions\">\n<h3>peak_directions<a class=\"headerlink\" href=\"#peak-directions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.peak_directions\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">peak_directions</code><span class=\"sig-paren\">(</span><em>odf</em>, <em>sphere</em>, <em>relative_peak_threshold=0.5</em>, <em>min_separation_angle=25</em>, <em>minmax_norm=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.peak_directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the directions of odf peaks</p>\n<p>Peaks are defined as points on the odf that are greater than at least one\nneighbor and greater than or equal to all neighbors. Peaks are sorted in\ndescending order by their values then filtered based on their relative size\nand spacing on the sphere. An odf may have 0 peaks, for example if the odf\nis perfectly isotropic.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>odf</strong> : 1d ndarray</p>\n<blockquote>\n<div><p>The odf function evaluated on the vertices of <cite>sphere</cite></p>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>The Sphere providing discrete directions for evaluation.</p>\n</div></blockquote>\n<p><strong>relative_peak_threshold</strong> : float in [0., 1.]</p>\n<blockquote>\n<div><p>Only peaks greater than <code class=\"docutils literal\"><span class=\"pre\">min</span> <span class=\"pre\">+</span> <span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">scale</span></code> are\nkept, where <code class=\"docutils literal\"><span class=\"pre\">min</span> <span class=\"pre\">=</span> <span class=\"pre\">max(0,</span> <span class=\"pre\">odf.min())</span></code> and\n<code class=\"docutils literal\"><span class=\"pre\">scale</span> <span class=\"pre\">=</span> <span class=\"pre\">odf.max()</span> <span class=\"pre\">-</span> <span class=\"pre\">min</span></code>.</p>\n</div></blockquote>\n<p><strong>min_separation_angle</strong> : float in [0, 90]</p>\n<blockquote>\n<div><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>directions</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>N vertices for sphere, one for each peak</p>\n</div></blockquote>\n<p><strong>values</strong> : (N,) ndarray</p>\n<blockquote>\n<div><p>peak values</p>\n</div></blockquote>\n<p><strong>indices</strong> : (N,) ndarray</p>\n<blockquote class=\"last\">\n<div><p>peak indices of the directions on the sphere</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>If the odf has any negative values, they will be clipped to zeros.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"peak-directions-nl\">\n<h3>peak_directions_nl<a class=\"headerlink\" href=\"#peak-directions-nl\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.peak_directions_nl\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">peak_directions_nl</code><span class=\"sig-paren\">(</span><em>sphere_eval</em>, <em>relative_peak_threshold=0.25</em>, <em>min_separation_angle=25</em>, <em>sphere=&lt;dipy.core.sphere.HemiSphere object&gt;</em>, <em>xtol=1e-07</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.peak_directions_nl\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Non Linear Direction Finder</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere_eval</strong> : callable</p>\n<blockquote>\n<div><p>A function which can be evaluated on a sphere.</p>\n</div></blockquote>\n<p><strong>relative_peak_threshold</strong> : float</p>\n<blockquote>\n<div><p>Only return peaks greater than <code class=\"docutils literal\"><span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">m</span></code> where m\nis the largest peak.</p>\n</div></blockquote>\n<p><strong>min_separation_angle</strong> : float in [0, 90]</p>\n<blockquote>\n<div><p>The minimum distance between directions. If two peaks are too close\nonly the larger of the two is returned.</p>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>A discrete Sphere. The points on the sphere will be used for initial\nestimate of maximums.</p>\n</div></blockquote>\n<p><strong>xtol</strong> : float</p>\n<blockquote>\n<div><p>Relative tolerance for optimization.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>directions</strong> : array (N, 3)</p>\n<blockquote>\n<div><p>Points on the sphere corresponding to N local maxima on the sphere.</p>\n</div></blockquote>\n<p><strong>values</strong> : array (N,)</p>\n<blockquote class=\"last\">\n<div><p>Value of sphere_eval at each point on directions.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id565\">\n<h3>peaks_from_model<a class=\"headerlink\" href=\"#id565\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.peaks_from_model\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">peaks_from_model</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em>, <em>sphere</em>, <em>relative_peak_threshold</em>, <em>min_separation_angle</em>, <em>mask=None</em>, <em>return_odf=False</em>, <em>return_sh=True</em>, <em>gfa_thr=0</em>, <em>normalize_peaks=False</em>, <em>sh_order=8</em>, <em>sh_basis_type=None</em>, <em>npeaks=5</em>, <em>B=None</em>, <em>invB=None</em>, <em>parallel=False</em>, <em>nbr_processes=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.peaks_from_model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fits the model to data and computes peaks and metrics</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : a model instance</p>\n<blockquote>\n<div><p><cite>model</cite> will be used to fit the data.</p>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>The Sphere providing discrete directions for evaluation.</p>\n</div></blockquote>\n<p><strong>relative_peak_threshold</strong> : float</p>\n<blockquote>\n<div><p>Only return peaks greater than <code class=\"docutils literal\"><span class=\"pre\">relative_peak_threshold</span> <span class=\"pre\">*</span> <span class=\"pre\">m</span></code> where m\nis the largest peak.</p>\n</div></blockquote>\n<p><strong>min_separation_angle</strong> : float in [0, 90] The minimum distance between</p>\n<blockquote>\n<div><p>directions. If two peaks are too close only the larger of the two is\nreturned.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array, optional</p>\n<blockquote>\n<div><p>If <cite>mask</cite> is provided, voxels that are False in <cite>mask</cite> are skipped and\nno peaks are returned.</p>\n</div></blockquote>\n<p><strong>return_odf</strong> : bool</p>\n<blockquote>\n<div><p>If True, the odfs are returned.</p>\n</div></blockquote>\n<p><strong>return_sh</strong> : bool</p>\n<blockquote>\n<div><p>If True, the odf as spherical harmonics coefficients is returned</p>\n</div></blockquote>\n<p><strong>gfa_thr</strong> : float</p>\n<blockquote>\n<div><p>Voxels with gfa less than <cite>gfa_thr</cite> are skipped, no peaks are returned.</p>\n</div></blockquote>\n<p><strong>normalize_peaks</strong> : bool</p>\n<blockquote>\n<div><p>If true, all peak values are calculated relative to <cite>max(odf)</cite>.</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int, optional</p>\n<blockquote>\n<div><p>Maximum SH order in the SH fit.  For <cite>sh_order</cite>, there will be\n<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients (default 8).</p>\n</div></blockquote>\n<p><strong>sh_basis_type</strong> : {None, &#8216;mrtrix&#8217;, &#8216;fibernav&#8217;}</p>\n<blockquote>\n<div><p><code class=\"docutils literal\"><span class=\"pre\">None</span></code> for the default dipy basis which is the fibernav basis,\n<code class=\"docutils literal\"><span class=\"pre\">mrtrix</span></code> for the MRtrix basis, and\n<code class=\"docutils literal\"><span class=\"pre\">fibernav</span></code> for the FiberNavigator basis</p>\n</div></blockquote>\n<p><strong>sh_smooth</strong> : float, optional</p>\n<blockquote>\n<div><p>Lambda-regularization in the SH fit (default 0.0).</p>\n</div></blockquote>\n<p><strong>npeaks</strong> : int</p>\n<blockquote>\n<div><p>Maximum number of peaks found (default 5 peaks).</p>\n</div></blockquote>\n<p><strong>B</strong> : ndarray, optional</p>\n<blockquote>\n<div><p>Matrix that transforms spherical harmonics to spherical function\n<code class=\"docutils literal\"><span class=\"pre\">sf</span> <span class=\"pre\">=</span> <span class=\"pre\">np.dot(sh,</span> <span class=\"pre\">B)</span></code>.</p>\n</div></blockquote>\n<p><strong>invB</strong> : ndarray, optional</p>\n<blockquote>\n<div><p>Inverse of B.</p>\n</div></blockquote>\n<p><strong>parallel: bool</strong> :</p>\n<blockquote>\n<div><p>If True, use multiprocessing to compute peaks and metric\n(default False). Temporary files are saved in the default temporary\ndirectory of the system. It can be changed using <code class=\"docutils literal\"><span class=\"pre\">import</span> <span class=\"pre\">tempfile</span></code>\nand <code class=\"docutils literal\"><span class=\"pre\">tempfile.tempdir</span> <span class=\"pre\">=</span> <span class=\"pre\">'/path/to/tempdir'</span></code>.</p>\n</div></blockquote>\n<p><strong>nbr_processes: int</strong> :</p>\n<blockquote>\n<div><p>If <cite>parallel</cite> is True, the number of subprocesses to use\n(default multiprocessing.cpu_count()).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>pam</strong> : PeaksAndMetrics</p>\n<blockquote class=\"last\">\n<div><p>An object with <code class=\"docutils literal\"><span class=\"pre\">gfa</span></code>, <code class=\"docutils literal\"><span class=\"pre\">peak_directions</span></code>, <code class=\"docutils literal\"><span class=\"pre\">peak_values</span></code>,\n<code class=\"docutils literal\"><span class=\"pre\">peak_indices</span></code>, <code class=\"docutils literal\"><span class=\"pre\">odf</span></code>, <code class=\"docutils literal\"><span class=\"pre\">shm_coeffs</span></code> as attributes</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id566\">\n<h3>remove_similar_vertices<a class=\"headerlink\" href=\"#id566\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.remove_similar_vertices\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">remove_similar_vertices</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.remove_similar_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove vertices that are less than <cite>theta</cite> degrees from any other</p>\n<p>Returns vertices that are at least theta degrees from any other vertex.\nVertex v and -v are considered the same so if v and -v are both in\n<cite>vertices</cite> only one is kept. Also if v and w are both in vertices, w must\nbe separated by theta degrees from both v and -v to be unique.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vertices</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>N unit vectors.</p>\n</div></blockquote>\n<p><strong>theta</strong> : float</p>\n<blockquote>\n<div><p>The minimum separation between vertices in degrees.</p>\n</div></blockquote>\n<p><strong>return_mapping</strong> : {False, True}, optional</p>\n<blockquote>\n<div><p>If True, return <cite>mapping</cite> as well as <cite>vertices</cite> and maybe <cite>indices</cite>\n(see below).</p>\n</div></blockquote>\n<p><strong>return_indices</strong> : {False, True}, optional</p>\n<blockquote>\n<div><p>If True, return <cite>indices</cite> as well as <cite>vertices</cite> and maybe <cite>mapping</cite>\n(see below).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>unique_vertices</strong> : (M, 3) ndarray</p>\n<blockquote>\n<div><p>Vertices sufficiently separated from one another.</p>\n</div></blockquote>\n<p><strong>mapping</strong> : (N,) ndarray</p>\n<blockquote>\n<div><p>For each element <code class=\"docutils literal\"><span class=\"pre\">vertices[i]</span></code> (<span class=\"math\">\\(i \\in 0..N-1\\)</span>), the index <span class=\"math\">\\(j\\)</span> to a\nvertex in <cite>unique_vertices</cite> that is less than <cite>theta</cite> degrees from\n<code class=\"docutils literal\"><span class=\"pre\">vertices[i]</span></code>.  Only returned if <cite>return_mapping</cite> is True.</p>\n</div></blockquote>\n<p><strong>indices</strong> : (N,) ndarray</p>\n<blockquote class=\"last\">\n<div><p><cite>indices</cite> gives the reverse of <cite>mapping</cite>.  For each element\n<code class=\"docutils literal\"><span class=\"pre\">unique_vertices[j]</span></code> (<span class=\"math\">\\(j \\in 0..M-1\\)</span>), the index <span class=\"math\">\\(i\\)</span> to a vertex in\n<cite>vertices</cite> that is less than <cite>theta</cite> degrees from\n<code class=\"docutils literal\"><span class=\"pre\">unique_vertices[j]</span></code>.  If there is more than one element of\n<cite>vertices</cite> that is less than theta degrees from <cite>unique_vertices[j]</cite>,\nreturn the first (lowest index) matching value.  Only return if\n<cite>return_indices</cite> is True.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"reshape-peaks-for-visualization\">\n<h3>reshape_peaks_for_visualization<a class=\"headerlink\" href=\"#reshape-peaks-for-visualization\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.reshape_peaks_for_visualization\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">reshape_peaks_for_visualization</code><span class=\"sig-paren\">(</span><em>peaks</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.reshape_peaks_for_visualization\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reshape peaks for visualization.</p>\n<p>Reshape and convert to float32 a set of peaks for visualisation with mrtrix\nor the fibernavigator.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"search-descending\">\n<h3>search_descending<a class=\"headerlink\" href=\"#search-descending\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.search_descending\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">search_descending</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.search_descending\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><cite>i</cite> in descending array <cite>a</cite> so <cite>a[i] &lt; a[0] * relative_threshold</cite></p>\n<p>Call <code class=\"docutils literal\"><span class=\"pre\">T</span> <span class=\"pre\">=</span> <span class=\"pre\">a[0]</span> <span class=\"pre\">*</span> <span class=\"pre\">relative_threshold</span></code>. Return value <cite>i</cite> will be the\nsmallest index in the descending array <cite>a</cite> such that <code class=\"docutils literal\"><span class=\"pre\">a[i]</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">T</span></code>.\nEquivalently, <cite>i</cite> will be the largest index such that <code class=\"docutils literal\"><span class=\"pre\">all(a[:i]</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">T)</span></code>.\nIf all values in <cite>a</cite> are &gt;= T, return the length of array <cite>a</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a</strong> : ndarray, ndim=1, c-contiguous</p>\n<blockquote>\n<div><p>Array to be searched.  We assume <cite>a</cite> is in descending order.</p>\n</div></blockquote>\n<p><strong>relative_threshold</strong> : float</p>\n<blockquote>\n<div><p>Applied threshold will be <code class=\"docutils literal\"><span class=\"pre\">T</span></code> with <code class=\"docutils literal\"><span class=\"pre\">T</span> <span class=\"pre\">=</span> <span class=\"pre\">a[0]</span> <span class=\"pre\">*</span> <span class=\"pre\">relative_threshold</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>i</strong> : np.intp</p>\n<blockquote class=\"last\">\n<div><p>If <code class=\"docutils literal\"><span class=\"pre\">T</span> <span class=\"pre\">=</span> <span class=\"pre\">a[0]</span> <span class=\"pre\">*</span> <span class=\"pre\">relative_threshold</span></code> then <cite>i</cite> will be the largest index\nsuch that <code class=\"docutils literal\"><span class=\"pre\">all(a[:i]</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">T)</span></code>.  If all values in <cite>a</cite> are &gt;= T then\n<cite>i</cite> will be <cite>len(a)</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span>\n<span class=\"go\">array([ 10.,   9.,   8.,   7.,   6.,   5.,   4.,   3.,   2.,   1.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"go\">6</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span>\n<span class=\"go\">array([False, False, False, False, False, False,  True,  True,  True,  True], dtype=bool)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">search_descending</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">10</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sh-to-sf-matrix\">\n<h3>sh_to_sf_matrix<a class=\"headerlink\" href=\"#sh-to-sf-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.sh_to_sf_matrix\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">sh_to_sf_matrix</code><span class=\"sig-paren\">(</span><em>sphere</em>, <em>sh_order</em>, <em>basis_type=None</em>, <em>return_inv=True</em>, <em>smooth=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.sh_to_sf_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Matrix that transforms Spherical harmonics (SH) to spherical\nfunction (SF).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>The points on which to sample the spherical function.</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int, optional</p>\n<blockquote>\n<div><p>Maximum SH order in the SH fit.  For <cite>sh_order</cite>, there will be\n<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order_2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients (default 4).</p>\n</div></blockquote>\n<p><strong>basis_type</strong> : {None, &#8216;mrtrix&#8217;, &#8216;fibernav&#8217;}</p>\n<blockquote>\n<div><p><code class=\"docutils literal\"><span class=\"pre\">None</span></code> for the default dipy basis,\n<code class=\"docutils literal\"><span class=\"pre\">mrtrix</span></code> for the MRtrix basis, and\n<code class=\"docutils literal\"><span class=\"pre\">fibernav</span></code> for the FiberNavigator basis\n(default <code class=\"docutils literal\"><span class=\"pre\">None</span></code>).</p>\n</div></blockquote>\n<p><strong>return_inv</strong> : bool</p>\n<blockquote>\n<div><p>If True then the inverse of the matrix is also returned</p>\n</div></blockquote>\n<p><strong>smooth</strong> : float, optional</p>\n<blockquote>\n<div><p>Lambda-regularization in the SH fit (default 0.0).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>B</strong> : ndarray</p>\n<blockquote>\n<div><p>Matrix that transforms spherical harmonics to spherical function\n<code class=\"docutils literal\"><span class=\"pre\">sf</span> <span class=\"pre\">=</span> <span class=\"pre\">np.dot(sh,</span> <span class=\"pre\">B)</span></code>.</p>\n</div></blockquote>\n<p><strong>invB</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Inverse of B.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id567\">\n<h3>warn<a class=\"headerlink\" href=\"#id567\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.peaks.warn\">\n<code class=\"descclassname\">dipy.reconst.peaks.</code><code class=\"descname\">warn</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.peaks.warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Issue a warning, or maybe ignore it or raise an exception.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id568\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.sfm.Cache\" title=\"dipy.reconst.sfm.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Cache</span></code></a><a class=\"headerlink\" href=\"#id568\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.sfm.Cache\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">Cache</code><a class=\"headerlink\" href=\"#dipy.reconst.sfm.Cache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Cache values based on a key object (such as a sphere or gradient table).</p>\n<p class=\"rubric\">Notes</p>\n<p>This class is meant to be used as a mix-in:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Cache</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelFit</span><span class=\"p\">(</span><span class=\"n\">Fit</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Inside a method on the fit, typical usage would be:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">):</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">M</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_basis_matrix</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">M</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.Cache.cache_clear\" title=\"dipy.reconst.sfm.Cache.cache_clear\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code></a>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.Cache.cache_get\" title=\"dipy.reconst.sfm.Cache.cache_get\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code></a>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.Cache.cache_set\" title=\"dipy.reconst.sfm.Cache.cache_set\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code></a>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.Cache.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.Cache.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.Cache.cache_clear\">\n<code class=\"descname\">cache_clear</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.Cache.cache_clear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clear the cache.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.Cache.cache_get\">\n<code class=\"descname\">cache_get</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>default=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.Cache.cache_get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieve a value from the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>default</strong> : object</p>\n<blockquote>\n<div><p>Value to be returned if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>v</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value from the cache associated with <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.  Returns\n<cite>default</cite> if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.Cache.cache_set\">\n<code class=\"descname\">cache_set</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>value</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.Cache.cache_set\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Store a value in the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>value</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value stored in the cache for each unique combination\nof <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># Imagine the following computation is very expensive</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"o\">=</span> <span class=\"n\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">X1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"ow\">is</span> <span class=\"n\">X2</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"exponentialisotropicfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ExponentialIsotropicFit\" title=\"dipy.reconst.sfm.ExponentialIsotropicFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ExponentialIsotropicFit</span></code></a><a class=\"headerlink\" href=\"#exponentialisotropicfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.sfm.ExponentialIsotropicFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">ExponentialIsotropicFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ExponentialIsotropicFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.sfm.IsotropicFit\" title=\"dipy.reconst.sfm.IsotropicFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.sfm.IsotropicFit</span></code></a></p>\n<p>A fit to the ExponentialIsotropicModel object, based on data.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ExponentialIsotropicFit.predict\" title=\"dipy.reconst.sfm.ExponentialIsotropicFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>([gtab])</td>\n<td>Predict the isotropic signal, based on a gradient table.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.ExponentialIsotropicFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ExponentialIsotropicFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize an IsotropicFit object.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : IsotropicModel class instance</p>\n<p><strong>params</strong> : ndarray</p>\n<blockquote>\n<div><p>The mean isotropic model parameters (the mean diffusion-weighted\nsignal in each voxel).</p>\n</div></blockquote>\n<p><strong>n_vox</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>The number of voxels for which the fit was done.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.ExponentialIsotropicFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ExponentialIsotropicFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict the isotropic signal, based on a gradient table. In this case,\nthe prediction will be for an exponential decay with the mean\ndiffusivity derived from the data that was fit.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance (optional)</p>\n<blockquote class=\"last\">\n<div><p>Defaults to use the gtab from the IsotropicModel from which this\nfit was derived.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"exponentialisotropicmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ExponentialIsotropicModel\" title=\"dipy.reconst.sfm.ExponentialIsotropicModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ExponentialIsotropicModel</span></code></a><a class=\"headerlink\" href=\"#exponentialisotropicmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.sfm.ExponentialIsotropicModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">ExponentialIsotropicModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ExponentialIsotropicModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.sfm.IsotropicModel\" title=\"dipy.reconst.sfm.IsotropicModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.sfm.IsotropicModel</span></code></a></p>\n<p>Representing the isotropic signal as a fit to an exponential decay function\nwith b-values</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ExponentialIsotropicModel.fit\" title=\"dipy.reconst.sfm.ExponentialIsotropicModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data)</td>\n<td><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"></td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.ExponentialIsotropicModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ExponentialIsotropicModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize an IsotropicModel.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gtab</strong> : a GradientTable class instance</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.ExponentialIsotropicModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ExponentialIsotropicModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>data</strong> : ndarray</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><strong>ExponentialIsotropicFit class instance.</strong> :</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"isotropicfit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.sfm.IsotropicFit\" title=\"dipy.reconst.sfm.IsotropicFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">IsotropicFit</span></code></a><a class=\"headerlink\" href=\"#isotropicfit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.sfm.IsotropicFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">IsotropicFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.IsotropicFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstFit</span></code></a></p>\n<p>A fit object for representing the isotropic signal as the mean of the\ndiffusion-weighted signal.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.IsotropicFit.predict\" title=\"dipy.reconst.sfm.IsotropicFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>([gtab])</td>\n<td>Predict the isotropic signal.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.IsotropicFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>params</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.IsotropicFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize an IsotropicFit object.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : IsotropicModel class instance</p>\n<p><strong>params</strong> : ndarray</p>\n<blockquote>\n<div><p>The mean isotropic model parameters (the mean diffusion-weighted\nsignal in each voxel).</p>\n</div></blockquote>\n<p><strong>n_vox</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>The number of voxels for which the fit was done.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.IsotropicFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.IsotropicFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict the isotropic signal.</p>\n<p>Based on a gradient table. In this case, the (naive!) prediction will\nbe the mean of the diffusion-weighted signal in the voxels.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance (optional)</p>\n<blockquote class=\"last\">\n<div><p>Defaults to use the gtab from the IsotropicModel from which this\nfit was derived.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"isotropicmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.sfm.IsotropicModel\" title=\"dipy.reconst.sfm.IsotropicModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">IsotropicModel</span></code></a><a class=\"headerlink\" href=\"#isotropicmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.sfm.IsotropicModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">IsotropicModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.IsotropicModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>A base-class for the representation of isotropic signals.</p>\n<p>The default behavior, suitable for single b-value data is to calculate the\nmean in each voxel as an estimate of the signal that does not depend on\ndirection.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.IsotropicModel.fit\" title=\"dipy.reconst.sfm.IsotropicModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data)</td>\n<td>Fit an IsotropicModel.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.IsotropicModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.IsotropicModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize an IsotropicModel.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gtab</strong> : a GradientTable class instance</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.IsotropicModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.IsotropicModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit an IsotropicModel.</p>\n<p>This boils down to finding the mean diffusion-weighted signal in each\nvoxel</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>data</strong> : ndarray</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><strong>IsotropicFit class instance.</strong> :</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id569\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ReconstFit\" title=\"dipy.reconst.sfm.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstFit</span></code></a><a class=\"headerlink\" href=\"#id569\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.sfm.ReconstFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">ReconstFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ReconstFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class which holds the fit result of ReconstModel</p>\n<p>For example that could be holding FA or GFA etc.</p>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.ReconstFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ReconstFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id570\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ReconstModel\" title=\"dipy.reconst.sfm.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ReconstModel</span></code></a><a class=\"headerlink\" href=\"#id570\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.sfm.ReconstModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">ReconstModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ReconstModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Abstract class for signal reconstruction models</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.ReconstModel.fit\" title=\"dipy.reconst.sfm.ReconstModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.ReconstModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ReconstModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialization of the abstract class for signal reconstruction models</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>gtab</strong> : GradientTable class instance</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.ReconstModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.ReconstModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sparsefasciclefit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.sfm.SparseFascicleFit\" title=\"dipy.reconst.sfm.SparseFascicleFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">SparseFascicleFit</span></code></a><a class=\"headerlink\" href=\"#sparsefasciclefit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.sfm.SparseFascicleFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">SparseFascicleFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>beta</em>, <em>S0</em>, <em>iso</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.SparseFascicleFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstFit</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.SparseFascicleFit.odf\" title=\"dipy.reconst.sfm.SparseFascicleFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>The orientation distribution function of the SFM</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.SparseFascicleFit.predict\" title=\"dipy.reconst.sfm.SparseFascicleFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>([gtab,&nbsp;response,&nbsp;S0])</td>\n<td>Predict the signal based on the SFM parameters</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.SparseFascicleFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>beta</em>, <em>S0</em>, <em>iso</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.SparseFascicleFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initalize a SparseFascicleFit class instance</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : a SparseFascicleModel object.</p>\n<p><strong>beta</strong> : ndarray</p>\n<blockquote>\n<div><p>The parameters of fit to data.</p>\n</div></blockquote>\n<p><strong>S0</strong> : ndarray</p>\n<blockquote>\n<div><p>The mean non-diffusion-weighted signal.</p>\n</div></blockquote>\n<p><strong>iso</strong> : IsotropicFit class instance</p>\n<blockquote class=\"last\">\n<div><p>A representation of the isotropic signal, together with parameters\nof the isotropic signal in each voxel, that is capable of\nderiving/predicting an isotropic signal, based on a gradient-table.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.SparseFascicleFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.SparseFascicleFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The orientation distribution function of the SFM</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>The points in which the ODF is evaluated</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>odf</strong> :  ndarray of shape (x, y, z, sphere.vertices.shape[0])</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.SparseFascicleFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab=None</em>, <em>response=None</em>, <em>S0=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.SparseFascicleFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict the signal based on the SFM parameters</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable, optional</p>\n<blockquote>\n<div><p>The bvecs/bvals to predict the signal on. Default: the gtab from\nthe model object.</p>\n</div></blockquote>\n<p><strong>response</strong> : list of 3 elements, optional</p>\n<blockquote>\n<div><p>The eigenvalues of a tensor which will serve as a kernel\nfunction. Default: the response of the model object. Default to use\n<cite>model.response</cite>.</p>\n</div></blockquote>\n<p><strong>S0</strong> : float or array, optional</p>\n<blockquote>\n<div><p>The non-diffusion-weighted signal. Default: use the S0 of the data</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>pred_sig</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The signal predicted in each voxel/direction</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sparsefasciclemodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.sfm.SparseFascicleModel\" title=\"dipy.reconst.sfm.SparseFascicleModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">SparseFascicleModel</span></code></a><a class=\"headerlink\" href=\"#sparsefasciclemodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.sfm.SparseFascicleModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">SparseFascicleModel</code><span class=\"sig-paren\">(</span><em>gtab, sphere=None, response=[0.0015, 0.0005, 0.0005], solver='ElasticNet', l1_ratio=0.5, alpha=0.001, isotropic=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.SparseFascicleModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a>, <a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache\" title=\"dipy.reconst.cache.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.cache.Cache</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.SparseFascicleModel.design_matrix\" title=\"dipy.reconst.sfm.SparseFascicleModel.design_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">design_matrix</span></code></a>()</td>\n<td>The design matrix for a SFM.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.sfm.SparseFascicleModel.fit\" title=\"dipy.reconst.sfm.SparseFascicleModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit the SparseFascicleModel object to data.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.SparseFascicleModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab, sphere=None, response=[0.0015, 0.0005, 0.0005], solver='ElasticNet', l1_ratio=0.5, alpha=0.001, isotropic=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.SparseFascicleModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize a Sparse Fascicle Model</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable class instance</p>\n<p><strong>sphere</strong> : Sphere class instance, optional</p>\n<blockquote>\n<div><p>A sphere on which coefficients will be estimated. Default:</p>\n</div></blockquote>\n<p><strong>symmetric sphere with 362 points (from :mod:`dipy.data`).</strong> :</p>\n<p><strong>response</strong> : (3,) array-like, optional</p>\n<blockquote>\n<div><p>The eigenvalues of a canonical tensor to be used as the response\nfunction of single-fascicle signals.\nDefault:[0.0015, 0.0005, 0.0005]</p>\n</div></blockquote>\n<p><strong>solver</strong> : string, dipy.core.optimize.SKLearnLinearSolver object, or sklearn.linear_model.base.LinearModel object, optional.</p>\n<blockquote>\n<div><p>This will determine the algorithm used to solve the set of linear\nequations underlying this model. If it is a string it needs to be\none of the following: {&#8216;ElasticNet&#8217;, &#8216;NNLS&#8217;}. Otherwise, it can be\nan object that inherits from <cite>dipy.optimize.SKLearnLinearSolver</cite>.\nDefault: &#8216;ElasticNet&#8217;.</p>\n</div></blockquote>\n<p><strong>l1_ratio</strong> : float, optional</p>\n<blockquote>\n<div><p>Sets the balance betwee L1 and L2 regularization in ElasticNet\n<a class=\"reference internal\" href=\"#zou2005\" id=\"id571\">[Zou2005]</a>. Default: 0.5</p>\n</div></blockquote>\n<p><strong>alpha</strong> : float, optional</p>\n<blockquote>\n<div><p>Sets the balance between least-squares error and L1/L2\nregularization in ElasticNet <a class=\"reference internal\" href=\"#zou2005\" id=\"id572\">[Zou2005]</a>. Default: 0.001</p>\n</div></blockquote>\n<p><strong>isotropic</strong> : IsotropicModel class instance</p>\n<blockquote class=\"last\">\n<div><p>This is a class that implements the function that calculates the\nvalue of the isotropic signal. This is a value of the signal that is\nindependent of direction, and therefore removed from both sides of\nthe SFM equation. The default is an instance of IsotropicModel, but\nother functions can be inherited from IsotropicModel to implement\nother fits to the aspects of the data that depend on b-value, but\nnot on direction.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>This is an implementation of the SFM, described in <a class=\"reference internal\" href=\"#id577\" id=\"id573\">[Rokem2015]</a>.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"id574\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Rokem2014]</td><td>Ariel Rokem, Jason D. Yeatman, Franco Pestilli, Kendrick\nN. Kay, Aviv Mezer, Stefan van der Walt, Brian A. Wandell\n(2014). Evaluating the accuracy of diffusion MRI models in white\nmatter. PLoS ONE 10(4): e0123272. doi:10.1371/journal.pone.0123272</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"zou2005\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Zou2005]</td><td><em>(<a class=\"fn-backref\" href=\"#id571\">1</a>, <a class=\"fn-backref\" href=\"#id572\">2</a>)</em> Zou H, Hastie T (2005). Regularization and variable\nselection via the elastic net. J R Stat Soc B:301-320</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.SparseFascicleModel.design_matrix\">\n<code class=\"descname\">design_matrix</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.SparseFascicleModel.design_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The design matrix for a SFM.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ndarray</strong> :</p>\n<blockquote class=\"last\">\n<div><p>The design matrix, where each column is a rotated version of the\nresponse function.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.sfm.SparseFascicleModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.SparseFascicleModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit the SparseFascicleModel object to data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : array</p>\n<blockquote>\n<div><p>The measured signal.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array, optional</p>\n<blockquote>\n<div><p>A boolean array used to mark the coordinates in the data that\nshould be analyzed. Has the shape <cite>data.shape[:-1]</cite>. Default: None,\nwhich implies that all points should be analyzed.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>SparseFascicleFit object</strong> :</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id575\">\n<h3>auto_attr<a class=\"headerlink\" href=\"#id575\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.sfm.auto_attr\">\n<code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">auto_attr</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.auto_attr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator to create OneTimeProperty attributes.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>func</strong> : method</p>\n<blockquote class=\"last\">\n<div><p>The method that will be called the first time to compute a value.\nAfterwards, the method&#8217;s name will be a standard attribute holding the\nvalue of this computation.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MagicProp</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"mi\">99</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">MagicProp</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span>\n<span class=\"go\">99</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"nanmean\">\n<h3>nanmean<a class=\"headerlink\" href=\"#nanmean\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.sfm.nanmean\">\n<code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">nanmean</code><span class=\"sig-paren\">(</span><em>a</em>, <em>axis=None</em>, <em>dtype=None</em>, <em>out=None</em>, <em>keepdims=&lt;class 'numpy._globals._NoValue'&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.nanmean\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the arithmetic mean along the specified axis, ignoring NaNs.</p>\n<p>Returns the average of the array elements.  The average is taken over\nthe flattened array by default, otherwise over the specified axis.\n<cite>float64</cite> intermediate and return values are used for integer inputs.</p>\n<p>For all-NaN slices, NaN is returned and a <cite>RuntimeWarning</cite> is raised.</p>\n<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 1.8.0.</span></p>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a</strong> : array_like</p>\n<blockquote>\n<div><p>Array containing numbers whose mean is desired. If <cite>a</cite> is not an\narray, a conversion is attempted.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int, optional</p>\n<blockquote>\n<div><p>Axis along which the means are computed. The default is to compute\nthe mean of the flattened array.</p>\n</div></blockquote>\n<p><strong>dtype</strong> : data-type, optional</p>\n<blockquote>\n<div><p>Type to use in computing the mean.  For integer inputs, the default\nis <cite>float64</cite>; for inexact inputs, it is the same as the input\ndtype.</p>\n</div></blockquote>\n<p><strong>out</strong> : ndarray, optional</p>\n<blockquote>\n<div><p>Alternate output array in which to place the result.  The default\nis <code class=\"docutils literal\"><span class=\"pre\">None</span></code>; if provided, it must have the same shape as the\nexpected output, but the type will be cast if necessary.  See\n<cite>doc.ufuncs</cite> for details.</p>\n</div></blockquote>\n<p><strong>keepdims</strong> : bool, optional</p>\n<blockquote>\n<div><p>If this is set to True, the axes which are reduced are left\nin the result as dimensions with size one. With this option,\nthe result will broadcast correctly against the original <cite>a</cite>.</p>\n<p>If the value is anything but the default, then\n<cite>keepdims</cite> will be passed through to the <cite>mean</cite> or <cite>sum</cite> methods\nof sub-classes of <cite>ndarray</cite>.  If the sub-classes methods\ndoes not implement <cite>keepdims</cite> any exceptions will be raised.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>m</strong> : ndarray, see dtype parameter above</p>\n<blockquote class=\"last\">\n<div><p>If <cite>out=None</cite>, returns a new array containing the mean values,\notherwise a reference to the output array is returned. Nan is\nreturned for slices that contain only NaNs.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">average</span></code></dt>\n<dd>Weighted average</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mean</span></code></dt>\n<dd>Arithmetic mean taken while not ignoring NaNs</dd>\n</dl>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">var</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nanvar</span></code></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>The arithmetic mean is the sum of the non-NaN elements along the axis\ndivided by the number of non-NaN elements.</p>\n<p>Note that for floating-point input, the mean is computed using the same\nprecision the input has.  Depending on the input data, this can cause\nthe results to be inaccurate, especially for <cite>float32</cite>.  Specifying a\nhigher-precision accumulator using the <cite>dtype</cite> keyword can alleviate\nthis issue.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nanmean</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"go\">2.6666666666666665</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nanmean</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 2.,  4.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nanmean</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1.,  3.5])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id576\">\n<h3>optional_package<a class=\"headerlink\" href=\"#id576\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.sfm.optional_package\">\n<code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">optional_package</code><span class=\"sig-paren\">(</span><em>name</em>, <em>trip_msg=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>name</strong> : str</p>\n<blockquote>\n<div><p>package name</p>\n</div></blockquote>\n<p><strong>trip_msg</strong> : None or str</p>\n<blockquote>\n<div><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>pkg_like</strong> : module or <code class=\"docutils literal\"><span class=\"pre\">TripWire</span></code> instance</p>\n<blockquote>\n<div><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</div></blockquote>\n<p><strong>have_pkg</strong> : bool</p>\n<blockquote>\n<div><p>True if import for package was successful, false otherwise</p>\n</div></blockquote>\n<p><strong>module_setup</strong> : function</p>\n<blockquote class=\"last\">\n<div><p>callable usually set as <code class=\"docutils literal\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sfm-design-matrix\">\n<h3>sfm_design_matrix<a class=\"headerlink\" href=\"#sfm-design-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.sfm.sfm_design_matrix\">\n<code class=\"descclassname\">dipy.reconst.sfm.</code><code class=\"descname\">sfm_design_matrix</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>sphere</em>, <em>response</em>, <em>mode='signal'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.sfm.sfm_design_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct the SFM design matrix</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable or Sphere</p>\n<blockquote>\n<div><p>Sets the rows of the matrix, if the mode is &#8216;signal&#8217;, this should be a\nGradientTable. If mode is &#8216;odf&#8217; this should be a Sphere</p>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>Sets the columns of the matrix</p>\n</div></blockquote>\n<p><strong>response</strong> : list of 3 elements</p>\n<blockquote>\n<div><p>The eigenvalues of a tensor which will serve as a kernel\nfunction.</p>\n</div></blockquote>\n<p><strong>mode</strong> : str {&#8216;signal&#8217; | &#8216;odf&#8217;}, optional</p>\n<blockquote>\n<div><p>Choose the (default) &#8216;signal&#8217; for a design matrix containing predicted\nsignal in the measurements defined by the gradient table for putative\nfascicles oriented along the vertices of the sphere. Otherwise, choose\n&#8216;odf&#8217; for an odf convolution matrix, with values of the odf calculated\nfrom a tensor with the provided response eigenvalues, evaluated at the\nb-vectors in the gradient table, for the tensors with prinicipal\ndiffusion directions along the vertices of the sphere.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>mat</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>A design matrix that can be used for one of the following operations:\nwhen the &#8216;signal&#8217; mode is used, each column contains the putative\nsignal in each of the bvectors of the <cite>gtab</cite> if a fascicle is oriented\nin the direction encoded by the sphere vertex corresponding to this\ncolumn. This is used for deconvolution with a measured DWI signal. If\nthe &#8216;odf&#8217; mode is chosen, each column instead contains the values of\nthe tensor ODF for a tensor with a principal diffusion direction\ncorresponding to this vertex. This is used to generate odfs from the\nfits of the SFM for the purpose of tracking.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"id577\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Rokem2015]</td><td>Ariel Rokem, Jason D. Yeatman, Franco Pestilli, Kendrick\nN. Kay, Aviv Mezer, Stefan van der Walt, Brian A. Wandell\n(2015). Evaluating the accuracy of diffusion MRI models in white\nmatter. PLoS ONE 10(4): e0123272. doi:10.1371/journal.pone.0123272</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"id578\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Rokem2014]</td><td>Ariel Rokem, Kimberly L. Chan, Jason D. Yeatman, Franco\nPestilli,  Brian A. Wandell (2014). Evaluating the accuracy of diffusion\nmodels at multiple b-values with cross-validation. ISMRM 2014.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"behrens2007\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id580\">[Behrens2007]</a></td><td>Behrens TEJ, Berg HJ, Jbabdi S, Rushworth MFS, Woolrich MW\n(2007): Probabilistic diffusion tractography with multiple fibre\norientations: What can we gain? Neuroimage 34:144-55.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">as</span> <span class=\"nn\">dpd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">dpd</span><span class=\"o\">.</span><span class=\"n\">dsi_voxels</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">dpd</span><span class=\"o\">.</span><span class=\"n\">get_sphere</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.sfm</span> <span class=\"k\">import</span> <span class=\"n\">sfm_design_matrix</span>\n</pre></div>\n</div>\n<p>A canonical tensor approximating corpus-callosum voxels <a class=\"reference internal\" href=\"#id578\" id=\"id579\">[Rokem2014]</a>:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tensor_matrix</span> <span class=\"o\">=</span> <span class=\"n\">sfm_design_matrix</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">sphere</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                                  <span class=\"p\">[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0005</span><span class=\"p\">,</span> <span class=\"mf\">0.0005</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>A &#8216;stick&#8217; function (<a class=\"reference internal\" href=\"#behrens2007\" id=\"id580\">[Behrens2007]</a>):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">stick_matrix</span> <span class=\"o\">=</span> <span class=\"n\">sfm_design_matrix</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mf\">0.001</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id581\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.Cache\" title=\"dipy.reconst.shm.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Cache</span></code></a><a class=\"headerlink\" href=\"#id581\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.Cache\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">Cache</code><a class=\"headerlink\" href=\"#dipy.reconst.shm.Cache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Cache values based on a key object (such as a sphere or gradient table).</p>\n<p class=\"rubric\">Notes</p>\n<p>This class is meant to be used as a mix-in:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Cache</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelFit</span><span class=\"p\">(</span><span class=\"n\">Fit</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Inside a method on the fit, typical usage would be:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">):</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">M</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_basis_matrix</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">M</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.Cache.cache_clear\" title=\"dipy.reconst.shm.Cache.cache_clear\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code></a>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.Cache.cache_get\" title=\"dipy.reconst.shm.Cache.cache_get\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code></a>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.Cache.cache_set\" title=\"dipy.reconst.shm.Cache.cache_set\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code></a>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.Cache.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.Cache.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.Cache.cache_clear\">\n<code class=\"descname\">cache_clear</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.Cache.cache_clear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clear the cache.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.Cache.cache_get\">\n<code class=\"descname\">cache_get</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>default=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.Cache.cache_get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieve a value from the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>default</strong> : object</p>\n<blockquote>\n<div><p>Value to be returned if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>v</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value from the cache associated with <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.  Returns\n<cite>default</cite> if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.Cache.cache_set\">\n<code class=\"descname\">cache_set</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>value</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.Cache.cache_set\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Store a value in the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>value</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value stored in the cache for each unique combination\nof <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># Imagine the following computation is very expensive</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"o\">=</span> <span class=\"n\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">X1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"ow\">is</span> <span class=\"n\">X2</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"csaodfmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.CsaOdfModel\" title=\"dipy.reconst.shm.CsaOdfModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">CsaOdfModel</span></code></a><a class=\"headerlink\" href=\"#csaodfmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.CsaOdfModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">CsaOdfModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>sh_order</em>, <em>smooth=0.006</em>, <em>min_signal=1.0</em>, <em>assume_normed=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.CsaOdfModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.shm.QballBaseModel\" title=\"dipy.reconst.shm.QballBaseModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.shm.QballBaseModel</span></code></a></p>\n<p>Implementation of Constant Solid Angle reconstruction method.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r368\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id582\">[R368]</a></td><td>Aganj, I., et. al. 2009. ODF Reconstruction in Q-Ball Imaging With\nSolid Angle Consideration.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code>(data[,&nbsp;mask])</td>\n<td>Fits the model to diffusion data and returns the model fit</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sampling_matrix</span></code>(sphere)</td>\n<td>The matrix needed to sample ODFs from coefficients of the model.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.CsaOdfModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>sh_order</em>, <em>smooth=0.006</em>, <em>min_signal=1.0</em>, <em>assume_normed=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.CsaOdfModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a model that can be used to fit or sample diffusion data</p>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.shm.normalize_data\" title=\"dipy.reconst.shm.normalize_data\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">normalize_data</span></code></a></p>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.shm.CsaOdfModel.max\">\n<code class=\"descname\">max</code><em class=\"property\"> = 0.999</em><a class=\"headerlink\" href=\"#dipy.reconst.shm.CsaOdfModel.max\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.shm.CsaOdfModel.min\">\n<code class=\"descname\">min</code><em class=\"property\"> = 0.001</em><a class=\"headerlink\" href=\"#dipy.reconst.shm.CsaOdfModel.min\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id583\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.LooseVersion\" title=\"dipy.reconst.shm.LooseVersion\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">LooseVersion</span></code></a><a class=\"headerlink\" href=\"#id583\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.LooseVersion\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">LooseVersion</code><span class=\"sig-paren\">(</span><em>vstring=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.LooseVersion\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">distutils.version.Version</span></code></p>\n<p>Version numbering for anarchists and software realists.\nImplements the standard interface for version number classes as\ndescribed above.  A version number consists of a series of numbers,\nseparated by either periods or strings of letters.  When comparing\nversion numbers, the numeric components will be compared\nnumerically, and the alphabetic components lexically.  The following\nare all valid version numbers, in no particular order:</p>\n<blockquote>\n<div>1.5.1\n1.5.2b2\n161\n3.10a\n8.02\n3.4j\n1996.07.12\n3.2.pl0\n3.1.1.6\n2g6\n11g\n0.960923\n2.2beta29\n1.13++\n5.5.kw\n2.0b1pl0</div></blockquote>\n<p>In fact, there is no such thing as an invalid version number under\nthis scheme; the rules for comparison are simple and predictable,\nbut may not always give the results you want (for some definition\nof &#8220;want&#8221;).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.LooseVersion.parse\" title=\"dipy.reconst.shm.LooseVersion.parse\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">parse</span></code></a>(vstring)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.LooseVersion.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>vstring=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.LooseVersion.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.shm.LooseVersion.component_re\">\n<code class=\"descname\">component_re</code><em class=\"property\"> = re.compile('(\\\\d+ | [a-z]+ | \\\\.)', re.VERBOSE)</em><a class=\"headerlink\" href=\"#dipy.reconst.shm.LooseVersion.component_re\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.LooseVersion.parse\">\n<code class=\"descname\">parse</code><span class=\"sig-paren\">(</span><em>vstring</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.LooseVersion.parse\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id584\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.OdfFit\" title=\"dipy.reconst.shm.OdfFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OdfFit</span></code></a><a class=\"headerlink\" href=\"#id584\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.OdfFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">OdfFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.OdfFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstFit\" title=\"dipy.reconst.base.ReconstFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstFit</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.OdfFit.odf\" title=\"dipy.reconst.shm.OdfFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>To be implemented but specific odf models</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.OdfFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.OdfFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.OdfFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.OdfFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>To be implemented but specific odf models</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id585\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.OdfModel\" title=\"dipy.reconst.shm.OdfModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OdfModel</span></code></a><a class=\"headerlink\" href=\"#id585\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.OdfModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">OdfModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.OdfModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.base.ReconstModel\" title=\"dipy.reconst.base.ReconstModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.base.ReconstModel</span></code></a></p>\n<p>An abstract class to be sub-classed by specific odf models</p>\n<p>All odf models should provide a fit method which may take data as it&#8217;s\nfirst and only argument.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.OdfModel.fit\" title=\"dipy.reconst.shm.OdfModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data)</td>\n<td>To be implemented by specific odf models</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.OdfModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.OdfModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.OdfModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.OdfModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>To be implemented by specific odf models</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"opdtmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.OpdtModel\" title=\"dipy.reconst.shm.OpdtModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OpdtModel</span></code></a><a class=\"headerlink\" href=\"#opdtmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.OpdtModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">OpdtModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>sh_order</em>, <em>smooth=0.006</em>, <em>min_signal=1.0</em>, <em>assume_normed=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.OpdtModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.shm.QballBaseModel\" title=\"dipy.reconst.shm.QballBaseModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.shm.QballBaseModel</span></code></a></p>\n<p>Implementation of Orientation Probability Density Transform\nreconstruction method.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r369\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id586\">[R369]</a></td><td>Tristan-Vega, A., et. al. 2010. A new methodology for estimation of\nfiber populations in white matter of the brain with Funk-Radon\ntransform.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r370\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id587\">[R370]</a></td><td>Tristan-Vega, A., et. al. 2009. Estimation of fiber orientation\nprobability density functions in high angular resolution diffusion\nimaging.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code>(data[,&nbsp;mask])</td>\n<td>Fits the model to diffusion data and returns the model fit</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sampling_matrix</span></code>(sphere)</td>\n<td>The matrix needed to sample ODFs from coefficients of the model.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.OpdtModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>sh_order</em>, <em>smooth=0.006</em>, <em>min_signal=1.0</em>, <em>assume_normed=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.OpdtModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a model that can be used to fit or sample diffusion data</p>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.shm.normalize_data\" title=\"dipy.reconst.shm.normalize_data\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">normalize_data</span></code></a></p>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"qballbasemodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.QballBaseModel\" title=\"dipy.reconst.shm.QballBaseModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">QballBaseModel</span></code></a><a class=\"headerlink\" href=\"#qballbasemodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.QballBaseModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">QballBaseModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>sh_order</em>, <em>smooth=0.006</em>, <em>min_signal=1.0</em>, <em>assume_normed=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.QballBaseModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmModel\" title=\"dipy.reconst.shm.SphHarmModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.shm.SphHarmModel</span></code></a></p>\n<p>To be subclassed by Qball type models.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.QballBaseModel.fit\" title=\"dipy.reconst.shm.QballBaseModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fits the model to diffusion data and returns the model fit</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sampling_matrix</span></code>(sphere)</td>\n<td>The matrix needed to sample ODFs from coefficients of the model.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.QballBaseModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>sh_order</em>, <em>smooth=0.006</em>, <em>min_signal=1.0</em>, <em>assume_normed=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.QballBaseModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a model that can be used to fit or sample diffusion data</p>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.shm.normalize_data\" title=\"dipy.reconst.shm.normalize_data\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">normalize_data</span></code></a></p>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.QballBaseModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.QballBaseModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fits the model to diffusion data and returns the model fit</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"qballmodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.QballModel\" title=\"dipy.reconst.shm.QballModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">QballModel</span></code></a><a class=\"headerlink\" href=\"#qballmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.QballModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">QballModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>sh_order</em>, <em>smooth=0.006</em>, <em>min_signal=1.0</em>, <em>assume_normed=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.QballModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.shm.QballBaseModel\" title=\"dipy.reconst.shm.QballBaseModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.shm.QballBaseModel</span></code></a></p>\n<p>Implementation of regularized Qball reconstruction method.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r371\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id588\">[R371]</a></td><td>Descoteaux, M., et. al. 2007. Regularized, fast, and robust\nanalytical Q-ball imaging.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code>(data[,&nbsp;mask])</td>\n<td>Fits the model to diffusion data and returns the model fit</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sampling_matrix</span></code>(sphere)</td>\n<td>The matrix needed to sample ODFs from coefficients of the model.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.QballModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>sh_order</em>, <em>smooth=0.006</em>, <em>min_signal=1.0</em>, <em>assume_normed=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.QballModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a model that can be used to fit or sample diffusion data</p>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.shm.normalize_data\" title=\"dipy.reconst.shm.normalize_data\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">normalize_data</span></code></a></p>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"residualbootstrapwrapper\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.ResidualBootstrapWrapper\" title=\"dipy.reconst.shm.ResidualBootstrapWrapper\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ResidualBootstrapWrapper</span></code></a><a class=\"headerlink\" href=\"#residualbootstrapwrapper\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.ResidualBootstrapWrapper\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">ResidualBootstrapWrapper</code><span class=\"sig-paren\">(</span><em>signal_object</em>, <em>B</em>, <em>where_dwi</em>, <em>min_signal=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.ResidualBootstrapWrapper\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Returns a residual bootstrap sample of the signal_object when indexed</p>\n<p>Wraps a signal_object, this signal object can be an interpolator. When\nindexed, the the wrapper indexes the signal_object to get the signal.\nThere wrapper than samples the residual boostrap distribution of signal and\nreturns that sample.</p>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.ResidualBootstrapWrapper.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>signal_object</em>, <em>B</em>, <em>where_dwi</em>, <em>min_signal=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.ResidualBootstrapWrapper.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds a ResidualBootstrapWapper</p>\n<p>Given some linear model described by B, the design matrix, and a\nsignal_object, returns an object which can sample the residual\nbootstrap distribution of the signal. We assume that the signals are\nnormalized so we clip the bootsrap samples to be between <cite>min_signal</cite>\nand 1.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>signal_object</strong> : some object that can be indexed</p>\n<blockquote>\n<div><p>This object should return diffusion weighted signals when indexed.</p>\n</div></blockquote>\n<p><strong>B</strong> : ndarray, ndim=2</p>\n<blockquote>\n<div><p>The design matrix of the spherical harmonics model used to fit the\ndata. This is the model that will be used to compute the residuals\nand sample the residual bootstrap distribution</p>\n</div></blockquote>\n<p><strong>where_dwi :</strong> :</p>\n<blockquote>\n<div><p>indexing object to find diffusion weighted signals from signal</p>\n</div></blockquote>\n<p><strong>min_signal</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>The lowest allowable signal.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id589\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmFit\" title=\"dipy.reconst.shm.SphHarmFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">SphHarmFit</span></code></a><a class=\"headerlink\" href=\"#id589\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.SphHarmFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">SphHarmFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>shm_coef</em>, <em>mask</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.SphHarmFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfFit\" title=\"dipy.reconst.odf.OdfFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.odf.OdfFit</span></code></a></p>\n<p>Diffusion data fit to a spherical harmonic model</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmFit.shape\" title=\"dipy.reconst.shm.SphHarmFit.shape\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shape</span></code></a></td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmFit.shm_coeff\" title=\"dipy.reconst.shm.SphHarmFit.shm_coeff\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shm_coeff</span></code></a></td>\n<td>The spherical harmonic coefficients of the odf</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmFit.gfa\" title=\"dipy.reconst.shm.SphHarmFit.gfa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gfa</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmFit.odf\" title=\"dipy.reconst.shm.SphHarmFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>Samples the odf function on the points of a sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmFit.predict\" title=\"dipy.reconst.shm.SphHarmFit.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>([gtab,&nbsp;S0])</td>\n<td>Predict the diffusion signal from the model coefficients.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.SphHarmFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>shm_coef</em>, <em>mask</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.SphHarmFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.SphHarmFit.gfa\">\n<code class=\"descname\">gfa</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.SphHarmFit.gfa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.SphHarmFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.SphHarmFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Samples the odf function on the points of a sphere</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>The points on which to sample the odf.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>values</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The value of the odf on each point of <cite>sphere</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.SphHarmFit.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>gtab=None</em>, <em>S0=1.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.SphHarmFit.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict the diffusion signal from the model coefficients.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : a GradientTable class instance</p>\n<blockquote>\n<div><p>The directions and bvalues on which prediction is desired</p>\n</div></blockquote>\n<p><strong>S0</strong> : float array</p>\n<blockquote class=\"last\">\n<div><p>The mean non-diffusion-weighted signal in each voxel.\nDefault: 1.0 in all voxels</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.shm.SphHarmFit.shape\">\n<code class=\"descname\">shape</code><a class=\"headerlink\" href=\"#dipy.reconst.shm.SphHarmFit.shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.shm.SphHarmFit.shm_coeff\">\n<code class=\"descname\">shm_coeff</code><a class=\"headerlink\" href=\"#dipy.reconst.shm.SphHarmFit.shm_coeff\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The spherical harmonic coefficients of the odf</p>\n<p>Make this a property for now, if there is a usecase for modifying\nthe coefficients we can add a setter or expose the coefficients more\ndirectly</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id590\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmModel\" title=\"dipy.reconst.shm.SphHarmModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">SphHarmModel</span></code></a><a class=\"headerlink\" href=\"#id590\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shm.SphHarmModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">SphHarmModel</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.SphHarmModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.odf.OdfModel\" title=\"dipy.reconst.odf.OdfModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.odf.OdfModel</span></code></a>, <a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache\" title=\"dipy.reconst.cache.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.cache.Cache</span></code></a></p>\n<p>To be subclassed by all models that return a SphHarmFit when fit.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code>(data)</td>\n<td>To be implemented by specific odf models</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shm.SphHarmModel.sampling_matrix\" title=\"dipy.reconst.shm.SphHarmModel.sampling_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sampling_matrix</span></code></a>(sphere)</td>\n<td>The matrix needed to sample ODFs from coefficients of the model.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.SphHarmModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.SphHarmModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shm.SphHarmModel.sampling_matrix\">\n<code class=\"descname\">sampling_matrix</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.SphHarmModel.sampling_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The matrix needed to sample ODFs from coefficients of the model.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>Points used to sample ODF.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sampling_matrix</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>The size of the matrix will be (N, M) where N is the number of\nvertices on sphere and M is the number of coefficients needed by\nthe model.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"anisotropic-power\">\n<h3>anisotropic_power<a class=\"headerlink\" href=\"#anisotropic-power\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.anisotropic_power\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">anisotropic_power</code><span class=\"sig-paren\">(</span><em>sh_coeffs</em>, <em>norm_factor=1e-05</em>, <em>power=2</em>, <em>non_negative=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.anisotropic_power\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates anisotropic power map with a given SH coefficient matrix</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sh_coeffs</strong> : ndarray</p>\n<blockquote>\n<div><blockquote>\n<div><p>A ndarray where the last dimension is the\nSH coefficients estimates for that voxel.</p>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>norm_factor: float, optional</dt>\n<dd><p class=\"first last\">The value to normalize the ap values. Default is 10^-5.</p>\n</dd>\n<dt>power <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">int, optional</span></dt>\n<dd><p class=\"first last\">The degree to which power maps are calculated. Default: 2.</p>\n</dd>\n<dt>non_negative: bool, optional</dt>\n<dd><p class=\"first last\">Whether to rectify the resulting map to be non-negative.\nDefault: True.</p>\n</dd>\n</dl>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>log_ap</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The log of the resulting power image.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p>rac{1}{2l+1} sum_{m=-l}^l{<a href=\"#id591\"><span class=\"problematic\" id=\"id592\">|</span></a>a_{l,m}|^n}}</p>\n<blockquote>\n<div><p>Where the last dimension, C, is made of a flattened array of <span class=\"math\">\\(l`x:math:`m\\)</span>\ncoefficients, where <span class=\"math\">\\(l\\)</span> are the SH orders, and <span class=\"math\">\\(m = 2l+1\\)</span>,\nSo l=1 has 1 coeffecient, l=2 has 5, ... l=8 has 17 and so on.\nA l=2 SH coefficient matrix will then be composed of a IxJxKx6 volume.\nThe power, <span class=\"math\">\\(n\\)</span> is usually set to <span class=\"math\">\\(n=2\\)</span>.</p>\n<p>The final AP image is then shifted by -log(norm_factor), to be strictly\nnon-negative. Remaining values &lt; 0 are discarded (set to 0), per default,\nand this option is controlled through the <cite>non_negative</cite> keyword argument.</p>\n</div></blockquote>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id593\">\n<h3>auto_attr<a class=\"headerlink\" href=\"#id593\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.auto_attr\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">auto_attr</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.auto_attr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator to create OneTimeProperty attributes.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>func</strong> : method</p>\n<blockquote class=\"last\">\n<div><p>The method that will be called the first time to compute a value.\nAfterwards, the method&#8217;s name will be a standard attribute holding the\nvalue of this computation.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MagicProp</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"mi\">99</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">MagicProp</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span>\n<span class=\"go\">99</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bootstrap-data-array\">\n<h3>bootstrap_data_array<a class=\"headerlink\" href=\"#bootstrap-data-array\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.bootstrap_data_array\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">bootstrap_data_array</code><span class=\"sig-paren\">(</span><em>data</em>, <em>H</em>, <em>R</em>, <em>permute=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.bootstrap_data_array\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies the Residual Bootstraps to the data given H and R</p>\n<p>data must be normalized, ie 0 &lt; data &lt;= 1</p>\n<p>This function, and the bootstrap_data_voxel function, calculate\nresidual-bootsrap samples given a Hat matrix and a Residual matrix. These\nsamples can be used for non-parametric statistics or for bootstrap\nprobabilistic tractography:</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r373\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id594\">[R373]</a></td><td>J. I. Berman, et al., &#8220;Probabilistic streamline q-ball tractography\nusing the residual bootstrap&#8221; 2008.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r374\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id595\">[R374]</a></td><td>HA Haroon, et al., &#8220;Using the model-based residual bootstrap to\nquantify uncertainty in fiber orientations from Q-ball analysis&#8221;\n2009.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r375\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id596\">[R375]</a></td><td>B. Jeurissen, et al., &#8220;Probabilistic Fiber Tracking Using the\nResidual Bootstrap with Constrained Spherical Deconvolution&#8221; 2011.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bootstrap-data-voxel\">\n<h3>bootstrap_data_voxel<a class=\"headerlink\" href=\"#bootstrap-data-voxel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.bootstrap_data_voxel\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">bootstrap_data_voxel</code><span class=\"sig-paren\">(</span><em>data</em>, <em>H</em>, <em>R</em>, <em>permute=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.bootstrap_data_voxel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Like bootstrap_data_array but faster when for a single voxel</p>\n<p>data must be 1d and normalized</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"calculate-max-order\">\n<h3>calculate_max_order<a class=\"headerlink\" href=\"#calculate-max-order\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.calculate_max_order\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">calculate_max_order</code><span class=\"sig-paren\">(</span><em>n_coeffs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.calculate_max_order\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>Calculate the maximal harmonic order, given that you know the</dt>\n<dd>number of parameters that were estimated.</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n_coeffs</strong> : int</p>\n<blockquote>\n<div><p>The number of SH coefficients</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>L</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>The maximal SH order, given the number of coefficients</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p>rac{1}{2} (L+1) (L+2)</p>\n<p>arrow 2n = L^2 + 3L + 2</p>\n<p>arrow L^2 + 3L + 2 - 2n = 0</p>\n<p>arrow L^2 + 3L + 2(1-n) = 0</p>\n<p>arrow L_{1,2} = \nrac{-3 pm sqrt{9 - 8 (1-n)}}{2}</p>\n<p>arrow L{1,2} = \nrac{-3 pm sqrt{1 + 8n}}{2}</p>\n<blockquote>\n<div>Finally, the positive value is chosen between the two options.</div></blockquote>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id597\">\n<h3>cart2sphere<a class=\"headerlink\" href=\"#id597\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.cart2sphere\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">cart2sphere</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.cart2sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></p>\n<p>See doc for <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> for angle conventions and derivation\nof the formulae.</p>\n<p><span class=\"math\">\\(0\\le\\theta\\mathrm{(theta)}\\le\\pi\\)</span> and <span class=\"math\">\\(-\\pi\\le\\phi\\mathrm{(phi)}\\le\\pi\\)</span></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>x coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>y</strong> : array_like</p>\n<blockquote>\n<div><p>y coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array_like</p>\n<blockquote>\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> : array</p>\n<blockquote>\n<div><p>radius</p>\n</div></blockquote>\n<p><strong>theta</strong> : array</p>\n<blockquote>\n<div><p>inclination (polar) angle</p>\n</div></blockquote>\n<p><strong>phi</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>azimuth angle</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"concatenate\">\n<h3>concatenate<a class=\"headerlink\" href=\"#concatenate\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.concatenate\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">concatenate</code><span class=\"sig-paren\">(</span><em>(a1</em>, <em>a2</em>, <em>...)</em>, <em>axis=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.concatenate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Join a sequence of arrays along an existing axis.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a1, a2, ...</strong> : sequence of array_like</p>\n<blockquote>\n<div><p>The arrays must have the same shape, except in the dimension\ncorresponding to <cite>axis</cite> (the first, by default).</p>\n</div></blockquote>\n<p><strong>axis</strong> : int, optional</p>\n<blockquote>\n<div><p>The axis along which the arrays will be joined.  Default is 0.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>res</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The concatenated array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ma.concatenate</span></code></dt>\n<dd>Concatenate function that preserves input masks.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">array_split</span></code></dt>\n<dd>Split an array into multiple sub-arrays of equal or near-equal size.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">split</span></code></dt>\n<dd>Split array into a list of multiple sub-arrays of equal size.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">hsplit</span></code></dt>\n<dd>Split array into multiple sub-arrays horizontally (column wise)</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vsplit</span></code></dt>\n<dd>Split array into multiple sub-arrays vertically (row wise)</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dsplit</span></code></dt>\n<dd>Split array into multiple sub-arrays along the 3rd axis (depth).</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">stack</span></code></dt>\n<dd>Stack a sequence of arrays along a new axis.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">hstack</span></code></dt>\n<dd>Stack arrays in sequence horizontally (column wise)</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vstack</span></code></dt>\n<dd>Stack arrays in sequence vertically (row wise)</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dstack</span></code></dt>\n<dd>Stack arrays in sequence depth wise (along third dimension)</dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>When one or more of the arrays to be concatenated is a MaskedArray,\nthis function will return a MaskedArray object instead of an ndarray,\nbut the input masks are <em>not</em> preserved. In cases where a MaskedArray\nis expected as input, use the ma.concatenate function from the masked\narray module instead.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">((</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">),</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">array([[1, 2],</span>\n<span class=\"go\">       [3, 4],</span>\n<span class=\"go\">       [5, 6]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">((</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">),</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([[1, 2, 5],</span>\n<span class=\"go\">       [3, 4, 6]])</span>\n</pre></div>\n</div>\n<p>This function will not preserve masking of MaskedArray inputs.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ma</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ma</span><span class=\"o\">.</span><span class=\"n\">masked</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span>\n<span class=\"go\">masked_array(data = [0 -- 2],</span>\n<span class=\"go\">             mask = [False  True False],</span>\n<span class=\"go\">       fill_value = 999999)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span>\n<span class=\"go\">array([2, 3, 4])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">([</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">])</span>\n<span class=\"go\">masked_array(data = [0 1 2 2 3 4],</span>\n<span class=\"go\">             mask = False,</span>\n<span class=\"go\">       fill_value = 999999)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ma</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">([</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">])</span>\n<span class=\"go\">masked_array(data = [0 -- 2 2 3 4],</span>\n<span class=\"go\">             mask = [False  True False False False False],</span>\n<span class=\"go\">       fill_value = 999999)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"diag\">\n<h3>diag<a class=\"headerlink\" href=\"#diag\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.diag\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">diag</code><span class=\"sig-paren\">(</span><em>v</em>, <em>k=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.diag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extract a diagonal or construct a diagonal array.</p>\n<p>See the more detailed documentation for <code class=\"docutils literal\"><span class=\"pre\">numpy.diagonal</span></code> if you use this\nfunction to extract a diagonal and wish to write to the resulting array;\nwhether it returns a copy or a view depends on what version of numpy you\nare using.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>v</strong> : array_like</p>\n<blockquote>\n<div><p>If <cite>v</cite> is a 2-D array, return a copy of its <cite>k</cite>-th diagonal.\nIf <cite>v</cite> is a 1-D array, return a 2-D array with <cite>v</cite> on the <cite>k</cite>-th\ndiagonal.</p>\n</div></blockquote>\n<p><strong>k</strong> : int, optional</p>\n<blockquote>\n<div><p>Diagonal in question. The default is 0. Use <cite>k&gt;0</cite> for diagonals\nabove the main diagonal, and <cite>k&lt;0</cite> for diagonals below the main\ndiagonal.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>out</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The extracted diagonal or constructed diagonal array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">diagonal</span></code></dt>\n<dd>Return specified diagonals.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">diagflat</span></code></dt>\n<dd>Create a 2-D array with the flattened input as a diagonal.</dd>\n<dt><a class=\"reference external\" href=\"https://docs.python.org/2/library/trace.html#module-trace\" title=\"(in Python v2.7)\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">trace</span></code></a></dt>\n<dd>Sum along diagonals.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">triu</span></code></dt>\n<dd>Upper triangle of an array.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">tril</span></code></dt>\n<dd>Lower triangle of an array.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span>\n<span class=\"go\">array([[0, 1, 2],</span>\n<span class=\"go\">       [3, 4, 5],</span>\n<span class=\"go\">       [6, 7, 8]])</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">array([0, 4, 8])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([1, 5])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([3, 7])</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"go\">array([[0, 0, 0],</span>\n<span class=\"go\">       [0, 4, 0],</span>\n<span class=\"go\">       [0, 0, 8]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"diff\">\n<h3>diff<a class=\"headerlink\" href=\"#diff\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.diff\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">diff</code><span class=\"sig-paren\">(</span><em>a</em>, <em>n=1</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.diff\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the n-th discrete difference along given axis.</p>\n<p>The first difference is given by <code class=\"docutils literal\"><span class=\"pre\">out[n]</span> <span class=\"pre\">=</span> <span class=\"pre\">a[n+1]</span> <span class=\"pre\">-</span> <span class=\"pre\">a[n]</span></code> along\nthe given axis, higher differences are calculated by using <cite>diff</cite>\nrecursively.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a</strong> : array_like</p>\n<blockquote>\n<div><p>Input array</p>\n</div></blockquote>\n<p><strong>n</strong> : int, optional</p>\n<blockquote>\n<div><p>The number of times values are differenced.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int, optional</p>\n<blockquote>\n<div><p>The axis along which the difference is taken, default is the last axis.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>diff</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The n-th differences. The shape of the output is the same as <cite>a</cite>\nexcept along <cite>axis</cite> where the dimension is smaller by <cite>n</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gradient</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ediff1d</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cumsum</span></code></p>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diff</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1,  2,  3, -7])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diff</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">array([  1,   1, -10])</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diff</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">array([[2, 3, 4],</span>\n<span class=\"go\">       [5, 1, 2]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diff</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">array([[-1,  2,  0, -2]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dot\">\n<h3>dot<a class=\"headerlink\" href=\"#dot\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.dot\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">dot</code><span class=\"sig-paren\">(</span><em>a</em>, <em>b</em>, <em>out=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.dot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Dot product of two arrays.</p>\n<p>For 2-D arrays it is equivalent to matrix multiplication, and for 1-D\narrays to inner product of vectors (without complex conjugation). For\nN dimensions it is a sum product over the last axis of <cite>a</cite> and\nthe second-to-last of <cite>b</cite>:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">,</span><span class=\"n\">k</span><span class=\"p\">,</span><span class=\"n\">m</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">,:]</span> <span class=\"o\">*</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">,:,</span><span class=\"n\">m</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a</strong> : array_like</p>\n<blockquote>\n<div><p>First argument.</p>\n</div></blockquote>\n<p><strong>b</strong> : array_like</p>\n<blockquote>\n<div><p>Second argument.</p>\n</div></blockquote>\n<p><strong>out</strong> : ndarray, optional</p>\n<blockquote>\n<div><p>Output argument. This must have the exact kind that would be returned\nif it was not used. In particular, it must have the right type, must be\nC-contiguous, and its dtype must be the dtype that would be returned\nfor <cite>dot(a,b)</cite>. This is a performance feature. Therefore, if these\nconditions are not met, an exception is raised, instead of attempting\nto be flexible.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>output</strong> : ndarray</p>\n<blockquote>\n<div><p>Returns the dot product of <cite>a</cite> and <cite>b</cite>.  If <cite>a</cite> and <cite>b</cite> are both\nscalars or both 1-D arrays then a scalar is returned; otherwise\nan array is returned.\nIf <cite>out</cite> is given, then it is returned.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>ValueError</strong> :</p>\n<blockquote class=\"last\">\n<div><p>If the last dimension of <cite>a</cite> is not the same size as\nthe second-to-last dimension of <cite>b</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vdot</span></code></dt>\n<dd>Complex-conjugating dot product.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">tensordot</span></code></dt>\n<dd>Sum products over arbitrary axes.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">einsum</span></code></dt>\n<dd>Einstein summation convention.</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">matmul</span></code></dt>\n<dd>&#8216;&#64;&#8217; operator as method with out parameter.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">12</span>\n</pre></div>\n</div>\n<p>Neither argument is complex-conjugated:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"n\">j</span><span class=\"p\">])</span>\n<span class=\"go\">(-13+0j)</span>\n</pre></div>\n</div>\n<p>For 2-D arrays it is the matrix product:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"go\">array([[4, 1],</span>\n<span class=\"go\">       [2, 2]])</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"mi\">5</span><span class=\"o\">*</span><span class=\"mi\">6</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"mi\">5</span><span class=\"o\">*</span><span class=\"mi\">6</span><span class=\"p\">)[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"go\">499128</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,:]</span> <span class=\"o\">*</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,:,</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"go\">499128</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"empty\">\n<h3>empty<a class=\"headerlink\" href=\"#empty\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.empty\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">empty</code><span class=\"sig-paren\">(</span><em>shape</em>, <em>dtype=float</em>, <em>order='C'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.empty\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a new array of given shape and type, without initializing entries.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape</strong> : int or tuple of int</p>\n<blockquote>\n<div><p>Shape of the empty array</p>\n</div></blockquote>\n<p><strong>dtype</strong> : data-type, optional</p>\n<blockquote>\n<div><p>Desired output data-type.</p>\n</div></blockquote>\n<p><strong>order</strong> : {&#8216;C&#8217;, &#8216;F&#8217;}, optional</p>\n<blockquote>\n<div><p>Whether to store multi-dimensional data in row-major\n(C-style) or column-major (Fortran-style) order in\nmemory.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>out</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Array of uninitialized (arbitrary) data of the given shape, dtype, and\norder.  Object arrays will be initialized to None.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">empty_like</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">zeros</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ones</span></code></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p><cite>empty</cite>, unlike <cite>zeros</cite>, does not set the array values to zero,\nand may therefore be marginally faster.  On the other hand, it requires\nthe user to manually set all the values in the array, and should be\nused with caution.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"go\">array([[ -9.74499359e+001,   6.69583040e-309],</span>\n<span class=\"go\">       [  2.13182611e-314,   3.06959433e-309]])         #random</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"go\">array([[-1073741821, -1067949133],</span>\n<span class=\"go\">       [  496041986,    19249760]])                     #random</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"eye\">\n<h3>eye<a class=\"headerlink\" href=\"#eye\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.eye\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">eye</code><span class=\"sig-paren\">(</span><em>N</em>, <em>M=None</em>, <em>k=0</em>, <em>dtype=&lt;class 'float'&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.eye\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return a 2-D array with ones on the diagonal and zeros elsewhere.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>N</strong> : int</p>\n<blockquote>\n<div><p>Number of rows in the output.</p>\n</div></blockquote>\n<p><strong>M</strong> : int, optional</p>\n<blockquote>\n<div><p>Number of columns in the output. If None, defaults to <cite>N</cite>.</p>\n</div></blockquote>\n<p><strong>k</strong> : int, optional</p>\n<blockquote>\n<div><p>Index of the diagonal: 0 (the default) refers to the main diagonal,\na positive value refers to an upper diagonal, and a negative value\nto a lower diagonal.</p>\n</div></blockquote>\n<p><strong>dtype</strong> : data-type, optional</p>\n<blockquote>\n<div><p>Data-type of the returned array.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>I</strong> : ndarray of shape (N,M)</p>\n<blockquote class=\"last\">\n<div><p>An array where all elements are equal to zero, except for the <cite>k</cite>-th\ndiagonal, whose values are equal to one.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">identity</span></code></dt>\n<dd>(almost) equivalent function</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.reconst.shm.diag\" title=\"dipy.reconst.shm.diag\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">diag</span></code></a></dt>\n<dd>diagonal 2-D array from a 1-D array specified by the user.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"go\">array([[1, 0],</span>\n<span class=\"go\">       [0, 1]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 0.,  1.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id598\">\n<h3>forward_sdeconv_mat<a class=\"headerlink\" href=\"#id598\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.forward_sdeconv_mat\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">forward_sdeconv_mat</code><span class=\"sig-paren\">(</span><em>r_rh</em>, <em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.forward_sdeconv_mat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Build forward spherical deconvolution matrix</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>r_rh</strong> : ndarray</p>\n<blockquote>\n<div><p>Rotational harmonics coefficients for the single fiber response\nfunction. Each element <cite>rh[i]</cite> is associated with spherical harmonics\nof degree <cite>2*i</cite>.</p>\n</div></blockquote>\n<p><strong>n</strong> : ndarray</p>\n<blockquote>\n<div><p>The degree of spherical harmonic function associated with each row of\nthe deconvolution matrix. Only even degrees are allowed</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>R</strong> : ndarray (N, N)</p>\n<blockquote class=\"last\">\n<div><p>Deconvolution matrix with shape (N, N)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gammaln\">\n<h3>gammaln<a class=\"headerlink\" href=\"#gammaln\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.gammaln\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">gammaln</code><span class=\"sig-paren\">(</span><em>x</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.gammaln\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Logarithm of the absolute value of the Gamma function for real inputs.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array-like</p>\n<blockquote>\n<div><p>Values on the real line at which to compute <code class=\"docutils literal\"><span class=\"pre\">gammaln</span></code></p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>gammaln</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Values of <code class=\"docutils literal\"><span class=\"pre\">gammaln</span></code> at x.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gammasgn</span></code></dt>\n<dd>sign of the gamma function</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">loggamma</span></code></dt>\n<dd>principal branch of the logarithm of the gamma function</dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>When used in conjunction with <cite>gammasgn</cite>, this function is useful\nfor working in logspace on the real axis without having to deal with\ncomplex numbers, via the relation <code class=\"docutils literal\"><span class=\"pre\">exp(gammaln(x))</span> <span class=\"pre\">=</span> <span class=\"pre\">gammasgn(x)*gamma(x)</span></code>.</p>\n<p>Note that <cite>gammaln</cite> currently accepts complex-valued inputs, but it is not\nthe same function as for real-valued inputs, and the branch is not\nwell-defined &#8212; using <cite>gammaln</cite> with complex is deprecated and will be\ndisallowed in future Scipy versions.</p>\n<p>For complex-valued log-gamma, use <cite>loggamma</cite> instead of <cite>gammaln</cite>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gen-dirac\">\n<h3>gen_dirac<a class=\"headerlink\" href=\"#gen-dirac\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.gen_dirac\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">gen_dirac</code><span class=\"sig-paren\">(</span><em>m</em>, <em>n</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.gen_dirac\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate Dirac delta function orientated in (theta, phi) on the sphere</p>\n<p>The spherical harmonics (SH) representation of this Dirac is returned as\ncoefficients to spherical harmonic functions produced by\n<cite>shm.real_sph_harm</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>m</strong> : ndarray (N,)</p>\n<blockquote>\n<div><p>The order of the spherical harmonic function associated with each\ncoefficient.</p>\n</div></blockquote>\n<p><strong>n</strong> : ndarray (N,)</p>\n<blockquote>\n<div><p>The degree of the spherical harmonic function associated with each\ncoefficient.</p>\n</div></blockquote>\n<p><strong>theta</strong> : float [0, 2*pi]</p>\n<blockquote>\n<div><p>The azimuthal (longitudinal) coordinate.</p>\n</div></blockquote>\n<p><strong>phi</strong> : float [0, pi]</p>\n<blockquote>\n<div><p>The polar (colatitudinal) coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>dirac</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>SH coefficients representing the Dirac function. The shape of this is\n<cite>(m + 2) * (m + 1) / 2</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shm.real_sph_harm</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shm.real_sym_sh_basis</span></code></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"hat\">\n<h3>hat<a class=\"headerlink\" href=\"#hat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.hat\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">hat</code><span class=\"sig-paren\">(</span><em>B</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.hat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the hat matrix for the design matrix B</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id599\">\n<h3>lazy_index<a class=\"headerlink\" href=\"#id599\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.lazy_index\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">lazy_index</code><span class=\"sig-paren\">(</span><em>index</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.lazy_index\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Produces a lazy index</p>\n<p>Returns a slice that can be used for indexing an array, if no slice can be\nmade index is returned as is.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"lcr-matrix\">\n<h3>lcr_matrix<a class=\"headerlink\" href=\"#lcr-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.lcr_matrix\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">lcr_matrix</code><span class=\"sig-paren\">(</span><em>H</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.lcr_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a matrix for computing leveraged, centered residuals from data</p>\n<p>if r = (d-Hd), the leveraged centered residuals are lcr = (r/l)-mean(r/l)\nruturns the matrix R, such lcr = Rd</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id600\">\n<h3>lpn<a class=\"headerlink\" href=\"#id600\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.lpn\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">lpn</code><span class=\"sig-paren\">(</span><em>n</em>, <em>z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.lpn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Legendre function of the first kind.</p>\n<p>Compute sequence of Legendre functions of the first kind (polynomials),\nPn(z) and derivatives for all degrees from 0 to n (inclusive).</p>\n<p>See also special.legendre for polynomial class.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r376\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id601\">[R376]</a></td><td>Zhang, Shanjie and Jin, Jianming. &#8220;Computation of Special\nFunctions&#8221;, John Wiley and Sons, 1996.\n<a class=\"reference external\" href=\"http://jin.ece.illinois.edu/specfunc.html\">http://jin.ece.illinois.edu/specfunc.html</a></td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"normalize-data\">\n<h3>normalize_data<a class=\"headerlink\" href=\"#normalize-data\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.normalize_data\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">normalize_data</code><span class=\"sig-paren\">(</span><em>data</em>, <em>where_b0</em>, <em>min_signal=1.0</em>, <em>out=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.normalize_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Normalizes the data with respect to the mean b0</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"order-from-ncoef\">\n<h3>order_from_ncoef<a class=\"headerlink\" href=\"#order-from-ncoef\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.order_from_ncoef\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">order_from_ncoef</code><span class=\"sig-paren\">(</span><em>ncoef</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.order_from_ncoef\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a number n of coefficients, calculate back the sh_order</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id602\">\n<h3>pinv<a class=\"headerlink\" href=\"#id602\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.pinv\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">pinv</code><span class=\"sig-paren\">(</span><em>a</em>, <em>rcond=1e-15</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.pinv\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the (Moore-Penrose) pseudo-inverse of a matrix.</p>\n<p>Calculate the generalized inverse of a matrix using its\nsingular-value decomposition (SVD) and including all\n<em>large</em> singular values.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a</strong> : (M, N) array_like</p>\n<blockquote>\n<div><p>Matrix to be pseudo-inverted.</p>\n</div></blockquote>\n<p><strong>rcond</strong> : float</p>\n<blockquote>\n<div><p>Cutoff for small singular values.\nSingular values smaller (in modulus) than\n<cite>rcond</cite> * largest_singular_value (again, in modulus)\nare set to zero.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>B</strong> : (N, M) ndarray</p>\n<blockquote>\n<div><p>The pseudo-inverse of <cite>a</cite>. If <cite>a</cite> is a <cite>matrix</cite> instance, then so\nis <cite>B</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>LinAlgError</strong> :</p>\n<blockquote class=\"last\">\n<div><p>If the SVD computation does not converge.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The pseudo-inverse of a matrix A, denoted <span class=\"math\">\\(A^+\\)</span>, is\ndefined as: &#8220;the matrix that &#8216;solves&#8217; [the least-squares problem]\n<span class=\"math\">\\(Ax = b\\)</span>,&#8221; i.e., if <span class=\"math\">\\(\\bar{x}\\)</span> is said solution, then\n<span class=\"math\">\\(A^+\\)</span> is that matrix such that <span class=\"math\">\\(\\bar{x} = A^+b\\)</span>.</p>\n<p>It can be shown that if <span class=\"math\">\\(Q_1 \\Sigma Q_2^T = A\\)</span> is the singular\nvalue decomposition of A, then\n<span class=\"math\">\\(A^+ = Q_2 \\Sigma^+ Q_1^T\\)</span>, where <span class=\"math\">\\(Q_{1,2}\\)</span> are\northogonal matrices, <span class=\"math\">\\(\\Sigma\\)</span> is a diagonal matrix consisting\nof A&#8217;s so-called singular values, (followed, typically, by\nzeros), and then <span class=\"math\">\\(\\Sigma^+\\)</span> is simply the diagonal matrix\nconsisting of the reciprocals of A&#8217;s singular values\n(again, followed by zeros). <a class=\"reference internal\" href=\"#r377\" id=\"id603\">[R377]</a></p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r377\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R377]</td><td><em>(<a class=\"fn-backref\" href=\"#id603\">1</a>, <a class=\"fn-backref\" href=\"#id604\">2</a>)</em> G. Strang, <em>Linear Algebra and Its Applications</em>, 2nd Ed., Orlando,\nFL, Academic Press, Inc., 1980, pp. 139-142.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<p>The following example checks that <code class=\"docutils literal\"><span class=\"pre\">a</span> <span class=\"pre\">*</span> <span class=\"pre\">a+</span> <span class=\"pre\">*</span> <span class=\"pre\">a</span> <span class=\"pre\">==</span> <span class=\"pre\">a</span></code> and\n<code class=\"docutils literal\"><span class=\"pre\">a+</span> <span class=\"pre\">*</span> <span class=\"pre\">a</span> <span class=\"pre\">*</span> <span class=\"pre\">a+</span> <span class=\"pre\">==</span> <span class=\"pre\">a+</span></code>:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">pinv</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">)))</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">)))</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"randint\">\n<h3>randint<a class=\"headerlink\" href=\"#randint\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.randint\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">randint</code><span class=\"sig-paren\">(</span><em>low</em>, <em>high=None</em>, <em>size=None</em>, <em>dtype='l'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.randint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return random integers from <cite>low</cite> (inclusive) to <cite>high</cite> (exclusive).</p>\n<p>Return random integers from the &#8220;discrete uniform&#8221; distribution of\nthe specified dtype in the &#8220;half-open&#8221; interval [<cite>low</cite>, <cite>high</cite>). If\n<cite>high</cite> is None (the default), then results are from [0, <cite>low</cite>).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>low</strong> : int</p>\n<blockquote>\n<div><p>Lowest (signed) integer to be drawn from the distribution (unless\n<code class=\"docutils literal\"><span class=\"pre\">high=None</span></code>, in which case this parameter is one above the\n<em>highest</em> such integer).</p>\n</div></blockquote>\n<p><strong>high</strong> : int, optional</p>\n<blockquote>\n<div><p>If provided, one above the largest (signed) integer to be drawn\nfrom the distribution (see above for behavior if <code class=\"docutils literal\"><span class=\"pre\">high=None</span></code>).</p>\n</div></blockquote>\n<p><strong>size</strong> : int or tuple of ints, optional</p>\n<blockquote>\n<div><p>Output shape.  If the given shape is, e.g., <code class=\"docutils literal\"><span class=\"pre\">(m,</span> <span class=\"pre\">n,</span> <span class=\"pre\">k)</span></code>, then\n<code class=\"docutils literal\"><span class=\"pre\">m</span> <span class=\"pre\">*</span> <span class=\"pre\">n</span> <span class=\"pre\">*</span> <span class=\"pre\">k</span></code> samples are drawn.  Default is None, in which case a\nsingle value is returned.</p>\n</div></blockquote>\n<p><strong>dtype</strong> : dtype, optional</p>\n<blockquote>\n<div><p>Desired dtype of the result. All dtypes are determined by their\nname, i.e., &#8216;int64&#8217;, &#8216;int&#8217;, etc, so byteorder is not available\nand a specific precision may have different C types depending\non the platform. The default value is &#8216;np.int&#8217;.</p>\n<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 1.11.0.</span></p>\n</div>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>out</strong> : int or ndarray of ints</p>\n<blockquote class=\"last\">\n<div><p><cite>size</cite>-shaped array of random integers from the appropriate\ndistribution, or a single such random int if <cite>size</cite> not provided.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">random.random_integers</span></code></dt>\n<dd>similar to <cite>randint</cite>, only for the closed interval [<cite>low</cite>, <cite>high</cite>], and 1 is the lowest value if <cite>high</cite> is omitted. In particular, this other one is the one to use to generate uniformly distributed discrete non-integers.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"go\">array([1, 0, 0, 0, 1, 1, 0, 0, 1, 0])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"go\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</span>\n</pre></div>\n</div>\n<p>Generate a 2 x 4 array of ints between 0 and 4, inclusive:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"go\">array([[4, 0, 2, 1],</span>\n<span class=\"go\">       [3, 2, 2, 0]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id605\">\n<h3>real_sph_harm<a class=\"headerlink\" href=\"#id605\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.real_sph_harm\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">real_sph_harm</code><span class=\"sig-paren\">(</span><em>m</em>, <em>n</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.real_sph_harm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute real spherical harmonics.</p>\n<p>Where the real harmonic <span class=\"math\">\\(Y^m_n\\)</span> is defined to be:</p>\n<blockquote>\n<div>Imag(<span class=\"math\">\\(Y^m_n\\)</span>) * sqrt(2)     if m &gt; 0\n<span class=\"math\">\\(Y^0_n\\)</span>                     if m = 0\nReal(<span class=\"math\">\\(Y^|m|_n\\)</span>) * sqrt(2)   if m &lt; 0</div></blockquote>\n<p>This may take scalar or array arguments. The inputs will be broadcasted\nagainst each other.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>m</strong> : int <code class=\"docutils literal\"><span class=\"pre\">|m|</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">n</span></code></p>\n<blockquote>\n<div><p>The order of the harmonic.</p>\n</div></blockquote>\n<p><strong>n</strong> : int <code class=\"docutils literal\"><span class=\"pre\">&gt;=</span> <span class=\"pre\">0</span></code></p>\n<blockquote>\n<div><p>The degree of the harmonic.</p>\n</div></blockquote>\n<p><strong>theta</strong> : float [0, 2*pi]</p>\n<blockquote>\n<div><p>The azimuthal (longitudinal) coordinate.</p>\n</div></blockquote>\n<p><strong>phi</strong> : float [0, pi]</p>\n<blockquote>\n<div><p>The polar (colatitudinal) coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y_mn</strong> : real float</p>\n<blockquote class=\"last\">\n<div><p>The real harmonic <span class=\"math\">\\(Y^m_n\\)</span> sampled at <cite>theta</cite> and <cite>phi</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">scipy.special.sph_harm</span></code></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id606\">\n<h3>real_sym_sh_basis<a class=\"headerlink\" href=\"#id606\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.real_sym_sh_basis\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">real_sym_sh_basis</code><span class=\"sig-paren\">(</span><em>sh_order</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.real_sym_sh_basis\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Samples a real symmetric spherical harmonic basis at point on the sphere</p>\n<p>Samples the basis functions up to order <cite>sh_order</cite> at points on the sphere\ngiven by <cite>theta</cite> and <cite>phi</cite>. The basis functions are defined here the same\nway as in fibernavigator <a class=\"reference internal\" href=\"#r378\" id=\"id607\">[R378]</a> where the real harmonic <span class=\"math\">\\(Y^m_n\\)</span> is defined to\nbe:</p>\n<blockquote>\n<div>Imag(<span class=\"math\">\\(Y^m_n\\)</span>) * sqrt(2)     if m &gt; 0\n<span class=\"math\">\\(Y^0_n\\)</span>                     if m = 0\nReal(<span class=\"math\">\\(Y^|m|_n\\)</span>) * sqrt(2)   if m &lt; 0</div></blockquote>\n<p>This may take scalar or array arguments. The inputs will be broadcasted\nagainst each other.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sh_order</strong> : int</p>\n<blockquote>\n<div><p>even int &gt; 0, max spherical harmonic degree</p>\n</div></blockquote>\n<p><strong>theta</strong> : float [0, 2*pi]</p>\n<blockquote>\n<div><p>The azimuthal (longitudinal) coordinate.</p>\n</div></blockquote>\n<p><strong>phi</strong> : float [0, pi]</p>\n<blockquote>\n<div><p>The polar (colatitudinal) coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y_mn</strong> : real float</p>\n<blockquote>\n<div><p>The real harmonic <span class=\"math\">\\(Y^m_n\\)</span> sampled at <cite>theta</cite> and <cite>phi</cite></p>\n</div></blockquote>\n<p><strong>m</strong> : array</p>\n<blockquote>\n<div><p>The order of the harmonics.</p>\n</div></blockquote>\n<p><strong>n</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>The degree of the harmonics.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r378\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R378]</td><td><em>(<a class=\"fn-backref\" href=\"#id607\">1</a>, <a class=\"fn-backref\" href=\"#id608\">2</a>)</em> <a class=\"reference external\" href=\"https://github.com/scilus/fibernavigator\">https://github.com/scilus/fibernavigator</a></td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"real-sym-sh-mrtrix\">\n<h3>real_sym_sh_mrtrix<a class=\"headerlink\" href=\"#real-sym-sh-mrtrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.real_sym_sh_mrtrix\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">real_sym_sh_mrtrix</code><span class=\"sig-paren\">(</span><em>sh_order</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.real_sym_sh_mrtrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute real spherical harmonics as in mrtrix, where the real harmonic\n<span class=\"math\">\\(Y^m_n\\)</span> is defined to be:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span>Real(:math:`Y^m_n`)       if m &gt; 0\n:math:`Y^0_n`             if m = 0\nImag(:math:`Y^|m|_n`)     if m &lt; 0\n</pre></div>\n</div>\n<p>This may take scalar or array arguments. The inputs will be broadcasted\nagainst each other.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sh_order</strong> : int</p>\n<blockquote>\n<div><p>The maximum degree or the spherical harmonic basis.</p>\n</div></blockquote>\n<p><strong>theta</strong> : float [0, pi]</p>\n<blockquote>\n<div><p>The polar (colatitudinal) coordinate.</p>\n</div></blockquote>\n<p><strong>phi</strong> : float [0, 2*pi]</p>\n<blockquote>\n<div><p>The azimuthal (longitudinal) coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y_mn</strong> : real float</p>\n<blockquote>\n<div><p>The real harmonic <span class=\"math\">\\(Y^m_n\\)</span> sampled at <cite>theta</cite> and <cite>phi</cite> as\nimplemented in mrtrix.  Warning: the basis is Tournier et al\n2004 and 2007 is slightly different.</p>\n</div></blockquote>\n<p><strong>m</strong> : array</p>\n<blockquote>\n<div><p>The order of the harmonics.</p>\n</div></blockquote>\n<p><strong>n</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>The degree of the harmonics.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sf-to-sh\">\n<h3>sf_to_sh<a class=\"headerlink\" href=\"#sf-to-sh\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.sf_to_sh\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">sf_to_sh</code><span class=\"sig-paren\">(</span><em>sf</em>, <em>sphere</em>, <em>sh_order=4</em>, <em>basis_type=None</em>, <em>smooth=0.0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.sf_to_sh\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical function to spherical harmonics (SH).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sf</strong> : ndarray</p>\n<blockquote>\n<div><p>Values of a function on the given <cite>sphere</cite>.</p>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>The points on which the sf is defined.</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int, optional</p>\n<blockquote>\n<div><p>Maximum SH order in the SH fit.  For <cite>sh_order</cite>, there will be\n<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order_2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients (default 4).</p>\n</div></blockquote>\n<p><strong>basis_type</strong> : {None, &#8216;mrtrix&#8217;, &#8216;fibernav&#8217;}</p>\n<blockquote>\n<div><p><code class=\"docutils literal\"><span class=\"pre\">None</span></code> for the default dipy basis,\n<code class=\"docutils literal\"><span class=\"pre\">mrtrix</span></code> for the MRtrix basis, and\n<code class=\"docutils literal\"><span class=\"pre\">fibernav</span></code> for the FiberNavigator basis\n(default <code class=\"docutils literal\"><span class=\"pre\">None</span></code>).</p>\n</div></blockquote>\n<p><strong>smooth</strong> : float, optional</p>\n<blockquote>\n<div><p>Lambda-regularization in the SH fit (default 0.0).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sh</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>SH coefficients representing the input function.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id609\">\n<h3>sh_to_rh<a class=\"headerlink\" href=\"#id609\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.sh_to_rh\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">sh_to_rh</code><span class=\"sig-paren\">(</span><em>r_sh</em>, <em>m</em>, <em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.sh_to_rh\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical harmonics (SH) to rotational harmonics (RH)</p>\n<p>Calculate the rotational harmonic decomposition up to\nharmonic order <cite>m</cite>, degree <cite>n</cite> for an axially and antipodally\nsymmetric function. Note that all <code class=\"docutils literal\"><span class=\"pre\">m</span> <span class=\"pre\">!=</span> <span class=\"pre\">0</span></code> coefficients\nwill be ignored as axial symmetry is assumed. Hence, there\nwill be <code class=\"docutils literal\"><span class=\"pre\">(sh_order/2</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span></code> non-zero coefficients.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>r_sh</strong> : ndarray (N,)</p>\n<blockquote>\n<div><p>ndarray of SH coefficients for the single fiber response function.\nThese coefficients must correspond to the real spherical harmonic\nfunctions produced by <cite>shm.real_sph_harm</cite>.</p>\n</div></blockquote>\n<p><strong>m</strong> : ndarray (N,)</p>\n<blockquote>\n<div><p>The order of the spherical harmonic function associated with each\ncoefficient.</p>\n</div></blockquote>\n<p><strong>n</strong> : ndarray (N,)</p>\n<blockquote>\n<div><p>The degree of the spherical harmonic function associated with each\ncoefficient.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>r_rh</strong> : ndarray (<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)*(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">2)/2</span></code>,)</p>\n<blockquote class=\"last\">\n<div><p>Rotational harmonics coefficients representing the input <cite>r_sh</cite></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shm.real_sph_harm</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shm.real_sym_sh_basis</span></code></p>\n</div>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r379\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id610\">[R379]</a></td><td>Tournier, J.D., et al. NeuroImage 2007. Robust determination of the\nfibre orientation distribution in diffusion MRI: Non-negativity\nconstrained super-resolved spherical deconvolution</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sh-to-sf\">\n<h3>sh_to_sf<a class=\"headerlink\" href=\"#sh-to-sf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.sh_to_sf\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">sh_to_sf</code><span class=\"sig-paren\">(</span><em>sh</em>, <em>sphere</em>, <em>sh_order</em>, <em>basis_type=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.sh_to_sf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical harmonics (SH) to spherical function (SF).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sh</strong> : ndarray</p>\n<blockquote>\n<div><p>SH coefficients representing a spherical function.</p>\n</div></blockquote>\n<p><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>The points on which to sample the spherical function.</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int, optional</p>\n<blockquote>\n<div><p>Maximum SH order in the SH fit.  For <cite>sh_order</cite>, there will be\n<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order_2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients (default 4).</p>\n</div></blockquote>\n<p><strong>basis_type</strong> : {None, &#8216;mrtrix&#8217;, &#8216;fibernav&#8217;}</p>\n<blockquote>\n<div><p><code class=\"docutils literal\"><span class=\"pre\">None</span></code> for the default dipy basis,\n<code class=\"docutils literal\"><span class=\"pre\">mrtrix</span></code> for the MRtrix basis, and\n<code class=\"docutils literal\"><span class=\"pre\">fibernav</span></code> for the FiberNavigator basis\n(default <code class=\"docutils literal\"><span class=\"pre\">None</span></code>).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>sf</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Spherical function values on the <cite>sphere</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id611\">\n<h3>sh_to_sf_matrix<a class=\"headerlink\" href=\"#id611\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.sh_to_sf_matrix\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">sh_to_sf_matrix</code><span class=\"sig-paren\">(</span><em>sphere</em>, <em>sh_order</em>, <em>basis_type=None</em>, <em>return_inv=True</em>, <em>smooth=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.sh_to_sf_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Matrix that transforms Spherical harmonics (SH) to spherical\nfunction (SF).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>The points on which to sample the spherical function.</p>\n</div></blockquote>\n<p><strong>sh_order</strong> : int, optional</p>\n<blockquote>\n<div><p>Maximum SH order in the SH fit.  For <cite>sh_order</cite>, there will be\n<code class=\"docutils literal\"><span class=\"pre\">(sh_order</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">*</span> <span class=\"pre\">(sh_order_2)</span> <span class=\"pre\">/</span> <span class=\"pre\">2</span></code> SH coefficients (default 4).</p>\n</div></blockquote>\n<p><strong>basis_type</strong> : {None, &#8216;mrtrix&#8217;, &#8216;fibernav&#8217;}</p>\n<blockquote>\n<div><p><code class=\"docutils literal\"><span class=\"pre\">None</span></code> for the default dipy basis,\n<code class=\"docutils literal\"><span class=\"pre\">mrtrix</span></code> for the MRtrix basis, and\n<code class=\"docutils literal\"><span class=\"pre\">fibernav</span></code> for the FiberNavigator basis\n(default <code class=\"docutils literal\"><span class=\"pre\">None</span></code>).</p>\n</div></blockquote>\n<p><strong>return_inv</strong> : bool</p>\n<blockquote>\n<div><p>If True then the inverse of the matrix is also returned</p>\n</div></blockquote>\n<p><strong>smooth</strong> : float, optional</p>\n<blockquote>\n<div><p>Lambda-regularization in the SH fit (default 0.0).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>B</strong> : ndarray</p>\n<blockquote>\n<div><p>Matrix that transforms spherical harmonics to spherical function\n<code class=\"docutils literal\"><span class=\"pre\">sf</span> <span class=\"pre\">=</span> <span class=\"pre\">np.dot(sh,</span> <span class=\"pre\">B)</span></code>.</p>\n</div></blockquote>\n<p><strong>invB</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Inverse of B.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"smooth-pinv\">\n<h3>smooth_pinv<a class=\"headerlink\" href=\"#smooth-pinv\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.smooth_pinv\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">smooth_pinv</code><span class=\"sig-paren\">(</span><em>B</em>, <em>L</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.smooth_pinv\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Regularized pseudo-inverse</p>\n<p>Computes a regularized least square inverse of B</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>B</strong> : array_like (n, m)</p>\n<blockquote>\n<div><p>Matrix to be inverted</p>\n</div></blockquote>\n<p><strong>L</strong> : array_like (n,)</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>inv</strong> : ndarray (m, n)</p>\n<blockquote class=\"last\">\n<div><p>regularized least square inverse of B</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>In the literature this inverse is often written <span class=\"math\">\\((B^{T}B+L^{2})^{-1}B^{T}\\)</span>.\nHowever here this inverse is implemented using the pseudo-inverse because\nit is more numerically stable than the direct implementation of the matrix\nproduct.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id612\">\n<h3>sph_harm_ind_list<a class=\"headerlink\" href=\"#id612\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.sph_harm_ind_list\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">sph_harm_ind_list</code><span class=\"sig-paren\">(</span><em>sh_order</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.sph_harm_ind_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the degree (n) and order (m) of all the symmetric spherical\nharmonics of degree less then or equal to <cite>sh_order</cite>. The results, <cite>m_list</cite>\nand <cite>n_list</cite> are kx1 arrays, where k depends on sh_order. They can be\npassed to <a class=\"reference internal\" href=\"#dipy.reconst.shm.real_sph_harm\" title=\"dipy.reconst.shm.real_sph_harm\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">real_sph_harm()</span></code></a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sh_order</strong> : int</p>\n<blockquote>\n<div><p>even int &gt; 0, max degree to return</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>m_list</strong> : array</p>\n<blockquote>\n<div><p>orders of even spherical harmonics</p>\n</div></blockquote>\n<p><strong>n_list</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>degrees of even spherical harmonics</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.reconst.shm.real_sph_harm\" title=\"dipy.reconst.shm.real_sph_harm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">real_sph_harm</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"spherical-harmonics\">\n<h3>spherical_harmonics<a class=\"headerlink\" href=\"#spherical-harmonics\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.spherical_harmonics\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">spherical_harmonics</code><span class=\"sig-paren\">(</span><em>m</em>, <em>n</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.spherical_harmonics\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute spherical harmonics</p>\n<p>This may take scalar or array arguments. The inputs will be broadcasted\nagainst each other.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>m</strong> : int <code class=\"docutils literal\"><span class=\"pre\">|m|</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">n</span></code></p>\n<blockquote>\n<div><p>The order of the harmonic.</p>\n</div></blockquote>\n<p><strong>n</strong> : int <code class=\"docutils literal\"><span class=\"pre\">&gt;=</span> <span class=\"pre\">0</span></code></p>\n<blockquote>\n<div><p>The degree of the harmonic.</p>\n</div></blockquote>\n<p><strong>theta</strong> : float [0, 2*pi]</p>\n<blockquote>\n<div><p>The azimuthal (longitudinal) coordinate.</p>\n</div></blockquote>\n<p><strong>phi</strong> : float [0, pi]</p>\n<blockquote>\n<div><p>The polar (colatitudinal) coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y_mn</strong> : complex float</p>\n<blockquote class=\"last\">\n<div><p>The harmonic <span class=\"math\">\\(Y^m_n\\)</span> sampled at <cite>theta</cite> and <cite>phi</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>This is a faster implementation of scipy.special.sph_harm for\nscipy version &lt; 0.15.0. For scipy 0.15 and onwards, we use the scipy\nimplementation of the function</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"svd\">\n<h3>svd<a class=\"headerlink\" href=\"#svd\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.svd\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">svd</code><span class=\"sig-paren\">(</span><em>a</em>, <em>full_matrices=1</em>, <em>compute_uv=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.svd\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Singular Value Decomposition.</p>\n<p>Factors the matrix <cite>a</cite> as <code class=\"docutils literal\"><span class=\"pre\">u</span> <span class=\"pre\">*</span> <span class=\"pre\">np.diag(s)</span> <span class=\"pre\">*</span> <span class=\"pre\">v</span></code>, where <cite>u</cite> and <cite>v</cite>\nare unitary and <cite>s</cite> is a 1-d array of <cite>a</cite>&#8216;s singular values.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a</strong> : (..., M, N) array_like</p>\n<blockquote>\n<div><p>A real or complex matrix of shape (<cite>M</cite>, <cite>N</cite>) .</p>\n</div></blockquote>\n<p><strong>full_matrices</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True (default), <cite>u</cite> and <cite>v</cite> have the shapes (<cite>M</cite>, <cite>M</cite>) and\n(<cite>N</cite>, <cite>N</cite>), respectively.  Otherwise, the shapes are (<cite>M</cite>, <cite>K</cite>)\nand (<cite>K</cite>, <cite>N</cite>), respectively, where <cite>K</cite> = min(<cite>M</cite>, <cite>N</cite>).</p>\n</div></blockquote>\n<p><strong>compute_uv</strong> : bool, optional</p>\n<blockquote>\n<div><p>Whether or not to compute <cite>u</cite> and <cite>v</cite> in addition to <cite>s</cite>.  True\nby default.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>u</strong> : { (..., M, M), (..., M, K) } array</p>\n<blockquote>\n<div><p>Unitary matrices. The actual shape depends on the value of\n<code class=\"docutils literal\"><span class=\"pre\">full_matrices</span></code>. Only returned when <code class=\"docutils literal\"><span class=\"pre\">compute_uv</span></code> is True.</p>\n</div></blockquote>\n<p><strong>s</strong> : (..., K) array</p>\n<blockquote>\n<div><p>The singular values for every matrix, sorted in descending order.</p>\n</div></blockquote>\n<p><strong>v</strong> : { (..., N, N), (..., K, N) } array</p>\n<blockquote>\n<div><p>Unitary matrices. The actual shape depends on the value of\n<code class=\"docutils literal\"><span class=\"pre\">full_matrices</span></code>. Only returned when <code class=\"docutils literal\"><span class=\"pre\">compute_uv</span></code> is True.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>LinAlgError</strong> :</p>\n<blockquote class=\"last\">\n<div><p>If SVD computation does not converge.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 1.8.0.</span></p>\n</div>\n<p>Broadcasting rules apply, see the <cite>numpy.linalg</cite> documentation for\ndetails.</p>\n<p>The decomposition is performed using LAPACK routine _gesdd</p>\n<p>The SVD is commonly written as <code class=\"docutils literal\"><span class=\"pre\">a</span> <span class=\"pre\">=</span> <span class=\"pre\">U</span> <span class=\"pre\">S</span> <span class=\"pre\">V.H</span></code>.  The <cite>v</cite> returned\nby this function is <code class=\"docutils literal\"><span class=\"pre\">V.H</span></code> and <code class=\"docutils literal\"><span class=\"pre\">u</span> <span class=\"pre\">=</span> <span class=\"pre\">U</span></code>.</p>\n<p>If <code class=\"docutils literal\"><span class=\"pre\">U</span></code> is a unitary matrix, it means that it\nsatisfies <code class=\"docutils literal\"><span class=\"pre\">U.H</span> <span class=\"pre\">=</span> <span class=\"pre\">inv(U)</span></code>.</p>\n<p>The rows of <cite>v</cite> are the eigenvectors of <code class=\"docutils literal\"><span class=\"pre\">a.H</span> <span class=\"pre\">a</span></code>. The columns\nof <cite>u</cite> are the eigenvectors of <code class=\"docutils literal\"><span class=\"pre\">a</span> <span class=\"pre\">a.H</span></code>.  For row <code class=\"docutils literal\"><span class=\"pre\">i</span></code> in\n<cite>v</cite> and column <code class=\"docutils literal\"><span class=\"pre\">i</span></code> in <cite>u</cite>, the corresponding eigenvalue is\n<code class=\"docutils literal\"><span class=\"pre\">s[i]**2</span></code>.</p>\n<p>If <cite>a</cite> is a <cite>matrix</cite> object (as opposed to an <cite>ndarray</cite>), then so\nare all the return values.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"n\">j</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Reconstruction based on full SVD:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">V</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">svd</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">full_matrices</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">U</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">((9, 9), (6, 6), (6,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">complex</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"p\">[:</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">)))</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p>Reconstruction based on reduced SVD:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">V</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">svd</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">full_matrices</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">U</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">((9, 6), (6, 6), (6,))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">)))</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"unique\">\n<h3>unique<a class=\"headerlink\" href=\"#unique\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shm.unique\">\n<code class=\"descclassname\">dipy.reconst.shm.</code><code class=\"descname\">unique</code><span class=\"sig-paren\">(</span><em>ar</em>, <em>return_index=False</em>, <em>return_inverse=False</em>, <em>return_counts=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shm.unique\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the unique elements of an array.</p>\n<p>Returns the sorted unique elements of an array. There are three optional\noutputs in addition to the unique elements: the indices of the input array\nthat give the unique values, the indices of the unique array that\nreconstruct the input array, and the number of times each unique value\ncomes up in the input array.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>ar</strong> : array_like</p>\n<blockquote>\n<div><p>Input array. This will be flattened if it is not already 1-D.</p>\n</div></blockquote>\n<p><strong>return_index</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, also return the indices of <cite>ar</cite> that result in the unique\narray.</p>\n</div></blockquote>\n<p><strong>return_inverse</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, also return the indices of the unique array that can be used\nto reconstruct <cite>ar</cite>.</p>\n</div></blockquote>\n<p><strong>return_counts</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, also return the number of times each unique value comes up\nin <cite>ar</cite>.</p>\n<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 1.9.0.</span></p>\n</div>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>unique</strong> : ndarray</p>\n<blockquote>\n<div><p>The sorted unique values.</p>\n</div></blockquote>\n<p><strong>unique_indices</strong> : ndarray, optional</p>\n<blockquote>\n<div><p>The indices of the first occurrences of the unique values in the\n(flattened) original array. Only provided if <cite>return_index</cite> is True.</p>\n</div></blockquote>\n<p><strong>unique_inverse</strong> : ndarray, optional</p>\n<blockquote>\n<div><p>The indices to reconstruct the (flattened) original array from the\nunique array. Only provided if <cite>return_inverse</cite> is True.</p>\n</div></blockquote>\n<p><strong>unique_counts</strong> : ndarray, optional</p>\n<blockquote class=\"last\">\n<div><p>The number of times each of the unique values comes up in the\noriginal array. Only provided if <cite>return_counts</cite> is True.</p>\n<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 1.9.0.</span></p>\n</div>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">numpy.lib.arraysetops</span></code></dt>\n<dd>Module with a number of other functions for performing set operations on arrays.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">unique</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"go\">array([1, 2, 3])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">unique</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"go\">array([1, 2, 3])</span>\n</pre></div>\n</div>\n<p>Return the indices of the original array that give the unique values:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a&#39;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">unique</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">return_index</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span>\n<span class=\"go\">array([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;],</span>\n<span class=\"go\">       dtype=&#39;|S1&#39;)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indices</span>\n<span class=\"go\">array([0, 1, 3])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">indices</span><span class=\"p\">]</span>\n<span class=\"go\">array([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;],</span>\n<span class=\"go\">       dtype=&#39;|S1&#39;)</span>\n</pre></div>\n</div>\n<p>Reconstruct the input array from the unique values:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">unique</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">return_inverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span>\n<span class=\"go\">array([1, 2, 3, 4, 6])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indices</span>\n<span class=\"go\">array([0, 1, 4, 3, 1, 2, 1])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">indices</span><span class=\"p\">]</span>\n<span class=\"go\">array([1, 2, 6, 4, 2, 3, 2])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id613\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shore.Cache\" title=\"dipy.reconst.shore.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Cache</span></code></a><a class=\"headerlink\" href=\"#id613\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shore.Cache\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">Cache</code><a class=\"headerlink\" href=\"#dipy.reconst.shore.Cache\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Cache values based on a key object (such as a sphere or gradient table).</p>\n<p class=\"rubric\">Notes</p>\n<p>This class is meant to be used as a mix-in:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Cache</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelFit</span><span class=\"p\">(</span><span class=\"n\">Fit</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Inside a method on the fit, typical usage would be:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">):</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">M</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compute_basis_matrix</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf_basis_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">M</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.Cache.cache_clear\" title=\"dipy.reconst.shore.Cache.cache_clear\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code></a>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.Cache.cache_get\" title=\"dipy.reconst.shore.Cache.cache_get\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code></a>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.Cache.cache_set\" title=\"dipy.reconst.shore.Cache.cache_set\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code></a>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.Cache.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.Cache.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.Cache.cache_clear\">\n<code class=\"descname\">cache_clear</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.Cache.cache_clear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clear the cache.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.Cache.cache_get\">\n<code class=\"descname\">cache_get</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>default=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.Cache.cache_get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Retrieve a value from the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>default</strong> : object</p>\n<blockquote>\n<div><p>Value to be returned if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>v</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value from the cache associated with <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.  Returns\n<cite>default</cite> if no cached entry is found.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.Cache.cache_set\">\n<code class=\"descname\">cache_set</code><span class=\"sig-paren\">(</span><em>tag</em>, <em>key</em>, <em>value</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.Cache.cache_set\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Store a value in the cache.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tag</strong> : str</p>\n<blockquote>\n<div><p>Description of the cached value.</p>\n</div></blockquote>\n<p><strong>key</strong> : object</p>\n<blockquote>\n<div><p>Key object used to look up the cached value.</p>\n</div></blockquote>\n<p><strong>value</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Value stored in the cache for each unique combination\nof <code class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">key)</span></code>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># Imagine the following computation is very expensive</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"o\">=</span> <span class=\"n\">compute_expensive_matrix</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_set</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">X1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X2</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cache_get</span><span class=\"p\">(</span><span class=\"s1\">&#39;expensive_matrix&#39;</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X1</span> <span class=\"ow\">is</span> <span class=\"n\">X2</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"shorefit\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit\" title=\"dipy.reconst.shore.ShoreFit\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ShoreFit</span></code></a><a class=\"headerlink\" href=\"#shorefit\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shore.ShoreFit\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">ShoreFit</code><span class=\"sig-paren\">(</span><em>model</em>, <em>shore_coef</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit.shore_coeff\" title=\"dipy.reconst.shore.ShoreFit.shore_coeff\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shore_coeff</span></code></a></td>\n<td>The SHORE coefficients</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit.fitted_signal\" title=\"dipy.reconst.shore.ShoreFit.fitted_signal\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fitted_signal</span></code></a>()</td>\n<td>The fitted signal.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit.msd\" title=\"dipy.reconst.shore.ShoreFit.msd\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">msd</span></code></a>()</td>\n<td>Calculates the analytical mean squared displacement (MSD) [R383]</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit.odf\" title=\"dipy.reconst.shore.ShoreFit.odf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf</span></code></a>(sphere)</td>\n<td>Calculates the ODF for a given discrete sphere.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit.odf_sh\" title=\"dipy.reconst.shore.ShoreFit.odf_sh\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">odf_sh</span></code></a>()</td>\n<td>Calculates the real analytical ODF in terms of Spherical Harmonics.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit.pdf\" title=\"dipy.reconst.shore.ShoreFit.pdf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pdf</span></code></a>(r_points)</td>\n<td>Diffusion propagator on a given set of real points.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit.pdf_grid\" title=\"dipy.reconst.shore.ShoreFit.pdf_grid\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pdf_grid</span></code></a>(gridsize,&nbsp;radius_max)</td>\n<td>Applies the analytical FFT on <span class=\"math\">\\(S\\)</span> to generate the diffusion propagator.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit.rtop_pdf\" title=\"dipy.reconst.shore.ShoreFit.rtop_pdf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rtop_pdf</span></code></a>()</td>\n<td>Calculates the analytical return to origin probability (RTOP) from the pdf [R384].</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreFit.rtop_signal\" title=\"dipy.reconst.shore.ShoreFit.rtop_signal\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rtop_signal</span></code></a>()</td>\n<td>Calculates the analytical return to origin probability (RTOP) from the signal [R385].</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreFit.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>model</em>, <em>shore_coef</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates diffusion properties for a single voxel</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>model</strong> : object,</p>\n<blockquote>\n<div><p>AnalyticalModel</p>\n</div></blockquote>\n<p><strong>shore_coef</strong> : 1d ndarray,</p>\n<blockquote class=\"last\">\n<div><p>shore coefficients</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreFit.fitted_signal\">\n<code class=\"descname\">fitted_signal</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit.fitted_signal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The fitted signal.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreFit.msd\">\n<code class=\"descname\">msd</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit.msd\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical mean squared displacement (MSD) <a class=\"reference internal\" href=\"#r380\" id=\"id617\">[R380]</a></p>\n<dl class=\"docutils\">\n<dt>..math::</dt>\n<dd><table class=\"first last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">nowrap:</th><td class=\"field-body\"><dl class=\"first docutils\">\n<dt>begin{equation}</dt>\n<dd><p class=\"first last\">MSD:{DSI}=int_{-infty}^{infty}int_{-infty}^{infty}int_{-infty}^{infty} P(hat{mathbf{r}}) cdot hat{mathbf{r}}^{2} dr_x dr_y dr_z</p>\n</dd>\n</dl>\n<p class=\"last\">end{equation}</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>where <span class=\"math\">\\(\\hat{\\mathbf{r}}\\)</span> is a point in the 3D propagator space (see Wu et. al <a class=\"reference internal\" href=\"#r380\" id=\"id618\">[R380]</a>).</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r380\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R380]</td><td><em>(<a class=\"fn-backref\" href=\"#id617\">1</a>, <a class=\"fn-backref\" href=\"#id618\">2</a>, <a class=\"fn-backref\" href=\"#id619\">3</a>)</em> Wu Y. et. al, &#8220;Hybrid diffusion imaging&#8221;, NeuroImage, vol 36,</td></tr>\n</tbody>\n</table>\n<ol class=\"loweralpha simple\" start=\"16\">\n<li>617-629, 2007.</li>\n</ol>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreFit.odf\">\n<code class=\"descname\">odf</code><span class=\"sig-paren\">(</span><em>sphere</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit.odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the ODF for a given discrete sphere.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreFit.odf_sh\">\n<code class=\"descname\">odf_sh</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit.odf_sh\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the real analytical ODF in terms of Spherical Harmonics.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreFit.pdf\">\n<code class=\"descname\">pdf</code><span class=\"sig-paren\">(</span><em>r_points</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit.pdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Diffusion propagator on a given set of real points.\nif the array r_points is non writeable, then intermediate\nresults are cached for faster recalculation</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreFit.pdf_grid\">\n<code class=\"descname\">pdf_grid</code><span class=\"sig-paren\">(</span><em>gridsize</em>, <em>radius_max</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit.pdf_grid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies the analytical FFT on <span class=\"math\">\\(S\\)</span> to generate the diffusion\npropagator. This is calculated on a discrete 3D grid in order to\nobtain an EAP similar to that which is obtained with DSI.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gridsize</strong> : unsigned int</p>\n<blockquote>\n<div><p>dimension of the propagator grid</p>\n</div></blockquote>\n<p><strong>radius_max</strong> : float</p>\n<blockquote>\n<div><p>maximal radius in which to compute the propagator</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>eap</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>the ensemble average propagator in the 3D grid</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreFit.rtop_pdf\">\n<code class=\"descname\">rtop_pdf</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit.rtop_pdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical return to origin probability (RTOP)\nfrom the pdf <a class=\"reference internal\" href=\"#r381\" id=\"id620\">[R381]</a>.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r381\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R381]</td><td><em>(<a class=\"fn-backref\" href=\"#id620\">1</a>, <a class=\"fn-backref\" href=\"#id621\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreFit.rtop_signal\">\n<code class=\"descname\">rtop_signal</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit.rtop_signal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates the analytical return to origin probability (RTOP)\nfrom the signal <a class=\"reference internal\" href=\"#r382\" id=\"id622\">[R382]</a>.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r382\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R382]</td><td><em>(<a class=\"fn-backref\" href=\"#id622\">1</a>, <a class=\"fn-backref\" href=\"#id623\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel</td></tr>\n</tbody>\n</table>\n<p>diffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.reconst.shore.ShoreFit.shore_coeff\">\n<code class=\"descname\">shore_coeff</code><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreFit.shore_coeff\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The SHORE coefficients</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"shoremodel\">\n<h3><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreModel\" title=\"dipy.reconst.shore.ShoreModel\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ShoreModel</span></code></a><a class=\"headerlink\" href=\"#shoremodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.reconst.shore.ShoreModel\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">ShoreModel</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>radial_order=6</em>, <em>zeta=700</em>, <em>lambdaN=1e-08</em>, <em>lambdaL=1e-08</em>, <em>tau=0.025330295910584444</em>, <em>constrain_e0=False</em>, <em>positive_constraint=False</em>, <em>pos_grid=11</em>, <em>pos_radius=0.02</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.reconst.cache.Cache\" title=\"dipy.reconst.cache.Cache\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.reconst.cache.Cache</span></code></a></p>\n<p>Simple Harmonic Oscillator based Reconstruction and Estimation\n(SHORE) <a class=\"reference internal\" href=\"#r386\" id=\"id624\">[R386]</a> of the diffusion signal.</p>\n<p>The main idea is to model the diffusion signal as a linear combination of\ncontinuous functions <span class=\"math\">\\(\\phi_i\\)</span>,</p>\n<dl class=\"docutils\">\n<dt>..math::</dt>\n<dd><table class=\"first last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">nowrap:</th><td class=\"field-body\"><dl class=\"first docutils\">\n<dt>begin{equation}</dt>\n<dd><p class=\"first last\">S(mathbf{q})= sum_{i=0}^I  c_{i} phi_{i}(mathbf{q}).</p>\n</dd>\n</dl>\n<p class=\"last\">end{equation}</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>where <span class=\"math\">\\(\\mathbf{q}\\)</span> is the wavector which corresponds to different gradient\ndirections. Numerous continuous functions <span class=\"math\">\\(\\phi_i\\)</span> can be used to model\n<span class=\"math\">\\(S\\)</span>. Some are presented in [2,3,4]_.</p>\n<p>From the <span class=\"math\">\\(c_i\\)</span> coefficients, there exist analytical formulae to estimate\nthe ODF, the return to the origin porbability (RTOP), the mean square\ndisplacement (MSD), amongst others <a class=\"reference internal\" href=\"#r390\" id=\"id625\">[R390]</a>.</p>\n<p class=\"rubric\">Notes</p>\n<p>The implementation of SHORE depends on CVXOPT (<a class=\"reference external\" href=\"http://cvxopt.org/\">http://cvxopt.org/</a>). This\nsoftware is licensed under the GPL (see:\n<a class=\"reference external\" href=\"http://cvxopt.org/copyright.html).and\">http://cvxopt.org/copyright.html).and</a> you may be subject to this license\nwhen using SHORE.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r386\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R386]</td><td><em>(<a class=\"fn-backref\" href=\"#id624\">1</a>, <a class=\"fn-backref\" href=\"#id626\">2</a>)</em> Ozarslan E. et. al, &#8220;Simple harmonic oscillator based reconstruction\nand estimation for one-dimensional q-space magnetic resonance\n1D-SHORE)&#8221;, eapoc Intl Soc Mag Reson Med, vol. 16, p. 35., 2008.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r387\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id627\">[R387]</a></td><td>Merlet S. et. al, &#8220;Continuous diffusion signal, EAP and ODF\nestimation via Compressive Sensing in diffusion MRI&#8221;, Medical\nImage Analysis, 2013.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r388\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id628\">[R388]</a></td><td>Rathi Y. et. al, &#8220;Sparse multi-shell diffusion imaging&#8221;, MICCAI,\n2011.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r389\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id629\">[R389]</a></td><td>Cheng J. et. al, &#8220;Theoretical Analysis and eapactical Insights on\nEAP Estimation via a Unified HARDI Framework&#8221;, MICCAI workshop on\nComputational Diffusion MRI, 2011.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r390\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R390]</td><td><em>(<a class=\"fn-backref\" href=\"#id625\">1</a>, <a class=\"fn-backref\" href=\"#id630\">2</a>)</em> Ozarslan E. et. al, &#8220;Mean apparent propagator (MAP) MRI: A novel\ndiffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_clear</span></code>()</td>\n<td>Clear the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_get</span></code>(tag,&nbsp;key[,&nbsp;default])</td>\n<td>Retrieve a value from the cache.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cache_set</span></code>(tag,&nbsp;key,&nbsp;value)</td>\n<td>Store a value in the cache.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.reconst.shore.ShoreModel.fit\" title=\"dipy.reconst.shore.ShoreModel.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(data[,&nbsp;mask])</td>\n<td>Fit method for every voxel in data</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreModel.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>radial_order=6</em>, <em>zeta=700</em>, <em>lambdaN=1e-08</em>, <em>lambdaL=1e-08</em>, <em>tau=0.025330295910584444</em>, <em>constrain_e0=False</em>, <em>positive_constraint=False</em>, <em>pos_grid=11</em>, <em>pos_radius=0.02</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreModel.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Analytical and continuous modeling of the diffusion signal with\nrespect to the SHORE basis [1,2]_.\nThis implementation is a modification of SHORE presented in <a class=\"reference internal\" href=\"#r391\" id=\"id631\">[R391]</a>.\nThe modification was made to obtain the same ordering of the basis\npresented in [2,3]_.</p>\n<p>The main idea is to model the diffusion signal as a linear\ncombination of continuous functions <span class=\"math\">\\(\\phi_i\\)</span>,</p>\n<dl class=\"docutils\">\n<dt>..math::</dt>\n<dd><table class=\"first last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">nowrap:</th><td class=\"field-body\"><dl class=\"first docutils\">\n<dt>begin{equation}</dt>\n<dd><p class=\"first last\">S(mathbf{q})= sum_{i=0}^I  c_{i} phi_{i}(mathbf{q}).</p>\n</dd>\n</dl>\n<p class=\"last\">end{equation}</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>where <span class=\"math\">\\(\\mathbf{q}\\)</span> is the wavector which corresponds to different\ngradient directions.</p>\n<p>From the <span class=\"math\">\\(c_i\\)</span> coefficients, there exists an analytical formula to\nestimate the ODF.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable,</p>\n<blockquote>\n<div><p>gradient directions and bvalues container class</p>\n</div></blockquote>\n<p><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>zeta</strong> : unsigned int,</p>\n<blockquote>\n<div><p>scale factor</p>\n</div></blockquote>\n<p><strong>lambdaN</strong> : float,</p>\n<blockquote>\n<div><p>radial regularisation constant</p>\n</div></blockquote>\n<p><strong>lambdaL</strong> : float,</p>\n<blockquote>\n<div><p>angular regularisation constant</p>\n</div></blockquote>\n<p><strong>tau</strong> : float,</p>\n<blockquote>\n<div><p>diffusion time. By default the value that makes q equal to the\nsquare root of the b-value.</p>\n</div></blockquote>\n<p><strong>constrain_e0</strong> : bool,</p>\n<blockquote>\n<div><p>Constrain the optimization such that E(0) = 1.</p>\n</div></blockquote>\n<p><strong>positive_constraint</strong> : bool,</p>\n<blockquote>\n<div><p>Constrain the propagator to be positive.</p>\n</div></blockquote>\n<p><strong>pos_grid</strong> : int,</p>\n<blockquote>\n<div><p>Grid that define the points of the EAP in which we want to enforce\npositivity.</p>\n</div></blockquote>\n<p><strong>pos_radius</strong> : float,</p>\n<blockquote class=\"last\">\n<div><p>Radius of the grid of the EAP in which enforce positivity in\nmillimeters. By default 20e-03 mm.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r391\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R391]</td><td><em>(<a class=\"fn-backref\" href=\"#id631\">1</a>, <a class=\"fn-backref\" href=\"#id632\">2</a>)</em> Merlet S. et al., &#8220;Continuous diffusion signal, EAP and</td></tr>\n</tbody>\n</table>\n<p>ODF estimation via Compressive Sensing in diffusion MRI&#8221;, Medical\nImage Analysis, 2013.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r392\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id633\">[R392]</a></td><td>Cheng J. et al., &#8220;Theoretical Analysis and eapactical Insights</td></tr>\n</tbody>\n</table>\n<p>on EAP Estimation via a Unified HARDI Framework&#8221;, MICCAI workshop on\nComputational Diffusion MRI, 2011.</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r393\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id634\">[R393]</a></td><td>Ozarslan E. et al., &#8220;Mean apparent propagator (MAP) MRI: A novel\ndiffusion imaging method for mapping tissue microstructure&#8221;,\nNeuroImage, 2013.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<p>In this example, where the data, gradient table and sphere tessellation\nused for reconstruction are provided, we model the diffusion signal\nwith respect to the SHORE basis and compute the real and analytical\nODF.</p>\n<p>from dipy.data import get_data,get_sphere\nsphere = get_sphere(&#8216;symmetric724&#8217;)\nfimg, fbvals, fbvecs = get_data(&#8216;ISBI_testing_2shells_table&#8217;)\nbvals, bvecs = read_bvals_bvecs(fbvals, fbvecs)\ngtab = gradient_table(bvals, bvecs)\nfrom dipy.sims.voxel import SticksAndBall\ndata, golden_directions = SticksAndBall(gtab, d=0.0015,</p>\n<blockquote>\n<div>S0=1., angles=[(0, 0), (90, 0)],\nfractions=[50, 50], snr=None)</div></blockquote>\n<p>from dipy.reconst.canal import ShoreModel\nradial_order = 4\nzeta = 700\nasm = ShoreModel(gtab, radial_order=radial_order, zeta=zeta,</p>\n<blockquote>\n<div>lambdaN=1e-8, lambdaL=1e-8)</div></blockquote>\n<p>asmfit = asm.fit(data)\nodf= asmfit.odf(sphere)</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.reconst.shore.ShoreModel.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>data</em>, <em>mask=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.ShoreModel.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit method for every voxel in data</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id635\">\n<h3>cart2sphere<a class=\"headerlink\" href=\"#id635\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.cart2sphere\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">cart2sphere</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.cart2sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></p>\n<p>See doc for <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> for angle conventions and derivation\nof the formulae.</p>\n<p><span class=\"math\">\\(0\\le\\theta\\mathrm{(theta)}\\le\\pi\\)</span> and <span class=\"math\">\\(-\\pi\\le\\phi\\mathrm{(phi)}\\le\\pi\\)</span></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>x coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>y</strong> : array_like</p>\n<blockquote>\n<div><p>y coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array_like</p>\n<blockquote>\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> : array</p>\n<blockquote>\n<div><p>radius</p>\n</div></blockquote>\n<p><strong>theta</strong> : array</p>\n<blockquote>\n<div><p>inclination (polar) angle</p>\n</div></blockquote>\n<p><strong>phi</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>azimuth angle</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id636\">\n<h3>create_rspace<a class=\"headerlink\" href=\"#id636\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.create_rspace\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">create_rspace</code><span class=\"sig-paren\">(</span><em>gridsize</em>, <em>radius_max</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.create_rspace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"docutils\">\n<dt>Create the real space table, that contains the points in which</dt>\n<dd>to compute the pdf.</dd>\n</dl>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gridsize</strong> : unsigned int</p>\n<blockquote>\n<div><p>dimension of the propagator grid</p>\n</div></blockquote>\n<p><strong>radius_max</strong> : float</p>\n<blockquote>\n<div><p>maximal radius in which compute the propagator</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>vecs</strong> : array, shape (N,3)</p>\n<blockquote>\n<div><p>positions of the pdf points in a 3D matrix</p>\n</div></blockquote>\n<p><strong>tab</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>real space points in which calculates the pdf</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id637\">\n<h3>factorial<a class=\"headerlink\" href=\"#id637\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.factorial\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">factorial</code><span class=\"sig-paren\">(</span><em>x</em><span class=\"sig-paren\">)</span> &#x2192; Integral<a class=\"headerlink\" href=\"#dipy.reconst.shore.factorial\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find x!. Raise a ValueError if x is negative or non-integral.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id638\">\n<h3>genlaguerre<a class=\"headerlink\" href=\"#id638\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.genlaguerre\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">genlaguerre</code><span class=\"sig-paren\">(</span><em>n</em>, <em>alpha</em>, <em>monic=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.genlaguerre\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generalized (associated) Laguerre polynomial.</p>\n<p>Defined to be the solution of</p>\n<div class=\"math\">\n\\[x\\frac{d^2}{dx^2}L_n^{(\\alpha)} \n  + (\\alpha + 1 - x)\\frac{d}{dx}L_n^{(\\alpha)}\n  + nL_n^{(\\alpha)} = 0,\\]</div>\n<p>where <span class=\"math\">\\(\\alpha &gt; -1\\)</span>; <span class=\"math\">\\(L_n^{(\\alpha)}\\)</span> is a polynomial\nof degree <span class=\"math\">\\(n\\)</span>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> : int</p>\n<blockquote>\n<div><p>Degree of the polynomial.</p>\n</div></blockquote>\n<p><strong>alpha</strong> : float</p>\n<blockquote>\n<div><p>Parameter, must be greater than -1.</p>\n</div></blockquote>\n<p><strong>monic</strong> : bool, optional</p>\n<blockquote>\n<div><p>If <cite>True</cite>, scale the leading coefficient to be 1. Default is\n<cite>False</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>L</strong> : orthopoly1d</p>\n<blockquote class=\"last\">\n<div><p>Generalized Laguerre polynomial.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">laguerre</span></code></dt>\n<dd>Laguerre polynomial.</dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>For fixed <span class=\"math\">\\(\\alpha\\)</span>, the polynomials <span class=\"math\">\\(L_n^{(\\alpha)}\\)</span>\nare orthogonal over <span class=\"math\">\\([0, \\infty)\\)</span> with weight function\n<span class=\"math\">\\(e^{-x}x^\\alpha\\)</span>.</p>\n<p>The Laguerre polynomials are the special case where <span class=\"math\">\\(\\alpha\n= 0\\)</span>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"l-shore\">\n<h3>l_shore<a class=\"headerlink\" href=\"#l-shore\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.l_shore\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">l_shore</code><span class=\"sig-paren\">(</span><em>radial_order</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.l_shore\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the angular regularisation matrix for SHORE basis</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id639\">\n<h3>multi_voxel_fit<a class=\"headerlink\" href=\"#id639\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.multi_voxel_fit\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">multi_voxel_fit</code><span class=\"sig-paren\">(</span><em>single_voxel_fit</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.multi_voxel_fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Method decorator to turn a single voxel model fit\ndefinition into a multi voxel model fit definition</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"n-shore\">\n<h3>n_shore<a class=\"headerlink\" href=\"#n-shore\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.n_shore\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">n_shore</code><span class=\"sig-paren\">(</span><em>radial_order</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.n_shore\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the angular regularisation matrix for SHORE basis</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id640\">\n<h3>optional_package<a class=\"headerlink\" href=\"#id640\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.optional_package\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">optional_package</code><span class=\"sig-paren\">(</span><em>name</em>, <em>trip_msg=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>name</strong> : str</p>\n<blockquote>\n<div><p>package name</p>\n</div></blockquote>\n<p><strong>trip_msg</strong> : None or str</p>\n<blockquote>\n<div><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>pkg_like</strong> : module or <code class=\"docutils literal\"><span class=\"pre\">TripWire</span></code> instance</p>\n<blockquote>\n<div><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</div></blockquote>\n<p><strong>have_pkg</strong> : bool</p>\n<blockquote>\n<div><p>True if import for package was successful, false otherwise</p>\n</div></blockquote>\n<p><strong>module_setup</strong> : function</p>\n<blockquote class=\"last\">\n<div><p>callable usually set as <code class=\"docutils literal\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id641\">\n<h3>real_sph_harm<a class=\"headerlink\" href=\"#id641\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.real_sph_harm\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">real_sph_harm</code><span class=\"sig-paren\">(</span><em>m</em>, <em>n</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.real_sph_harm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute real spherical harmonics.</p>\n<p>Where the real harmonic <span class=\"math\">\\(Y^m_n\\)</span> is defined to be:</p>\n<blockquote>\n<div>Imag(<span class=\"math\">\\(Y^m_n\\)</span>) * sqrt(2)     if m &gt; 0\n<span class=\"math\">\\(Y^0_n\\)</span>                     if m = 0\nReal(<span class=\"math\">\\(Y^|m|_n\\)</span>) * sqrt(2)   if m &lt; 0</div></blockquote>\n<p>This may take scalar or array arguments. The inputs will be broadcasted\nagainst each other.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>m</strong> : int <code class=\"docutils literal\"><span class=\"pre\">|m|</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">n</span></code></p>\n<blockquote>\n<div><p>The order of the harmonic.</p>\n</div></blockquote>\n<p><strong>n</strong> : int <code class=\"docutils literal\"><span class=\"pre\">&gt;=</span> <span class=\"pre\">0</span></code></p>\n<blockquote>\n<div><p>The degree of the harmonic.</p>\n</div></blockquote>\n<p><strong>theta</strong> : float [0, 2*pi]</p>\n<blockquote>\n<div><p>The azimuthal (longitudinal) coordinate.</p>\n</div></blockquote>\n<p><strong>phi</strong> : float [0, pi]</p>\n<blockquote>\n<div><p>The polar (colatitudinal) coordinate.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y_mn</strong> : real float</p>\n<blockquote class=\"last\">\n<div><p>The real harmonic <span class=\"math\">\\(Y^m_n\\)</span> sampled at <cite>theta</cite> and <cite>phi</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">scipy.special.sph_harm</span></code></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"shore-indices\">\n<h3>shore_indices<a class=\"headerlink\" href=\"#shore-indices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.shore_indices\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">shore_indices</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>index</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.shore_indices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given the basis order and the index, return the shore indices n, l, m\nfor modified Merlet&#8217;s 3D-SHORE\n..math:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"p\">:</span><span class=\"n\">nowrap</span><span class=\"p\">:</span>\n    \\<span class=\"n\">begin</span><span class=\"p\">{</span><span class=\"n\">equation</span><span class=\"p\">}</span>\n        \\<span class=\"n\">textbf</span><span class=\"p\">{</span><span class=\"n\">E</span><span class=\"p\">}(</span><span class=\"n\">q</span>\\<span class=\"n\">textbf</span><span class=\"p\">{</span><span class=\"n\">u</span><span class=\"p\">})</span><span class=\"o\">=</span>\\<span class=\"n\">sum_</span><span class=\"p\">{</span><span class=\"n\">l</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">even</span><span class=\"p\">}</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"n\">N_</span><span class=\"p\">{</span><span class=\"nb\">max</span><span class=\"p\">}}</span>\n                                \\<span class=\"n\">sum_</span><span class=\"p\">{</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">l</span><span class=\"p\">}</span><span class=\"o\">^</span><span class=\"p\">{(</span><span class=\"n\">N_</span><span class=\"p\">{</span><span class=\"nb\">max</span><span class=\"p\">}</span><span class=\"o\">+</span><span class=\"n\">l</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">}</span>\n                                \\<span class=\"n\">sum_</span><span class=\"p\">{</span><span class=\"n\">m</span><span class=\"o\">=-</span><span class=\"n\">l</span><span class=\"p\">}</span><span class=\"o\">^</span><span class=\"n\">l</span> <span class=\"n\">c_</span><span class=\"p\">{</span><span class=\"n\">nlm</span><span class=\"p\">}</span>\n                                \\<span class=\"n\">phi_</span><span class=\"p\">{</span><span class=\"n\">nlm</span><span class=\"p\">}(</span><span class=\"n\">q</span>\\<span class=\"n\">textbf</span><span class=\"p\">{</span><span class=\"n\">u</span><span class=\"p\">})</span>\n    \\<span class=\"n\">end</span><span class=\"p\">{</span><span class=\"n\">equation</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>where <span class=\"math\">\\(\\phi_{nlm}\\)</span> is\n..math:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span>:nowrap:\n    \\begin{equation}\n        \\phi_{nlm}^{SHORE}(q\\textbf{u})=\\Biggl[\\dfrac{2(n-l)!}\n            {\\zeta^{3/2} \\Gamma(n+3/2)} \\Biggr]^{1/2}\n            \\Biggl(\\dfrac{q^2}{\\zeta}\\Biggr)^{l/2}\n            exp\\Biggl(\\dfrac{-q^2}{2\\zeta}\\Biggr)\n            L^{l+1/2}_{n-l} \\Biggl(\\dfrac{q^2}{\\zeta}\\Biggr)\n            Y_l^m(\\textbf{u}).\n    \\end{equation}\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int</p>\n<blockquote>\n<div><p>an even integer that represent the maximal order of the basis</p>\n</div></blockquote>\n<p><strong>index</strong> : unsigned int</p>\n<blockquote>\n<div><p>index of the coefficients, start from 0</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> :  unsigned int</p>\n<blockquote>\n<div><p>the index n of the modified shore basis</p>\n</div></blockquote>\n<p><strong>l</strong> :  unsigned int</p>\n<blockquote>\n<div><p>the index l of the modified shore basis</p>\n</div></blockquote>\n<p><strong>m</strong> :  unsigned int</p>\n<blockquote class=\"last\">\n<div><p>the index m of the modified shore basis</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"shore-matrix\">\n<h3>shore_matrix<a class=\"headerlink\" href=\"#shore-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.shore_matrix\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">shore_matrix</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>zeta</em>, <em>gtab</em>, <em>tau=0.025330295910584444</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.shore_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the SHORE matrix for modified Merlet&#8217;s 3D-SHORE <a class=\"reference internal\" href=\"#r394\" id=\"id642\">[R394]</a></p>\n<dl class=\"docutils\">\n<dt>..math::</dt>\n<dd><table class=\"first last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">nowrap:</th><td class=\"field-body\"><dl class=\"first docutils\">\n<dt>begin{equation}</dt>\n<dd><dl class=\"first last docutils\">\n<dt>textbf{E}(qtextbf{u})=sum_{l=0, even}^{N_{max}}</dt>\n<dd><p class=\"first last\">sum_{n=l}^{(N_{max}+l)/2}\nsum_{m=-l}^l c_{nlm}\nphi_{nlm}(qtextbf{u})</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"last\">end{equation}</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>where <span class=\"math\">\\(\\phi_{nlm}\\)</span> is\n..math:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span>:nowrap:\n    \\begin{equation}\n        \\phi_{nlm}^{SHORE}(q\\textbf{u})=\\Biggl[\\dfrac{2(n-l)!}\n            {\\zeta^{3/2} \\Gamma(n+3/2)} \\Biggr]^{1/2}\n            \\Biggl(\\dfrac{q^2}{\\zeta}\\Biggr)^{l/2}\n            exp\\Biggl(\\dfrac{-q^2}{2\\zeta}\\Biggr)\n            L^{l+1/2}_{n-l} \\Biggl(\\dfrac{q^2}{\\zeta}\\Biggr)\n            Y_l^m(\\textbf{u}).\n    \\end{equation}\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>zeta</strong> : unsigned int,</p>\n<blockquote>\n<div><p>scale factor</p>\n</div></blockquote>\n<p><strong>gtab</strong> : GradientTable,</p>\n<blockquote>\n<div><p>gradient directions and bvalues container class</p>\n</div></blockquote>\n<p><strong>tau</strong> : float,</p>\n<blockquote class=\"last\">\n<div><p>diffusion time. By default the value that makes q=sqrt(b).</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r394\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R394]</td><td><em>(<a class=\"fn-backref\" href=\"#id642\">1</a>, <a class=\"fn-backref\" href=\"#id643\">2</a>)</em> Merlet S. et. al, &#8220;Continuous diffusion signal, EAP and</td></tr>\n</tbody>\n</table>\n<p>ODF estimation via Compressive Sensing in diffusion MRI&#8221;, Medical\nImage Analysis, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"shore-matrix-odf\">\n<h3>shore_matrix_odf<a class=\"headerlink\" href=\"#shore-matrix-odf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.shore_matrix_odf\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">shore_matrix_odf</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>zeta</em>, <em>sphere_vertices</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.shore_matrix_odf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the SHORE ODF matrix <a class=\"reference internal\" href=\"#r395\" id=\"id644\">[R395]</a>&#8220;</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>zeta</strong> : unsigned int,</p>\n<blockquote>\n<div><p>scale factor</p>\n</div></blockquote>\n<p><strong>sphere_vertices</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>vertices of the odf sphere</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r395\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R395]</td><td><em>(<a class=\"fn-backref\" href=\"#id644\">1</a>, <a class=\"fn-backref\" href=\"#id645\">2</a>)</em> Merlet S. et. al, &#8220;Continuous diffusion signal, EAP and</td></tr>\n</tbody>\n</table>\n<p>ODF estimation via Compressive Sensing in diffusion MRI&#8221;, Medical\nImage Analysis, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"shore-matrix-pdf\">\n<h3>shore_matrix_pdf<a class=\"headerlink\" href=\"#shore-matrix-pdf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.shore_matrix_pdf\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">shore_matrix_pdf</code><span class=\"sig-paren\">(</span><em>radial_order</em>, <em>zeta</em>, <em>rtab</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.shore_matrix_pdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the SHORE propagator matrix <a class=\"reference internal\" href=\"#r396\" id=\"id646\">[R396]</a>&#8220;</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int,</p>\n<blockquote>\n<div><p>an even integer that represent the order of the basis</p>\n</div></blockquote>\n<p><strong>zeta</strong> : unsigned int,</p>\n<blockquote>\n<div><p>scale factor</p>\n</div></blockquote>\n<p><strong>rtab</strong> : array, shape (N,3)</p>\n<blockquote class=\"last\">\n<div><p>real space points in which calculates the pdf</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r396\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R396]</td><td><em>(<a class=\"fn-backref\" href=\"#id646\">1</a>, <a class=\"fn-backref\" href=\"#id647\">2</a>)</em> Merlet S. et. al, &#8220;Continuous diffusion signal, EAP and</td></tr>\n</tbody>\n</table>\n<p>ODF estimation via Compressive Sensing in diffusion MRI&#8221;, Medical\nImage Analysis, 2013.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"shore-order\">\n<h3>shore_order<a class=\"headerlink\" href=\"#shore-order\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.shore_order\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">shore_order</code><span class=\"sig-paren\">(</span><em>n</em>, <em>l</em>, <em>m</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.shore_order\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given the indices (n,l,m) of the basis, return the minimum order\nfor those indices and their index for modified Merlet&#8217;s 3D-SHORE.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> :  unsigned int</p>\n<blockquote>\n<div><p>the index n of the modified shore basis</p>\n</div></blockquote>\n<p><strong>l</strong> :  unsigned int</p>\n<blockquote>\n<div><p>the index l of the modified shore basis</p>\n</div></blockquote>\n<p><strong>m</strong> :  unsigned int</p>\n<blockquote>\n<div><p>the index m of the modified shore basis</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>radial_order</strong> : unsigned int</p>\n<blockquote>\n<div><p>an even integer that represent the maximal order of the basis</p>\n</div></blockquote>\n<p><strong>index</strong> : unsigned int</p>\n<blockquote class=\"last\">\n<div><p>index of the coefficient correspondig to (n,l,m), start from 0</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id648\">\n<h3>warn<a class=\"headerlink\" href=\"#id648\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.reconst.shore.warn\">\n<code class=\"descclassname\">dipy.reconst.shore.</code><code class=\"descname\">warn</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.reconst.shore.warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Issue a warning, or maybe ignore it or raise an exception.</p>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"]], "sourcename": "reference/dipy.reconst.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"docutils literal\"><span class=\"pre\">reconst</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.base\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.base</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.benchmarks\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.benchmarks</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.benchmarks.bench_bounding_box\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.benchmarks.bench_bounding_box</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.benchmarks.bench_csd\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.benchmarks.bench_csd</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.benchmarks.bench_peaks\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.benchmarks.bench_peaks</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.benchmarks.bench_squash\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.benchmarks.bench_squash</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.benchmarks.bench_vec_val_sum\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.benchmarks.bench_vec_val_sum</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.cache\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.cache</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.cross_validation\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.cross_validation</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.csdeconv\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.csdeconv</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.dki\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.dki</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.dki_micro\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.dki_micro</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.dsi\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.dsi</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.dti\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.dti</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.fwdti\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.fwdti</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.gqi\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.gqi</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.interpolate\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.interpolate</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.ivim\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.ivim</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.mapmri\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.mapmri</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.multi_voxel\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.multi_voxel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.odf\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.odf</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.peaks\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.peaks</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.sfm\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.sfm</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.shm\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.shm</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-dipy.reconst.shore\">Module: <code class=\"docutils literal\"><span class=\"pre\">reconst.shore</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#bench\">bench</a></li>\n<li><a class=\"reference internal\" href=\"#test\">test</a></li>\n<li><a class=\"reference internal\" href=\"#reconstfit\"><code class=\"docutils literal\"><span class=\"pre\">ReconstFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#reconstmodel\"><code class=\"docutils literal\"><span class=\"pre\">ReconstModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#bench-bounding-box\">bench_bounding_box</a></li>\n<li><a class=\"reference internal\" href=\"#bounding-box\">bounding_box</a></li>\n<li><a class=\"reference internal\" href=\"#measure\">measure</a></li>\n<li><a class=\"reference internal\" href=\"#constrainedsphericaldeconvmodel\"><code class=\"docutils literal\"><span class=\"pre\">ConstrainedSphericalDeconvModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#gradienttable\"><code class=\"docutils literal\"><span class=\"pre\">GradientTable</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bench-csdeconv\">bench_csdeconv</a></li>\n<li><a class=\"reference internal\" href=\"#num-grad\">num_grad</a></li>\n<li><a class=\"reference internal\" href=\"#read-stanford-labels\">read_stanford_labels</a></li>\n<li><a class=\"reference internal\" href=\"#bench-local-maxima\">bench_local_maxima</a></li>\n<li><a class=\"reference internal\" href=\"#get-sphere\">get_sphere</a></li>\n<li><a class=\"reference internal\" href=\"#local-maxima\">local_maxima</a></li>\n<li><a class=\"reference internal\" href=\"#id70\">measure</a></li>\n<li><a class=\"reference internal\" href=\"#unique-edges\">unique_edges</a></li>\n<li><a class=\"reference internal\" href=\"#bench-quick-squash\">bench_quick_squash</a></li>\n<li><a class=\"reference internal\" href=\"#id71\">measure</a></li>\n<li><a class=\"reference internal\" href=\"#ndindex\">ndindex</a></li>\n<li><a class=\"reference internal\" href=\"#old-squash\">old_squash</a></li>\n<li><a class=\"reference internal\" href=\"#quick-squash\">quick_squash</a></li>\n<li><a class=\"reference internal\" href=\"#reduce\">reduce</a></li>\n<li><a class=\"reference internal\" href=\"#bench-vec-val-vect\">bench_vec_val_vect</a></li>\n<li><a class=\"reference internal\" href=\"#id72\">measure</a></li>\n<li><a class=\"reference internal\" href=\"#randn\">randn</a></li>\n<li><a class=\"reference internal\" href=\"#vec-val-vect\">vec_val_vect</a></li>\n<li><a class=\"reference internal\" href=\"#with-einsum\">with_einsum</a></li>\n<li><a class=\"reference internal\" href=\"#cache\"><code class=\"docutils literal\"><span class=\"pre\">Cache</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#auto-attr\">auto_attr</a></li>\n<li><a class=\"reference internal\" href=\"#range\"><code class=\"docutils literal\"><span class=\"pre\">range</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#coeff-of-determination\">coeff_of_determination</a></li>\n<li><a class=\"reference internal\" href=\"#kfold-xval\">kfold_xval</a></li>\n<li><a class=\"reference internal\" href=\"#axsymshresponse\"><code class=\"docutils literal\"><span class=\"pre\">AxSymShResponse</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#constrainedsdtmodel\"><code class=\"docutils literal\"><span class=\"pre\">ConstrainedSDTModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id79\"><code class=\"docutils literal\"><span class=\"pre\">ConstrainedSphericalDeconvModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sphharmfit\"><code class=\"docutils literal\"><span class=\"pre\">SphHarmFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sphharmmodel\"><code class=\"docutils literal\"><span class=\"pre\">SphHarmModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#tensormodel\"><code class=\"docutils literal\"><span class=\"pre\">TensorModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id101\"><code class=\"docutils literal\"><span class=\"pre\">range</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#auto-response\">auto_response</a></li>\n<li><a class=\"reference internal\" href=\"#cart2sphere\">cart2sphere</a></li>\n<li><a class=\"reference internal\" href=\"#csdeconv\">csdeconv</a></li>\n<li><a class=\"reference internal\" href=\"#estimate-response\">estimate_response</a></li>\n<li><a class=\"reference internal\" href=\"#fa-trace-to-lambdas\">fa_trace_to_lambdas</a></li>\n<li><a class=\"reference internal\" href=\"#forward-sdeconv-mat\">forward_sdeconv_mat</a></li>\n<li><a class=\"reference internal\" href=\"#forward-sdt-deconv-mat\">forward_sdt_deconv_mat</a></li>\n<li><a class=\"reference internal\" href=\"#fractional-anisotropy\">fractional_anisotropy</a></li>\n<li><a class=\"reference internal\" href=\"#id109\">get_sphere</a></li>\n<li><a class=\"reference internal\" href=\"#lazy-index\">lazy_index</a></li>\n<li><a class=\"reference internal\" href=\"#lpn\">lpn</a></li>\n<li><a class=\"reference internal\" href=\"#multi-voxel-fit\">multi_voxel_fit</a></li>\n<li><a class=\"reference internal\" href=\"#id111\">ndindex</a></li>\n<li><a class=\"reference internal\" href=\"#odf-deconv\">odf_deconv</a></li>\n<li><a class=\"reference internal\" href=\"#odf-sh-to-sharp\">odf_sh_to_sharp</a></li>\n<li><a class=\"reference internal\" href=\"#peaks-from-model\">peaks_from_model</a></li>\n<li><a class=\"reference internal\" href=\"#quad\">quad</a></li>\n<li><a class=\"reference internal\" href=\"#real-sph-harm\">real_sph_harm</a></li>\n<li><a class=\"reference internal\" href=\"#real-sym-sh-basis\">real_sym_sh_basis</a></li>\n<li><a class=\"reference internal\" href=\"#recursive-response\">recursive_response</a></li>\n<li><a class=\"reference internal\" href=\"#response-from-mask\">response_from_mask</a></li>\n<li><a class=\"reference internal\" href=\"#sh-to-rh\">sh_to_rh</a></li>\n<li><a class=\"reference internal\" href=\"#single-tensor\">single_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#sph-harm-ind-list\">sph_harm_ind_list</a></li>\n<li><a class=\"reference internal\" href=\"#vec2vec-rotmat\">vec2vec_rotmat</a></li>\n<li><a class=\"reference internal\" href=\"#diffusionkurtosisfit\"><code class=\"docutils literal\"><span class=\"pre\">DiffusionKurtosisFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#diffusionkurtosismodel\"><code class=\"docutils literal\"><span class=\"pre\">DiffusionKurtosisModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id156\"><code class=\"docutils literal\"><span class=\"pre\">ReconstModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#tensorfit\"><code class=\"docutils literal\"><span class=\"pre\">TensorFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id162\"><code class=\"docutils literal\"><span class=\"pre\">range</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#wcons\">Wcons</a></li>\n<li><a class=\"reference internal\" href=\"#wrotate\">Wrotate</a></li>\n<li><a class=\"reference internal\" href=\"#wrotate-element\">Wrotate_element</a></li>\n<li><a class=\"reference internal\" href=\"#apparent-kurtosis-coef\">apparent_kurtosis_coef</a></li>\n<li><a class=\"reference internal\" href=\"#axial-kurtosis\">axial_kurtosis</a></li>\n<li><a class=\"reference internal\" href=\"#carlson-rd\">carlson_rd</a></li>\n<li><a class=\"reference internal\" href=\"#carlson-rf\">carlson_rf</a></li>\n<li><a class=\"reference internal\" href=\"#id171\">cart2sphere</a></li>\n<li><a class=\"reference internal\" href=\"#check-multi-b\">check_multi_b</a></li>\n<li><a class=\"reference internal\" href=\"#decompose-tensor\">decompose_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#design-matrix\">design_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#directional-diffusion\">directional_diffusion</a></li>\n<li><a class=\"reference internal\" href=\"#directional-diffusion-variance\">directional_diffusion_variance</a></li>\n<li><a class=\"reference internal\" href=\"#directional-kurtosis\">directional_kurtosis</a></li>\n<li><a class=\"reference internal\" href=\"#dki-prediction\">dki_prediction</a></li>\n<li><a class=\"reference internal\" href=\"#from-lower-triangular\">from_lower_triangular</a></li>\n<li><a class=\"reference internal\" href=\"#id181\">get_sphere</a></li>\n<li><a class=\"reference internal\" href=\"#kurtosis-maximum\">kurtosis_maximum</a></li>\n<li><a class=\"reference internal\" href=\"#id182\">local_maxima</a></li>\n<li><a class=\"reference internal\" href=\"#lower-triangular\">lower_triangular</a></li>\n<li><a class=\"reference internal\" href=\"#mean-diffusivity\">mean_diffusivity</a></li>\n<li><a class=\"reference internal\" href=\"#mean-kurtosis\">mean_kurtosis</a></li>\n<li><a class=\"reference internal\" href=\"#id188\">ndindex</a></li>\n<li><a class=\"reference internal\" href=\"#ols-fit-dki\">ols_fit_dki</a></li>\n<li><a class=\"reference internal\" href=\"#radial-kurtosis\">radial_kurtosis</a></li>\n<li><a class=\"reference internal\" href=\"#sphere2cart\">sphere2cart</a></li>\n<li><a class=\"reference internal\" href=\"#split-dki-param\">split_dki_param</a></li>\n<li><a class=\"reference internal\" href=\"#id196\">vec_val_vect</a></li>\n<li><a class=\"reference internal\" href=\"#wls-fit-dki\">wls_fit_dki</a></li>\n<li><a class=\"reference internal\" href=\"#id199\"><code class=\"docutils literal\"><span class=\"pre\">DiffusionKurtosisFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id214\"><code class=\"docutils literal\"><span class=\"pre\">DiffusionKurtosisModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#kurtosismicrostructuralfit\"><code class=\"docutils literal\"><span class=\"pre\">KurtosisMicrostructuralFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#kurtosismicrostructuremodel\"><code class=\"docutils literal\"><span class=\"pre\">KurtosisMicrostructureModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#axial-diffusivity\">axial_diffusivity</a></li>\n<li><a class=\"reference internal\" href=\"#axonal-water-fraction\">axonal_water_fraction</a></li>\n<li><a class=\"reference internal\" href=\"#id243\">decompose_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#diffusion-components\">diffusion_components</a></li>\n<li><a class=\"reference internal\" href=\"#id246\">directional_diffusion</a></li>\n<li><a class=\"reference internal\" href=\"#id249\">directional_kurtosis</a></li>\n<li><a class=\"reference internal\" href=\"#dkimicro-prediction\">dkimicro_prediction</a></li>\n<li><a class=\"reference internal\" href=\"#dti-design-matrix\">dti_design_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#id257\">from_lower_triangular</a></li>\n<li><a class=\"reference internal\" href=\"#id258\">get_sphere</a></li>\n<li><a class=\"reference internal\" href=\"#id259\">kurtosis_maximum</a></li>\n<li><a class=\"reference internal\" href=\"#id260\">lower_triangular</a></li>\n<li><a class=\"reference internal\" href=\"#id261\">mean_diffusivity</a></li>\n<li><a class=\"reference internal\" href=\"#id262\">ndindex</a></li>\n<li><a class=\"reference internal\" href=\"#radial-diffusivity\">radial_diffusivity</a></li>\n<li><a class=\"reference internal\" href=\"#id263\">split_dki_param</a></li>\n<li><a class=\"reference internal\" href=\"#tortuosity\">tortuosity</a></li>\n<li><a class=\"reference internal\" href=\"#trace\">trace</a></li>\n<li><a class=\"reference internal\" href=\"#id264\">vec_val_vect</a></li>\n<li><a class=\"reference internal\" href=\"#id265\"><code class=\"docutils literal\"><span class=\"pre\">Cache</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#diffusionspectrumdeconvfit\"><code class=\"docutils literal\"><span class=\"pre\">DiffusionSpectrumDeconvFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#diffusionspectrumdeconvmodel\"><code class=\"docutils literal\"><span class=\"pre\">DiffusionSpectrumDeconvModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#diffusionspectrumfit\"><code class=\"docutils literal\"><span class=\"pre\">DiffusionSpectrumFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#diffusionspectrummodel\"><code class=\"docutils literal\"><span class=\"pre\">DiffusionSpectrumModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#odffit\"><code class=\"docutils literal\"><span class=\"pre\">OdfFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#odfmodel\"><code class=\"docutils literal\"><span class=\"pre\">OdfModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#lr-deconv\">LR_deconv</a></li>\n<li><a class=\"reference internal\" href=\"#create-qspace\">create_qspace</a></li>\n<li><a class=\"reference internal\" href=\"#create-qtable\">create_qtable</a></li>\n<li><a class=\"reference internal\" href=\"#fftn\">fftn</a></li>\n<li><a class=\"reference internal\" href=\"#fftshift\">fftshift</a></li>\n<li><a class=\"reference internal\" href=\"#gen-psf\">gen_PSF</a></li>\n<li><a class=\"reference internal\" href=\"#half-to-full-qspace\">half_to_full_qspace</a></li>\n<li><a class=\"reference internal\" href=\"#hanning-filter\">hanning_filter</a></li>\n<li><a class=\"reference internal\" href=\"#ifftshift\">ifftshift</a></li>\n<li><a class=\"reference internal\" href=\"#map-coordinates\">map_coordinates</a></li>\n<li><a class=\"reference internal\" href=\"#id284\">multi_voxel_fit</a></li>\n<li><a class=\"reference internal\" href=\"#pdf-interp-coords\">pdf_interp_coords</a></li>\n<li><a class=\"reference internal\" href=\"#pdf-odf\">pdf_odf</a></li>\n<li><a class=\"reference internal\" href=\"#project-hemisph-bvecs\">project_hemisph_bvecs</a></li>\n<li><a class=\"reference internal\" href=\"#threshold-propagator\">threshold_propagator</a></li>\n<li><a class=\"reference internal\" href=\"#id285\"><code class=\"docutils literal\"><span class=\"pre\">ReconstModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id286\"><code class=\"docutils literal\"><span class=\"pre\">TensorFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id294\"><code class=\"docutils literal\"><span class=\"pre\">TensorModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id305\"><code class=\"docutils literal\"><span class=\"pre\">range</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#apparent-diffusion-coef\">apparent_diffusion_coef</a></li>\n<li><a class=\"reference internal\" href=\"#id306\">auto_attr</a></li>\n<li><a class=\"reference internal\" href=\"#id307\">axial_diffusivity</a></li>\n<li><a class=\"reference internal\" href=\"#color-fa\">color_fa</a></li>\n<li><a class=\"reference internal\" href=\"#id308\">decompose_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#id309\">design_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#determinant\">determinant</a></li>\n<li><a class=\"reference internal\" href=\"#deviatoric\">deviatoric</a></li>\n<li><a class=\"reference internal\" href=\"#eig-from-lo-tri\">eig_from_lo_tri</a></li>\n<li><a class=\"reference internal\" href=\"#eigh\">eigh</a></li>\n<li><a class=\"reference internal\" href=\"#id312\">fractional_anisotropy</a></li>\n<li><a class=\"reference internal\" href=\"#id313\">from_lower_triangular</a></li>\n<li><a class=\"reference internal\" href=\"#geodesic-anisotropy\">geodesic_anisotropy</a></li>\n<li><a class=\"reference internal\" href=\"#id326\">get_sphere</a></li>\n<li><a class=\"reference internal\" href=\"#gradient-table\">gradient_table</a></li>\n<li><a class=\"reference internal\" href=\"#isotropic\">isotropic</a></li>\n<li><a class=\"reference internal\" href=\"#iter-fit-tensor\">iter_fit_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#linearity\">linearity</a></li>\n<li><a class=\"reference internal\" href=\"#id330\">lower_triangular</a></li>\n<li><a class=\"reference internal\" href=\"#id331\">mean_diffusivity</a></li>\n<li><a class=\"reference internal\" href=\"#mode\">mode</a></li>\n<li><a class=\"reference internal\" href=\"#nlls-fit-tensor\">nlls_fit_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#norm\">norm</a></li>\n<li><a class=\"reference internal\" href=\"#ols-fit-tensor\">ols_fit_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#pinv\">pinv</a></li>\n<li><a class=\"reference internal\" href=\"#planarity\">planarity</a></li>\n<li><a class=\"reference internal\" href=\"#quantize-evecs\">quantize_evecs</a></li>\n<li><a class=\"reference internal\" href=\"#id339\">radial_diffusivity</a></li>\n<li><a class=\"reference internal\" href=\"#restore-fit-tensor\">restore_fit_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#sphericity\">sphericity</a></li>\n<li><a class=\"reference internal\" href=\"#tensor-prediction\">tensor_prediction</a></li>\n<li><a class=\"reference internal\" href=\"#id343\">trace</a></li>\n<li><a class=\"reference internal\" href=\"#id344\">vec_val_vect</a></li>\n<li><a class=\"reference internal\" href=\"#vector-norm\">vector_norm</a></li>\n<li><a class=\"reference internal\" href=\"#wls-fit-tensor\">wls_fit_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#freewatertensorfit\"><code class=\"docutils literal\"><span class=\"pre\">FreeWaterTensorFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#freewatertensormodel\"><code class=\"docutils literal\"><span class=\"pre\">FreeWaterTensorModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id355\"><code class=\"docutils literal\"><span class=\"pre\">ReconstModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id356\"><code class=\"docutils literal\"><span class=\"pre\">TensorFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#cholesky-to-lower-triangular\">cholesky_to_lower_triangular</a></li>\n<li><a class=\"reference internal\" href=\"#id366\">decompose_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#id367\">design_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#id368\">from_lower_triangular</a></li>\n<li><a class=\"reference internal\" href=\"#fwdti-prediction\">fwdti_prediction</a></li>\n<li><a class=\"reference internal\" href=\"#id371\">lower_triangular</a></li>\n<li><a class=\"reference internal\" href=\"#lower-triangular-to-cholesky\">lower_triangular_to_cholesky</a></li>\n<li><a class=\"reference internal\" href=\"#id374\">multi_voxel_fit</a></li>\n<li><a class=\"reference internal\" href=\"#id375\">ndindex</a></li>\n<li><a class=\"reference internal\" href=\"#nls-fit-tensor\">nls_fit_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#nls-iter\">nls_iter</a></li>\n<li><a class=\"reference internal\" href=\"#id378\">vec_val_vect</a></li>\n<li><a class=\"reference internal\" href=\"#id379\">wls_fit_tensor</a></li>\n<li><a class=\"reference internal\" href=\"#wls-iter\">wls_iter</a></li>\n<li><a class=\"reference internal\" href=\"#id382\"><code class=\"docutils literal\"><span class=\"pre\">Cache</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#generalizedqsamplingfit\"><code class=\"docutils literal\"><span class=\"pre\">GeneralizedQSamplingFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#generalizedqsamplingmodel\"><code class=\"docutils literal\"><span class=\"pre\">GeneralizedQSamplingModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id390\"><code class=\"docutils literal\"><span class=\"pre\">OdfFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id391\"><code class=\"docutils literal\"><span class=\"pre\">OdfModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#equatorial-maximum\">equatorial_maximum</a></li>\n<li><a class=\"reference internal\" href=\"#equatorial-zone-vertices\">equatorial_zone_vertices</a></li>\n<li><a class=\"reference internal\" href=\"#gfa\">gfa</a></li>\n<li><a class=\"reference internal\" href=\"#id392\">local_maxima</a></li>\n<li><a class=\"reference internal\" href=\"#id393\">multi_voxel_fit</a></li>\n<li><a class=\"reference internal\" href=\"#normalize-qa\">normalize_qa</a></li>\n<li><a class=\"reference internal\" href=\"#npa\">npa</a></li>\n<li><a class=\"reference internal\" href=\"#odf-sum\">odf_sum</a></li>\n<li><a class=\"reference internal\" href=\"#patch-maximum\">patch_maximum</a></li>\n<li><a class=\"reference internal\" href=\"#patch-sum\">patch_sum</a></li>\n<li><a class=\"reference internal\" href=\"#patch-vertices\">patch_vertices</a></li>\n<li><a class=\"reference internal\" href=\"#polar-zone-vertices\">polar_zone_vertices</a></li>\n<li><a class=\"reference internal\" href=\"#remove-similar-vertices\">remove_similar_vertices</a></li>\n<li><a class=\"reference internal\" href=\"#squared-radial-component\">squared_radial_component</a></li>\n<li><a class=\"reference internal\" href=\"#triple-odf-maxima\">triple_odf_maxima</a></li>\n<li><a class=\"reference internal\" href=\"#upper-hemi-map\">upper_hemi_map</a></li>\n<li><a class=\"reference internal\" href=\"#interpolator\"><code class=\"docutils literal\"><span class=\"pre\">Interpolator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#nearestneighborinterpolator\"><code class=\"docutils literal\"><span class=\"pre\">NearestNeighborInterpolator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#outsideimage\"><code class=\"docutils literal\"><span class=\"pre\">OutsideImage</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#trilinearinterpolator\"><code class=\"docutils literal\"><span class=\"pre\">TriLinearInterpolator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#array\">array</a></li>\n<li><a class=\"reference internal\" href=\"#trilinear-interp\">trilinear_interp</a></li>\n<li><a class=\"reference internal\" href=\"#ivimfit\"><code class=\"docutils literal\"><span class=\"pre\">IvimFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#ivimmodel\"><code class=\"docutils literal\"><span class=\"pre\">IvimModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#looseversion\"><code class=\"docutils literal\"><span class=\"pre\">LooseVersion</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id396\"><code class=\"docutils literal\"><span class=\"pre\">ReconstModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#f-d-star-error\">f_D_star_error</a></li>\n<li><a class=\"reference internal\" href=\"#f-d-star-prediction\">f_D_star_prediction</a></li>\n<li><a class=\"reference internal\" href=\"#ivim-prediction\">ivim_prediction</a></li>\n<li><a class=\"reference internal\" href=\"#least-squares\">least_squares</a></li>\n<li><a class=\"reference internal\" href=\"#id418\">multi_voxel_fit</a></li>\n<li><a class=\"reference internal\" href=\"#id419\"><code class=\"docutils literal\"><span class=\"pre\">Cache</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#mapmrifit\"><code class=\"docutils literal\"><span class=\"pre\">MapmriFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#mapmrimodel\"><code class=\"docutils literal\"><span class=\"pre\">MapmriModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#optimizer\"><code class=\"docutils literal\"><span class=\"pre\">Optimizer</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id495\"><code class=\"docutils literal\"><span class=\"pre\">ReconstFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id496\"><code class=\"docutils literal\"><span class=\"pre\">ReconstModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#b-mat\">b_mat</a></li>\n<li><a class=\"reference internal\" href=\"#b-mat-isotropic\">b_mat_isotropic</a></li>\n<li><a class=\"reference internal\" href=\"#binomialfloat\">binomialfloat</a></li>\n<li><a class=\"reference internal\" href=\"#id501\">cart2sphere</a></li>\n<li><a class=\"reference internal\" href=\"#create-rspace\">create_rspace</a></li>\n<li><a class=\"reference internal\" href=\"#delta\">delta</a></li>\n<li><a class=\"reference internal\" href=\"#factorial\">factorial</a></li>\n<li><a class=\"reference internal\" href=\"#factorial2\">factorial2</a></li>\n<li><a class=\"reference internal\" href=\"#gcv-cost-function\">gcv_cost_function</a></li>\n<li><a class=\"reference internal\" href=\"#generalized-crossvalidation\">generalized_crossvalidation</a></li>\n<li><a class=\"reference internal\" href=\"#generalized-crossvalidation-array\">generalized_crossvalidation_array</a></li>\n<li><a class=\"reference internal\" href=\"#genlaguerre\">genlaguerre</a></li>\n<li><a class=\"reference internal\" href=\"#id505\">gradient_table</a></li>\n<li><a class=\"reference internal\" href=\"#hermite\">hermite</a></li>\n<li><a class=\"reference internal\" href=\"#isotropic-scale-factor\">isotropic_scale_factor</a></li>\n<li><a class=\"reference internal\" href=\"#map-laplace-s\">map_laplace_s</a></li>\n<li><a class=\"reference internal\" href=\"#map-laplace-t\">map_laplace_t</a></li>\n<li><a class=\"reference internal\" href=\"#map-laplace-u\">map_laplace_u</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-stu-reg-matrices\">mapmri_STU_reg_matrices</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-index-matrix\">mapmri_index_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-k-mu-dependent\">mapmri_isotropic_K_mu_dependent</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-k-mu-independent\">mapmri_isotropic_K_mu_independent</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-m-mu-dependent\">mapmri_isotropic_M_mu_dependent</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-m-mu-independent\">mapmri_isotropic_M_mu_independent</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-index-matrix\">mapmri_isotropic_index_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-laplacian-reg-matrix\">mapmri_isotropic_laplacian_reg_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-odf-matrix\">mapmri_isotropic_odf_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-odf-sh-matrix\">mapmri_isotropic_odf_sh_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-phi-matrix\">mapmri_isotropic_phi_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-psi-matrix\">mapmri_isotropic_psi_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-radial-pdf-basis\">mapmri_isotropic_radial_pdf_basis</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-isotropic-radial-signal-basis\">mapmri_isotropic_radial_signal_basis</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-laplacian-reg-matrix\">mapmri_laplacian_reg_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-odf-matrix\">mapmri_odf_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-phi-1d\">mapmri_phi_1d</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-phi-matrix\">mapmri_phi_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-psi-1d\">mapmri_psi_1d</a></li>\n<li><a class=\"reference internal\" href=\"#mapmri-psi-matrix\">mapmri_psi_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#id551\">multi_voxel_fit</a></li>\n<li><a class=\"reference internal\" href=\"#optional-package\">optional_package</a></li>\n<li><a class=\"reference internal\" href=\"#id552\">real_sph_harm</a></li>\n<li><a class=\"reference internal\" href=\"#id553\">sph_harm_ind_list</a></li>\n<li><a class=\"reference internal\" href=\"#warn\">warn</a></li>\n<li><a class=\"reference internal\" href=\"#callablearray\"><code class=\"docutils literal\"><span class=\"pre\">CallableArray</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#multivoxelfit\"><code class=\"docutils literal\"><span class=\"pre\">MultiVoxelFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id554\"><code class=\"docutils literal\"><span class=\"pre\">ReconstFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#as-strided\">as_strided</a></li>\n<li><a class=\"reference internal\" href=\"#id555\">multi_voxel_fit</a></li>\n<li><a class=\"reference internal\" href=\"#id556\">ndindex</a></li>\n<li><a class=\"reference internal\" href=\"#id557\"><code class=\"docutils literal\"><span class=\"pre\">OdfFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id558\"><code class=\"docutils literal\"><span class=\"pre\">OdfModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id559\"><code class=\"docutils literal\"><span class=\"pre\">ReconstFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id560\"><code class=\"docutils literal\"><span class=\"pre\">ReconstModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id561\">gfa</a></li>\n<li><a class=\"reference internal\" href=\"#minmax-normalize\">minmax_normalize</a></li>\n<li><a class=\"reference internal\" href=\"#hemisphere\"><code class=\"docutils literal\"><span class=\"pre\">HemiSphere</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#intemporarydirectory\"><code class=\"docutils literal\"><span class=\"pre\">InTemporaryDirectory</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#peaksandmetrics\"><code class=\"docutils literal\"><span class=\"pre\">PeaksAndMetrics</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#peaksandmetricsdirectiongetter\"><code class=\"docutils literal\"><span class=\"pre\">PeaksAndMetricsDirectionGetter</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sphere\"><code class=\"docutils literal\"><span class=\"pre\">Sphere</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#repeat\"><code class=\"docutils literal\"><span class=\"pre\">repeat</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#xrange\"><code class=\"docutils literal\"><span class=\"pre\">xrange</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#pool\">Pool</a></li>\n<li><a class=\"reference internal\" href=\"#cpu-count\">cpu_count</a></li>\n<li><a class=\"reference internal\" href=\"#id562\">gfa</a></li>\n<li><a class=\"reference internal\" href=\"#id563\">local_maxima</a></li>\n<li><a class=\"reference internal\" href=\"#id564\">ndindex</a></li>\n<li><a class=\"reference internal\" href=\"#peak-directions\">peak_directions</a></li>\n<li><a class=\"reference internal\" href=\"#peak-directions-nl\">peak_directions_nl</a></li>\n<li><a class=\"reference internal\" href=\"#id565\">peaks_from_model</a></li>\n<li><a class=\"reference internal\" href=\"#id566\">remove_similar_vertices</a></li>\n<li><a class=\"reference internal\" href=\"#reshape-peaks-for-visualization\">reshape_peaks_for_visualization</a></li>\n<li><a class=\"reference internal\" href=\"#search-descending\">search_descending</a></li>\n<li><a class=\"reference internal\" href=\"#sh-to-sf-matrix\">sh_to_sf_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#id567\">warn</a></li>\n<li><a class=\"reference internal\" href=\"#id568\"><code class=\"docutils literal\"><span class=\"pre\">Cache</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#exponentialisotropicfit\"><code class=\"docutils literal\"><span class=\"pre\">ExponentialIsotropicFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#exponentialisotropicmodel\"><code class=\"docutils literal\"><span class=\"pre\">ExponentialIsotropicModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#isotropicfit\"><code class=\"docutils literal\"><span class=\"pre\">IsotropicFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#isotropicmodel\"><code class=\"docutils literal\"><span class=\"pre\">IsotropicModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id569\"><code class=\"docutils literal\"><span class=\"pre\">ReconstFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id570\"><code class=\"docutils literal\"><span class=\"pre\">ReconstModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sparsefasciclefit\"><code class=\"docutils literal\"><span class=\"pre\">SparseFascicleFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sparsefasciclemodel\"><code class=\"docutils literal\"><span class=\"pre\">SparseFascicleModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id575\">auto_attr</a></li>\n<li><a class=\"reference internal\" href=\"#nanmean\">nanmean</a></li>\n<li><a class=\"reference internal\" href=\"#id576\">optional_package</a></li>\n<li><a class=\"reference internal\" href=\"#sfm-design-matrix\">sfm_design_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#id581\"><code class=\"docutils literal\"><span class=\"pre\">Cache</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#csaodfmodel\"><code class=\"docutils literal\"><span class=\"pre\">CsaOdfModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id583\"><code class=\"docutils literal\"><span class=\"pre\">LooseVersion</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id584\"><code class=\"docutils literal\"><span class=\"pre\">OdfFit</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id585\"><code class=\"docutils literal\"><span class=\"pre\">OdfModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#opdtmodel\"><code class=\"docutils literal\"><span class=\"pre\">OpdtModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#qballbasemodel\"><code class=\"docutils literal\"><span class=\"pre\">QballBaseModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#qballmodel\"><code class=\"docutils literal\"><span class=\"pre\">QballModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#residualbootstrapwrapper\"><code class=\"docutils literal\"><span class=\"pre\">ResidualBootstrapWrapper</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id589\"><code class=\"docutils literal\"><span class=\"pre\">SphHarmFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#id590\"><code class=\"docutils literal\"><span class=\"pre\">SphHarmModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#anisotropic-power\">anisotropic_power</a></li>\n<li><a class=\"reference internal\" href=\"#id593\">auto_attr</a></li>\n<li><a class=\"reference internal\" href=\"#bootstrap-data-array\">bootstrap_data_array</a></li>\n<li><a class=\"reference internal\" href=\"#bootstrap-data-voxel\">bootstrap_data_voxel</a></li>\n<li><a class=\"reference internal\" href=\"#calculate-max-order\">calculate_max_order</a></li>\n<li><a class=\"reference internal\" href=\"#id597\">cart2sphere</a></li>\n<li><a class=\"reference internal\" href=\"#concatenate\">concatenate</a></li>\n<li><a class=\"reference internal\" href=\"#diag\">diag</a></li>\n<li><a class=\"reference internal\" href=\"#diff\">diff</a></li>\n<li><a class=\"reference internal\" href=\"#dot\">dot</a></li>\n<li><a class=\"reference internal\" href=\"#empty\">empty</a></li>\n<li><a class=\"reference internal\" href=\"#eye\">eye</a></li>\n<li><a class=\"reference internal\" href=\"#id598\">forward_sdeconv_mat</a></li>\n<li><a class=\"reference internal\" href=\"#gammaln\">gammaln</a></li>\n<li><a class=\"reference internal\" href=\"#gen-dirac\">gen_dirac</a></li>\n<li><a class=\"reference internal\" href=\"#hat\">hat</a></li>\n<li><a class=\"reference internal\" href=\"#id599\">lazy_index</a></li>\n<li><a class=\"reference internal\" href=\"#lcr-matrix\">lcr_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#id600\">lpn</a></li>\n<li><a class=\"reference internal\" href=\"#normalize-data\">normalize_data</a></li>\n<li><a class=\"reference internal\" href=\"#order-from-ncoef\">order_from_ncoef</a></li>\n<li><a class=\"reference internal\" href=\"#id602\">pinv</a></li>\n<li><a class=\"reference internal\" href=\"#randint\">randint</a></li>\n<li><a class=\"reference internal\" href=\"#id605\">real_sph_harm</a></li>\n<li><a class=\"reference internal\" href=\"#id606\">real_sym_sh_basis</a></li>\n<li><a class=\"reference internal\" href=\"#real-sym-sh-mrtrix\">real_sym_sh_mrtrix</a></li>\n<li><a class=\"reference internal\" href=\"#sf-to-sh\">sf_to_sh</a></li>\n<li><a class=\"reference internal\" href=\"#id609\">sh_to_rh</a></li>\n<li><a class=\"reference internal\" href=\"#sh-to-sf\">sh_to_sf</a></li>\n<li><a class=\"reference internal\" href=\"#id611\">sh_to_sf_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#smooth-pinv\">smooth_pinv</a></li>\n<li><a class=\"reference internal\" href=\"#id612\">sph_harm_ind_list</a></li>\n<li><a class=\"reference internal\" href=\"#spherical-harmonics\">spherical_harmonics</a></li>\n<li><a class=\"reference internal\" href=\"#svd\">svd</a></li>\n<li><a class=\"reference internal\" href=\"#unique\">unique</a></li>\n<li><a class=\"reference internal\" href=\"#id613\"><code class=\"docutils literal\"><span class=\"pre\">Cache</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#shorefit\"><code class=\"docutils literal\"><span class=\"pre\">ShoreFit</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#shoremodel\"><code class=\"docutils literal\"><span class=\"pre\">ShoreModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id635\">cart2sphere</a></li>\n<li><a class=\"reference internal\" href=\"#id636\">create_rspace</a></li>\n<li><a class=\"reference internal\" href=\"#id637\">factorial</a></li>\n<li><a class=\"reference internal\" href=\"#id638\">genlaguerre</a></li>\n<li><a class=\"reference internal\" href=\"#l-shore\">l_shore</a></li>\n<li><a class=\"reference internal\" href=\"#id639\">multi_voxel_fit</a></li>\n<li><a class=\"reference internal\" href=\"#n-shore\">n_shore</a></li>\n<li><a class=\"reference internal\" href=\"#id640\">optional_package</a></li>\n<li><a class=\"reference internal\" href=\"#id641\">real_sph_harm</a></li>\n<li><a class=\"reference internal\" href=\"#shore-indices\">shore_indices</a></li>\n<li><a class=\"reference internal\" href=\"#shore-matrix\">shore_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#shore-matrix-odf\">shore_matrix_odf</a></li>\n<li><a class=\"reference internal\" href=\"#shore-matrix-pdf\">shore_matrix_pdf</a></li>\n<li><a class=\"reference internal\" href=\"#shore-order\">shore_order</a></li>\n<li><a class=\"reference internal\" href=\"#id648\">warn</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/dipy.reconst", "sidebars": null, "customsidebar": null, "alabaster_version": "0.7.10"}