{"parents": [], "prev": null, "next": null, "title": "Tracking Quick Start", "meta": {}, "body": "<div class=\"section\" id=\"tracking-quick-start\">\n<span id=\"example-tracking-quick-start\"></span><h1>Tracking Quick Start<a class=\"headerlink\" href=\"#tracking-quick-start\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This example shows how to perform fast fiber tracking using <a class=\"reference external\" href=\"http://dipy.org\">DIPY</a>\n<a class=\"reference internal\" href=\"#garyfallidis12\" id=\"id1\">[Garyfallidis12]</a>.</p>\n<p>We will use Constrained Spherical Deconvolution (CSD) <a class=\"reference internal\" href=\"#tournier07\" id=\"id2\">[Tournier07]</a> for local\nreconstruction and then generate deterministic streamlines using the fiber\ndirections (peaks) from CSD and fractional anisotropic (FA) from DTI as a\nstopping criteria for the tracking.</p>\n<p>Let\u2019s load the necessary modules.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.local</span> <span class=\"k\">import</span> <span class=\"n\">LocalTracking</span><span class=\"p\">,</span> <span class=\"n\">ThresholdTissueClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.utils</span> <span class=\"k\">import</span> <span class=\"n\">random_seeds_from_mask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.dti</span> <span class=\"k\">import</span> <span class=\"n\">TensorModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.csdeconv</span> <span class=\"k\">import</span> <span class=\"p\">(</span><span class=\"n\">ConstrainedSphericalDeconvModel</span><span class=\"p\">,</span>\n                                   <span class=\"n\">auto_response</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.direction</span> <span class=\"k\">import</span> <span class=\"n\">peaks_from_model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">fetch_stanford_hardi</span><span class=\"p\">,</span> <span class=\"n\">read_stanford_hardi</span><span class=\"p\">,</span> <span class=\"n\">get_sphere</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.mask</span> <span class=\"k\">import</span> <span class=\"n\">median_otsu</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">actor</span><span class=\"p\">,</span> <span class=\"n\">window</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.image</span> <span class=\"k\">import</span> <span class=\"n\">save_nifti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nibabel.streamlines</span> <span class=\"k\">import</span> <span class=\"n\">save</span> <span class=\"k\">as</span> <span class=\"n\">save_trk</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nibabel.streamlines</span> <span class=\"k\">import</span> <span class=\"n\">Tractogram</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.streamline</span> <span class=\"k\">import</span> <span class=\"n\">Streamlines</span>\n</pre></div>\n</div>\n<p>Enables/disables interactive visualization</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">interactive</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre></div>\n</div>\n<p>Load one of the available datasets with 150 gradients on the sphere and 10 b0s</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fetch_stanford_hardi</span><span class=\"p\">()</span>\n<span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">read_stanford_hardi</span><span class=\"p\">()</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>Create a brain mask. This dataset is a bit difficult to segment with the\ndefault <code class=\"docutils literal notranslate\"><span class=\"pre\">median_otsu</span></code> parameters (see <a class=\"reference internal\" href=\"../brain_extraction_dwi/#example-brain-extraction-dwi\"><span class=\"std std-ref\">Brain segmentation with median_otsu</span></a>)\ntherefore we use here more advanced options.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">maskdata</span><span class=\"p\">,</span> <span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">median_otsu</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                             <span class=\"n\">vol_idx</span><span class=\"o\">=</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">),</span> <span class=\"n\">dilate</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>For the Constrained Spherical Deconvolution we need to estimate the response\nfunction (see <a class=\"reference internal\" href=\"../reconst_csd/#example-reconst-csd\"><span class=\"std std-ref\">Reconstruction with Constrained Spherical Deconvolution</span></a>) and create a model.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">ratio</span> <span class=\"o\">=</span> <span class=\"n\">auto_response</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">roi_radius</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">fa_thr</span><span class=\"o\">=</span><span class=\"mf\">0.7</span><span class=\"p\">)</span>\n\n<span class=\"n\">csd_model</span> <span class=\"o\">=</span> <span class=\"n\">ConstrainedSphericalDeconvModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Next, we use <code class=\"docutils literal notranslate\"><span class=\"pre\">peaks_from_model</span></code> to fit the data and calculated the fiber\ndirections in all voxels.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric724&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">csd_peaks</span> <span class=\"o\">=</span> <span class=\"n\">peaks_from_model</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">csd_model</span><span class=\"p\">,</span>\n                             <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span>\n                             <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">sphere</span><span class=\"p\">,</span>\n                             <span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">mask</span><span class=\"p\">,</span>\n                             <span class=\"n\">relative_peak_threshold</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n                             <span class=\"n\">min_separation_angle</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span>\n                             <span class=\"n\">parallel</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>For the tracking part, we will use the fiber directions from the <code class=\"docutils literal notranslate\"><span class=\"pre\">csd_model</span></code>\nbut stop tracking in areas where fractional anisotropy is low (&lt; 0.1).\nTo derive the FA, used here as a stopping criterion, we would need to fit a\ntensor model first. Here, we fit the tensor using weighted least squares (WLS).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">tensor_model</span> <span class=\"o\">=</span> <span class=\"n\">TensorModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">fit_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;WLS&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">tensor_fit</span> <span class=\"o\">=</span> <span class=\"n\">tensor_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"p\">)</span>\n\n<span class=\"n\">fa</span> <span class=\"o\">=</span> <span class=\"n\">tensor_fit</span><span class=\"o\">.</span><span class=\"n\">fa</span>\n</pre></div>\n</div>\n<p>In this simple example we can use FA to stop tracking. Here we stop tracking\nwhen FA &lt; 0.1.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">tissue_classifier</span> <span class=\"o\">=</span> <span class=\"n\">ThresholdTissueClassifier</span><span class=\"p\">(</span><span class=\"n\">fa</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now, we need to set starting points for propagating each track. We call those\nseeds. Using <code class=\"docutils literal notranslate\"><span class=\"pre\">random_seeds_from_mask</span></code> we can select a specific number of\nseeds (<code class=\"docutils literal notranslate\"><span class=\"pre\">seeds_count</span></code>) in each voxel where the mask <code class=\"docutils literal notranslate\"><span class=\"pre\">fa</span> <span class=\"pre\">&gt;</span> <span class=\"pre\">0.3</span></code> is true.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">seeds</span> <span class=\"o\">=</span> <span class=\"n\">random_seeds_from_mask</span><span class=\"p\">(</span><span class=\"n\">fa</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"n\">seeds_count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>For quality assurance we can also visualize a slice from the direction field\nwhich we will use as the basis to perform the tracking.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ren</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Renderer</span><span class=\"p\">()</span>\n<span class=\"n\">ren</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">peak_slicer</span><span class=\"p\">(</span><span class=\"n\">csd_peaks</span><span class=\"o\">.</span><span class=\"n\">peak_dirs</span><span class=\"p\">,</span>\n                          <span class=\"n\">csd_peaks</span><span class=\"o\">.</span><span class=\"n\">peak_values</span><span class=\"p\">,</span>\n                          <span class=\"n\">colors</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"mi\">900</span><span class=\"p\">))</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;csd_direction_field.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"mi\">900</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id5\">\n<img alt=\"../../_images/csd_direction_field.png\" src=\"../../_images/csd_direction_field.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Direction Field (peaks)</strong></span></p>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">EuDX</span></code> <a class=\"reference internal\" href=\"#garyfallidis12\" id=\"id3\">[Garyfallidis12]</a> is a fast algorithm that we use here to generate\nstreamlines. This algorithm is what is used here and the default option\nwhen providing the output of peaks directly in LocalTracking.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">streamline_generator</span> <span class=\"o\">=</span> <span class=\"n\">LocalTracking</span><span class=\"p\">(</span><span class=\"n\">csd_peaks</span><span class=\"p\">,</span> <span class=\"n\">tissue_classifier</span><span class=\"p\">,</span>\n                                     <span class=\"n\">seeds</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span>\n                                     <span class=\"n\">step_size</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">Streamlines</span><span class=\"p\">(</span><span class=\"n\">streamline_generator</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The total number of streamlines is shown below.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>To increase the number of streamlines you can change the parameter\n<code class=\"docutils literal notranslate\"><span class=\"pre\">seeds_count</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">random_seeds_from_mask</span></code>.</p>\n<p>We can visualize the streamlines using <code class=\"docutils literal notranslate\"><span class=\"pre\">actor.line</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">actor.streamtube</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ren</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">ren</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"mi\">900</span><span class=\"p\">))</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;Saving illustration as det_streamlines.png&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;det_streamlines.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"mi\">900</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id6\">\n<img alt=\"../../_images/det_streamlines.png\" src=\"../../_images/det_streamlines.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Deterministic streamlines using EuDX (new framework)</strong></span></p>\n</div>\n<p>To learn more about this process you could start playing with the number of\nseed points or, even better, specify seeds to be in specific regions of interest\nin the brain.</p>\n<p>Save the resulting streamlines in a Trackvis (.trk) format and FA as\nNifti (.nii.gz).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">save_trk</span><span class=\"p\">(</span><span class=\"n\">Tractogram</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">affine_to_rasmm</span><span class=\"o\">=</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">affine</span><span class=\"p\">),</span>\n         <span class=\"s1\">&#39;det_streamlines.trk&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">save_nifti</span><span class=\"p\">(</span><span class=\"s1\">&#39;fa_map.nii.gz&#39;</span><span class=\"p\">,</span> <span class=\"n\">fa</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">affine</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>In Windows if you get a runtime error about frozen executable please start\nyour script by adding your code above in a <code class=\"docutils literal notranslate\"><span class=\"pre\">main</span></code> function and use:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n    <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">freeze_support</span><span class=\"p\">()</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table class=\"docutils citation\" frame=\"void\" id=\"garyfallidis12\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Garyfallidis12]</td><td><em>(<a class=\"fn-backref\" href=\"#id1\">1</a>, <a class=\"fn-backref\" href=\"#id3\">2</a>)</em> Garyfallidis E., \u201cTowards an accurate brain tractography\u201d,\nPhD thesis, University of Cambridge, 2012.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"tournier07\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id2\">[Tournier07]</a></td><td>J-D. Tournier, F. Calamante and A. Connelly, \u201cRobust\ndetermination of the fibre orientation distribution in diffusion MRI:\nNon-negativity constrained super-resolved spherical deconvolution\u201d,\nNeuroimage, vol. 35, no. 4, pp. 1459-1472, 2007.</td></tr>\n</tbody>\n</table>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"first admonition-title\">Example source code</p>\n<p class=\"last\">You can download <a class=\"reference download internal\" href=\"../../_downloads/tracking_quick_start.py\" download=\"\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>. This same script is also included in the dipy source distribution under the <code class=\"file docutils literal notranslate\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "examples_built/tracking_quick_start.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Tracking Quick Start</a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples_built/tracking_quick_start", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.11"}